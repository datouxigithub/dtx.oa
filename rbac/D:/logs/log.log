2017-03-16 09:28:37 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@591d0ad2: display name [org.springframework.context.support.ClassPathXmlApplicationContext@591d0ad2]; startup date [Thu Mar 16 09:28:37 CST 2017]; root of context hierarchy
2017-03-16 09:28:37 [ main:43 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:28:37 [ main:46 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:28:37 [ main:80 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:28:37 [ main:80 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:28:40 [ main:2325 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:28:40 [ main:2342 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:28:40 [ main:2367 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:28:40 [ main:2367 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@591d0ad2]: org.springframework.beans.factory.support.DefaultListableBeanFactory@4ed405e2
2017-03-16 09:28:40 [ main:2367 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@591d0ad2: display name [org.springframework.context.support.ClassPathXmlApplicationContext@591d0ad2]; startup date [Thu Mar 16 09:28:37 CST 2017]; root of context hierarchy
2017-03-16 09:28:40 [ main:2379 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:28:40 [ main:2380 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:28:40 [ main:2393 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:28:40 [ main:2405 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:28:40 [ main:2406 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@293e2817]
2017-03-16 09:28:40 [ main:2407 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@33c40638]
2017-03-16 09:28:40 [ main:2408 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ed405e2: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:28:40 [ main:2408 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:28:40 [ main:2408 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:28:40 [ main:2413 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:28:40 [ main:2426 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:28:40 [ main:2427 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:28:40 [ main:2427 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:28:40 [ main:2431 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:28:40 [ main:2431 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:28:40 [ main:2432 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:28:40 [ main:2435 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:28:40 [ main:2435 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:28:40 [ main:2439 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:28:40 [ main:2439 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:28:40 [ main:2439 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:28:40 [ main:2454 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:28:40 [ main:2463 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:28:40 [ main:2464 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:28:40 [ main:2777 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:28:40 [ main:3066 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:28:40 [ main:3068 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:28:40 [ main:3068 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:28:40 [ main:3068 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:28:40 [ main:3073 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:28:40 [ main:3077 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:28:40 [ main:3078 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:28:40 [ main:3083 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:28:40 [ main:3088 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@7819fd0a] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:28:40 [ main:3088 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:28:40 [ main:3089 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:28:40 [ main:3090 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:28:40 [ main:3090 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:28:40 [ main:3090 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:28:40 [ main:3091 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:28:40 [ main:3091 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:28:40 [ main:3097 ] - [ DEBUG ] Adding transactional method [getSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:28:40 [ main:3102 ] - [ DEBUG ] Creating implicit proxy for bean 'hibernateUtil' with 0 common interceptors and 1 specific interceptors
2017-03-16 09:28:40 [ main:3103 ] - [ INFO ] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@4ed405e2: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:28:40 [ main:3103 ] - [ DEBUG ] Retrieved dependent beans for bean 'sessionFactory': [txManager]
2017-03-16 09:28:40 [ main:3103 ] - [ DEBUG ] Invoking destroy() on bean with name 'sessionFactory'
2017-03-16 09:28:40 [ main:3103 ] - [ INFO ] Closing Hibernate SessionFactory
2017-03-16 09:30:39 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4c56ebfb: display name [org.springframework.context.support.ClassPathXmlApplicationContext@4c56ebfb]; startup date [Thu Mar 16 09:30:39 CST 2017]; root of context hierarchy
2017-03-16 09:30:39 [ main:39 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:30:39 [ main:42 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:30:39 [ main:61 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:30:39 [ main:62 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:30:40 [ main:1611 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:30:40 [ main:1629 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:30:40 [ main:1649 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:30:40 [ main:1649 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@4c56ebfb]: org.springframework.beans.factory.support.DefaultListableBeanFactory@f35a686
2017-03-16 09:30:40 [ main:1649 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@4c56ebfb: display name [org.springframework.context.support.ClassPathXmlApplicationContext@4c56ebfb]; startup date [Thu Mar 16 09:30:39 CST 2017]; root of context hierarchy
2017-03-16 09:30:40 [ main:1659 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:30:40 [ main:1659 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:30:40 [ main:1672 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:30:40 [ main:1682 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:30:40 [ main:1684 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2444b625]
2017-03-16 09:30:40 [ main:1685 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2f1632c7]
2017-03-16 09:30:40 [ main:1686 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@f35a686: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:30:40 [ main:1686 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:30:40 [ main:1686 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:30:40 [ main:1690 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:30:40 [ main:1701 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:30:40 [ main:1702 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:30:40 [ main:1702 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:30:40 [ main:1706 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:30:40 [ main:1706 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:30:40 [ main:1707 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:30:40 [ main:1716 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:30:40 [ main:1716 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:30:40 [ main:1719 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:30:40 [ main:1719 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:30:40 [ main:1719 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:30:40 [ main:1730 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:30:40 [ main:1737 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:30:40 [ main:1737 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:30:41 [ main:2013 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:30:41 [ main:2274 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:30:41 [ main:2276 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:30:41 [ main:2276 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:30:41 [ main:2276 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:30:41 [ main:2281 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:30:41 [ main:2286 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:30:41 [ main:2286 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:30:41 [ main:2291 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:30:41 [ main:2298 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@165051aa] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:30:41 [ main:2298 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:30:41 [ main:2299 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:30:41 [ main:2299 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:30:41 [ main:2300 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:30:41 [ main:2300 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:30:41 [ main:2301 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:30:41 [ main:2301 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:30:41 [ main:2302 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:30:41 [ main:2302 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:30:41 [ main:2302 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:30:41 [ main:2302 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:30:41 [ main:2302 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:30:41 [ main:2302 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:30:41 [ main:2306 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:30:41 [ main:2306 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:30:41 [ main:2306 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:30:41 [ main:2306 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:30:41 [ main:2307 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:30:41 [ main:2307 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:30:41 [ main:2308 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:30:41 [ main:2331 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:30:41 [ main:2358 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:30:41 [ main:2358 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:30:41 [ main:2358 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:30:41 [ main:2373 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:30:41 [ main:2373 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:30:41 [ main:2373 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:30:41 [ main:2388 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:30:41 [ main:2388 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:30:41 [ main:2388 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:30:41 [ main:2402 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:30:41 [ main:2402 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:30:41 [ main:2402 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:30:41 [ main:2416 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:30:41 [ main:2416 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:30:41 [ main:2416 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:31:04 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@300f8aa3: display name [org.springframework.context.support.ClassPathXmlApplicationContext@300f8aa3]; startup date [Thu Mar 16 09:31:04 CST 2017]; root of context hierarchy
2017-03-16 09:31:04 [ main:38 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:31:04 [ main:42 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:31:04 [ main:60 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:31:04 [ main:61 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:31:06 [ main:1777 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:31:06 [ main:1794 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:31:06 [ main:1814 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:31:06 [ main:1814 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@300f8aa3]: org.springframework.beans.factory.support.DefaultListableBeanFactory@54392d44
2017-03-16 09:31:06 [ main:1815 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@300f8aa3: display name [org.springframework.context.support.ClassPathXmlApplicationContext@300f8aa3]; startup date [Thu Mar 16 09:31:04 CST 2017]; root of context hierarchy
2017-03-16 09:31:06 [ main:1824 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:31:06 [ main:1825 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:31:06 [ main:1838 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:31:06 [ main:1848 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:31:06 [ main:1849 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@613fbf92]
2017-03-16 09:31:06 [ main:1850 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5e91af0f]
2017-03-16 09:31:06 [ main:1851 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@54392d44: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:31:06 [ main:1852 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:31:06 [ main:1852 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:31:06 [ main:1855 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:31:06 [ main:1867 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:31:06 [ main:1867 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:31:06 [ main:1868 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:31:06 [ main:1871 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:31:06 [ main:1871 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:31:06 [ main:1872 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:31:06 [ main:1881 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:31:06 [ main:1881 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:31:06 [ main:1884 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:31:06 [ main:1884 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:31:06 [ main:1884 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:31:06 [ main:1895 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:31:06 [ main:1902 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:31:06 [ main:1903 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:31:06 [ main:2179 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:31:06 [ main:2451 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:31:06 [ main:2453 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:31:06 [ main:2453 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:31:06 [ main:2454 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:31:06 [ main:2459 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:31:06 [ main:2463 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:31:06 [ main:2464 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:31:06 [ main:2469 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:31:06 [ main:2475 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@29f3bccc] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:31:06 [ main:2475 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:31:06 [ main:2476 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:31:06 [ main:2476 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:31:06 [ main:2476 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:31:06 [ main:2476 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:31:06 [ main:2478 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:31:06 [ main:2478 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:31:06 [ main:2483 ] - [ DEBUG ] Adding transactional method [getSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:31:06 [ main:2488 ] - [ DEBUG ] Creating implicit proxy for bean 'hibernateUtil' with 0 common interceptors and 1 specific interceptors
2017-03-16 09:31:06 [ main:2488 ] - [ INFO ] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@54392d44: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:31:06 [ main:2488 ] - [ DEBUG ] Retrieved dependent beans for bean 'sessionFactory': [txManager]
2017-03-16 09:31:06 [ main:2489 ] - [ DEBUG ] Invoking destroy() on bean with name 'sessionFactory'
2017-03-16 09:31:06 [ main:2489 ] - [ INFO ] Closing Hibernate SessionFactory
2017-03-16 09:32:40 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5a2023f3: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5a2023f3]; startup date [Thu Mar 16 09:32:40 CST 2017]; root of context hierarchy
2017-03-16 09:32:40 [ main:38 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:32:40 [ main:53 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:32:40 [ main:74 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:32:40 [ main:76 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:32:42 [ main:2479 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:32:42 [ main:2497 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:32:42 [ main:2519 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:32:42 [ main:2519 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@5a2023f3]: org.springframework.beans.factory.support.DefaultListableBeanFactory@16668de5
2017-03-16 09:32:42 [ main:2519 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@5a2023f3: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5a2023f3]; startup date [Thu Mar 16 09:32:40 CST 2017]; root of context hierarchy
2017-03-16 09:32:42 [ main:2530 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:32:42 [ main:2531 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:32:42 [ main:2543 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:32:42 [ main:2554 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:32:42 [ main:2556 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@9320ebf]
2017-03-16 09:32:42 [ main:2557 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4b7dd928]
2017-03-16 09:32:42 [ main:2558 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@16668de5: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:32:42 [ main:2558 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:32:42 [ main:2558 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:32:42 [ main:2566 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:32:42 [ main:2580 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:32:42 [ main:2580 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:32:42 [ main:2581 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:32:42 [ main:2585 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:32:42 [ main:2585 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:32:42 [ main:2586 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:32:42 [ main:2590 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:32:42 [ main:2590 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:32:42 [ main:2594 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:32:42 [ main:2594 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:32:42 [ main:2594 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:32:43 [ main:2611 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:32:43 [ main:2618 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:32:43 [ main:2620 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:32:43 [ main:2892 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:32:43 [ main:3331 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:32:43 [ main:3333 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:32:43 [ main:3333 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:32:43 [ main:3333 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:32:43 [ main:3338 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:32:43 [ main:3342 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:32:43 [ main:3342 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:32:43 [ main:3347 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:32:43 [ main:3352 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@73d9db02] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:32:43 [ main:3353 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:32:43 [ main:3354 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:32:43 [ main:3354 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:32:43 [ main:3354 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:32:43 [ main:3354 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:32:43 [ main:3355 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:32:43 [ main:3355 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:32:43 [ main:3364 ] - [ DEBUG ] Adding transactional method [getSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:32:43 [ main:3369 ] - [ DEBUG ] Creating implicit proxy for bean 'hibernateUtil' with 0 common interceptors and 1 specific interceptors
2017-03-16 09:32:43 [ main:3369 ] - [ INFO ] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@16668de5: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:32:43 [ main:3369 ] - [ DEBUG ] Retrieved dependent beans for bean 'sessionFactory': [txManager]
2017-03-16 09:32:43 [ main:3369 ] - [ DEBUG ] Invoking destroy() on bean with name 'sessionFactory'
2017-03-16 09:32:43 [ main:3369 ] - [ INFO ] Closing Hibernate SessionFactory
2017-03-16 09:39:21 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6963c17d: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6963c17d]; startup date [Thu Mar 16 09:39:21 CST 2017]; root of context hierarchy
2017-03-16 09:39:21 [ main:56 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:39:21 [ main:85 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:39:21 [ main:116 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:39:21 [ main:118 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:39:23 [ main:1691 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:39:23 [ main:1718 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:39:23 [ main:1745 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:39:23 [ main:1745 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@6963c17d]: org.springframework.beans.factory.support.DefaultListableBeanFactory@26edc0e0
2017-03-16 09:39:23 [ main:1745 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@6963c17d: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6963c17d]; startup date [Thu Mar 16 09:39:21 CST 2017]; root of context hierarchy
2017-03-16 09:39:23 [ main:1756 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:39:23 [ main:1757 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:39:23 [ main:1773 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:39:23 [ main:1790 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:39:23 [ main:1791 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@35662250]
2017-03-16 09:39:23 [ main:1793 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@333bf7d0]
2017-03-16 09:39:23 [ main:1794 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@26edc0e0: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:39:23 [ main:1794 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:39:23 [ main:1794 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:39:23 [ main:1805 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:39:23 [ main:1825 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:23 [ main:1825 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:23 [ main:1826 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:39:23 [ main:1832 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:39:23 [ main:1832 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:39:23 [ main:1834 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:39:23 [ main:1838 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:39:23 [ main:1838 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:23 [ main:1843 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:39:23 [ main:1843 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:39:23 [ main:1843 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:39:23 [ main:1866 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:39:23 [ main:1874 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:39:23 [ main:1875 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:39:23 [ main:2222 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:39:24 [ main:2766 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:24 [ main:2768 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:39:24 [ main:2769 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:39:24 [ main:2769 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:39:24 [ main:2773 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:39:24 [ main:2777 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:39:24 [ main:2777 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:24 [ main:2785 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:39:24 [ main:2790 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@414a60da] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:39:24 [ main:2790 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:24 [ main:2791 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:39:24 [ main:2791 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:39:24 [ main:2791 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:39:24 [ main:2791 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:39:24 [ main:2793 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:39:24 [ main:2793 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:24 [ main:2807 ] - [ DEBUG ] Adding transactional method [getSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:39:24 [ main:2815 ] - [ DEBUG ] Creating implicit proxy for bean 'hibernateUtil' with 0 common interceptors and 1 specific interceptors
2017-03-16 09:39:24 [ main:2821 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.util.HibernateUtil@1ae0b4e5]
2017-03-16 09:39:24 [ main:2879 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:39:24 [ main:2879 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:39:24 [ main:2880 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:39:24 [ main:2882 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:39:24 [ main:2882 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:39:24 [ main:2882 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:39:24 [ main:2882 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:39:24 [ main:2885 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.SessionFactory dtx.oa.util.HibernateUtil.getSessionFactory()
2017-03-16 09:39:24 [ main:2885 ] - [ DEBUG ] Adding transactional method [getSession] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:39:24 [ main:2885 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.Session dtx.oa.util.HibernateUtil.getSession()
2017-03-16 09:39:24 [ main:2885 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:39:24 [ main:2885 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 09:39:24 [ main:2885 ] - [ DEBUG ] Adding transactional method [closeSession] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.closeSession(org.hibernate.Session)
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:24 [ main:2886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 09:39:24 [ main:2887 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 09:39:24 [ main:2887 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:24 [ main:2887 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:24 [ main:2887 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 09:39:24 [ main:2887 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 09:39:24 [ main:2887 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 09:39:24 [ main:2888 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 09:39:24 [ main:2888 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 09:39:24 [ main:2888 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:24 [ main:2888 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 09:39:24 [ main:2888 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 09:39:24 [ main:2888 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 09:39:24 [ main:2888 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 09:39:24 [ main:2905 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:39:24 [ main:2905 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:39:24 [ main:2905 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:39:24 [ main:2905 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:39:24 [ main:2905 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:39 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@63661834: display name [org.springframework.context.support.ClassPathXmlApplicationContext@63661834]; startup date [Thu Mar 16 09:39:39 CST 2017]; root of context hierarchy
2017-03-16 09:39:39 [ main:50 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:39:39 [ main:52 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:39:39 [ main:76 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:39:39 [ main:77 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:39:42 [ main:2963 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:39:42 [ main:2993 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:39:42 [ main:3015 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:39:42 [ main:3015 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@63661834]: org.springframework.beans.factory.support.DefaultListableBeanFactory@7e473201
2017-03-16 09:39:42 [ main:3015 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@63661834: display name [org.springframework.context.support.ClassPathXmlApplicationContext@63661834]; startup date [Thu Mar 16 09:39:39 CST 2017]; root of context hierarchy
2017-03-16 09:39:42 [ main:3027 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:39:42 [ main:3028 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:39:42 [ main:3043 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:39:42 [ main:3059 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:39:42 [ main:3061 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5c4c15d9]
2017-03-16 09:39:42 [ main:3062 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@65c98bf3]
2017-03-16 09:39:42 [ main:3063 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7e473201: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:39:42 [ main:3063 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:39:42 [ main:3064 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:39:42 [ main:3067 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:39:42 [ main:3082 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:42 [ main:3082 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:42 [ main:3083 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:39:42 [ main:3087 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:39:42 [ main:3087 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:39:42 [ main:3088 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:39:42 [ main:3094 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:39:42 [ main:3094 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:42 [ main:3097 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:39:42 [ main:3097 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:39:42 [ main:3097 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:39:42 [ main:3111 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:39:42 [ main:3118 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:39:42 [ main:3119 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:39:43 [ main:3470 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:39:43 [ main:3797 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:43 [ main:3799 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:39:43 [ main:3799 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:39:43 [ main:3799 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:39:43 [ main:3804 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:39:43 [ main:3808 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:39:43 [ main:3809 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:43 [ main:3816 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:39:43 [ main:3821 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@7581c9b] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:39:43 [ main:3821 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:43 [ main:3822 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:39:43 [ main:3823 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:39:43 [ main:3823 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:39:43 [ main:3823 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:39:43 [ main:3826 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:39:43 [ main:3826 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:43 [ main:3832 ] - [ DEBUG ] Adding transactional method [getSession] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:39:43 [ main:3838 ] - [ DEBUG ] Creating implicit proxy for bean 'hibernateUtil' with 0 common interceptors and 1 specific interceptors
2017-03-16 09:39:43 [ main:3844 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.util.HibernateUtil@617e38e9]
2017-03-16 09:39:43 [ main:3898 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:39:43 [ main:3898 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:39:43 [ main:3898 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:39:43 [ main:3901 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:39:43 [ main:3901 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:39:43 [ main:3901 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:39:43 [ main:3901 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:39:43 [ main:3905 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.Session dtx.oa.util.HibernateUtil.getSession()
2017-03-16 09:39:43 [ main:3905 ] - [ DEBUG ] Adding transactional method [closeSession] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:39:43 [ main:3905 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.closeSession(org.hibernate.Session)
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Adding transactional method [getSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.SessionFactory dtx.oa.util.HibernateUtil.getSessionFactory()
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 09:39:43 [ main:3906 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 09:39:43 [ main:3907 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 09:39:43 [ main:3923 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:39:43 [ main:3923 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:39:43 [ main:3923 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:39:43 [ main:3923 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:39:43 [ main:3923 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:39:43 [ main:3923 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:39:43 [ main:3928 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:39:43 [ main:3965 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3f05b336] for Hibernate transaction
2017-03-16 09:39:43 [ main:3966 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3f05b336]
2017-03-16 09:39:43 [ main:3983 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:39:43 [ main:4002 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:39:43 [ main:4003 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3f05b336]
2017-03-16 09:39:43 [ main:4004 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3f05b336] after transaction
2017-03-16 09:39:43 [ main:4004 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:39:43 [ main:4038 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:39:43 [ main:4038 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:39:43 [ main:4041 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@62f570b5] for Hibernate transaction
2017-03-16 09:39:43 [ main:4042 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@62f570b5]
2017-03-16 09:39:43 [ main:4044 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:39:43 [ main:4044 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:39:43 [ main:4044 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@62f570b5]
2017-03-16 09:39:43 [ main:4045 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@62f570b5] after transaction
2017-03-16 09:39:43 [ main:4045 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:39:43 [ main:4063 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:39:43 [ main:4064 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:39:43 [ main:4064 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@c76abcb] for Hibernate transaction
2017-03-16 09:39:43 [ main:4064 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@c76abcb]
2017-03-16 09:39:43 [ main:4064 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:39:43 [ main:4064 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:39:43 [ main:4064 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@c76abcb]
2017-03-16 09:39:43 [ main:4065 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@c76abcb] after transaction
2017-03-16 09:39:43 [ main:4065 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:39:43 [ main:4081 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:39:43 [ main:4081 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:39:43 [ main:4081 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5dfc8cea] for Hibernate transaction
2017-03-16 09:39:43 [ main:4081 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5dfc8cea]
2017-03-16 09:39:43 [ main:4082 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:39:43 [ main:4082 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:39:43 [ main:4082 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5dfc8cea]
2017-03-16 09:39:43 [ main:4083 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5dfc8cea] after transaction
2017-03-16 09:39:43 [ main:4083 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:39:43 [ main:4101 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:39:43 [ main:4101 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:39:43 [ main:4101 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@42924a3b] for Hibernate transaction
2017-03-16 09:39:43 [ main:4101 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@42924a3b]
2017-03-16 09:39:43 [ main:4101 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:39:43 [ main:4102 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:39:43 [ main:4102 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@42924a3b]
2017-03-16 09:39:43 [ main:4102 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@42924a3b] after transaction
2017-03-16 09:39:43 [ main:4102 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:39:43 [ main:4120 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:39:43 [ main:4120 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:39:43 [ main:4120 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1199831f] for Hibernate transaction
2017-03-16 09:39:43 [ main:4120 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1199831f]
2017-03-16 09:39:43 [ main:4121 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:39:43 [ main:4121 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:39:43 [ main:4121 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1199831f]
2017-03-16 09:39:43 [ main:4121 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1199831f] after transaction
2017-03-16 09:39:43 [ main:4121 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:40:32 [ main:1 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@752f4771: display name [org.springframework.context.support.ClassPathXmlApplicationContext@752f4771]; startup date [Thu Mar 16 09:40:32 CST 2017]; root of context hierarchy
2017-03-16 09:40:32 [ main:46 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:40:32 [ main:49 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:40:32 [ main:76 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:40:32 [ main:77 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:40:34 [ main:1407 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:40:34 [ main:1432 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:40:34 [ main:1456 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:40:34 [ main:1456 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@752f4771]: org.springframework.beans.factory.support.DefaultListableBeanFactory@1308c2db
2017-03-16 09:40:34 [ main:1457 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@752f4771: display name [org.springframework.context.support.ClassPathXmlApplicationContext@752f4771]; startup date [Thu Mar 16 09:40:32 CST 2017]; root of context hierarchy
2017-03-16 09:40:34 [ main:1471 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:40:34 [ main:1471 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:40:34 [ main:1485 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:40:34 [ main:1497 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:40:34 [ main:1498 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4d8088da]
2017-03-16 09:40:34 [ main:1500 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@74bf1f08]
2017-03-16 09:40:34 [ main:1501 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1308c2db: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:40:34 [ main:1503 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:40:34 [ main:1503 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:40:34 [ main:1507 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:40:34 [ main:1521 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:40:34 [ main:1521 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:40:34 [ main:1522 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:40:34 [ main:1528 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:40:34 [ main:1528 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:40:34 [ main:1529 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:40:34 [ main:1540 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:40:34 [ main:1540 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:40:34 [ main:1543 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:40:34 [ main:1543 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:40:34 [ main:1543 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:40:34 [ main:1555 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:40:34 [ main:1563 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:40:34 [ main:1563 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:40:34 [ main:1907 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:40:34 [ main:2232 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:40:34 [ main:2236 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:40:34 [ main:2237 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:40:34 [ main:2237 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:40:34 [ main:2242 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:40:34 [ main:2246 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:40:34 [ main:2247 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:40:34 [ main:2252 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:40:34 [ main:2258 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@165051aa] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:40:34 [ main:2259 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:40:34 [ main:2260 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:40:34 [ main:2260 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:40:34 [ main:2260 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:40:34 [ main:2260 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:40:34 [ main:2263 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:40:34 [ main:2264 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:40:34 [ main:2264 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:40:34 [ main:2264 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:40:34 [ main:2264 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:40:34 [ main:2264 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:40:34 [ main:2264 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:40:34 [ main:2264 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:40:34 [ main:2269 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:40:34 [ main:2269 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:40:34 [ main:2270 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:40:34 [ main:2270 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:40:34 [ main:2270 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:40:34 [ main:2270 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:40:34 [ main:2272 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:40:34 [ main:2296 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:40:34 [ main:2325 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:40:34 [ main:2325 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:40:34 [ main:2326 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:40:34 [ main:2342 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:40:34 [ main:2343 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:40:34 [ main:2343 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:40:34 [ main:2362 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:40:34 [ main:2362 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:40:34 [ main:2363 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:40:34 [ main:2378 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:40:34 [ main:2378 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:40:34 [ main:2379 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:40:34 [ main:2397 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:40:34 [ main:2397 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:40:34 [ main:2397 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:41:45 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@72fb87d1: display name [org.springframework.context.support.ClassPathXmlApplicationContext@72fb87d1]; startup date [Thu Mar 16 09:41:45 CST 2017]; root of context hierarchy
2017-03-16 09:41:45 [ main:47 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:41:45 [ main:51 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:41:45 [ main:73 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:41:45 [ main:74 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:41:48 [ main:2805 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:41:48 [ main:2835 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:41:48 [ main:2856 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:41:48 [ main:2856 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@72fb87d1]: org.springframework.beans.factory.support.DefaultListableBeanFactory@7cf801ef
2017-03-16 09:41:48 [ main:2857 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@72fb87d1: display name [org.springframework.context.support.ClassPathXmlApplicationContext@72fb87d1]; startup date [Thu Mar 16 09:41:45 CST 2017]; root of context hierarchy
2017-03-16 09:41:48 [ main:2870 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:41:48 [ main:2871 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:41:48 [ main:2885 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:41:48 [ main:2900 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:41:48 [ main:2902 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@257000ea]
2017-03-16 09:41:48 [ main:2903 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@34ff4fb3]
2017-03-16 09:41:48 [ main:2904 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7cf801ef: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:41:48 [ main:2905 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:41:48 [ main:2905 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:41:48 [ main:2908 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:41:48 [ main:2921 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:41:48 [ main:2921 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:41:48 [ main:2922 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:41:48 [ main:2926 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:41:48 [ main:2926 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:41:48 [ main:2928 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:41:48 [ main:2938 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:41:48 [ main:2939 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:41:48 [ main:2942 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:41:48 [ main:2942 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:41:48 [ main:2942 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:41:48 [ main:2957 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:41:48 [ main:2966 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:41:48 [ main:2966 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:41:48 [ main:3314 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:41:49 [ main:3657 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:41:49 [ main:3659 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:41:49 [ main:3659 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:41:49 [ main:3659 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:41:49 [ main:3666 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:41:49 [ main:3671 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:41:49 [ main:3672 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:41:49 [ main:3677 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:41:49 [ main:3683 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@4e9bd989] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:41:49 [ main:3684 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:41:49 [ main:3686 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:41:49 [ main:3687 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:41:49 [ main:3687 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:41:49 [ main:3687 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:41:49 [ main:3692 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:41:49 [ main:3693 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:41:49 [ main:3695 ] - [ DEBUG ] Adding transactional method [getSession] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:41:49 [ main:3703 ] - [ DEBUG ] Creating implicit proxy for bean 'hibernateUtil' with 0 common interceptors and 1 specific interceptors
2017-03-16 09:41:49 [ main:3707 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.util.HibernateUtil@35c86c73]
2017-03-16 09:41:49 [ main:3763 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:41:49 [ main:3763 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:41:49 [ main:3763 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:41:49 [ main:3767 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:41:49 [ main:3767 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:41:49 [ main:3767 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:41:49 [ main:3767 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:41:49 [ main:3770 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.Session dtx.oa.util.HibernateUtil.getSession()
2017-03-16 09:41:49 [ main:3770 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 09:41:49 [ main:3770 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.SessionFactory dtx.oa.util.HibernateUtil.getSessionFactory()
2017-03-16 09:41:49 [ main:3770 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.closeSession(org.hibernate.Session)
2017-03-16 09:41:49 [ main:3770 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 09:41:49 [ main:3770 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 09:41:49 [ main:3770 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 09:41:49 [ main:3770 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 09:41:49 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 09:41:49 [ main:3772 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 09:41:49 [ main:3772 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 09:41:49 [ main:3789 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:41:49 [ main:3789 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:41:49 [ main:3789 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:41:49 [ main:3789 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:41:49 [ main:3789 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:41:49 [ main:3789 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:41:49 [ main:3794 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:41:49 [ main:3828 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@12c0d0f3] for Hibernate transaction
2017-03-16 09:41:49 [ main:3830 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@12c0d0f3]
2017-03-16 09:41:49 [ main:3845 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:41:49 [ main:3865 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:41:49 [ main:3865 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@12c0d0f3]
2017-03-16 09:41:49 [ main:3866 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@12c0d0f3] after transaction
2017-03-16 09:41:49 [ main:3866 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:41:49 [ main:3899 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:41:49 [ main:3899 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:41:49 [ main:3899 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@74f8a7e0] for Hibernate transaction
2017-03-16 09:41:49 [ main:3899 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@74f8a7e0]
2017-03-16 09:41:49 [ main:3902 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:41:49 [ main:3902 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:41:49 [ main:3902 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@74f8a7e0]
2017-03-16 09:41:49 [ main:3903 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@74f8a7e0] after transaction
2017-03-16 09:41:49 [ main:3903 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:41:49 [ main:3919 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:41:49 [ main:3919 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:41:49 [ main:3919 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1297764c] for Hibernate transaction
2017-03-16 09:41:49 [ main:3919 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1297764c]
2017-03-16 09:41:49 [ main:3920 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:41:49 [ main:3920 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:41:49 [ main:3920 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1297764c]
2017-03-16 09:41:49 [ main:3920 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1297764c] after transaction
2017-03-16 09:41:49 [ main:3920 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:41:49 [ main:3938 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:41:49 [ main:3938 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:41:49 [ main:3938 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3fba6481] for Hibernate transaction
2017-03-16 09:41:49 [ main:3938 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3fba6481]
2017-03-16 09:41:49 [ main:3939 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:41:49 [ main:3939 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:41:49 [ main:3939 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3fba6481]
2017-03-16 09:41:49 [ main:3940 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3fba6481] after transaction
2017-03-16 09:41:49 [ main:3940 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:41:49 [ main:3956 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:41:49 [ main:3956 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:41:49 [ main:3956 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@67741b54] for Hibernate transaction
2017-03-16 09:41:49 [ main:3956 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@67741b54]
2017-03-16 09:41:49 [ main:3956 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:41:49 [ main:3956 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:41:49 [ main:3956 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@67741b54]
2017-03-16 09:41:49 [ main:3957 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@67741b54] after transaction
2017-03-16 09:41:49 [ main:3957 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:41:49 [ main:3976 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:41:49 [ main:3977 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:41:49 [ main:3977 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4b33d1e0] for Hibernate transaction
2017-03-16 09:41:49 [ main:3977 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4b33d1e0]
2017-03-16 09:41:49 [ main:3977 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:41:49 [ main:3977 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:41:49 [ main:3977 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4b33d1e0]
2017-03-16 09:41:49 [ main:3978 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4b33d1e0] after transaction
2017-03-16 09:41:49 [ main:3978 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:43:59 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c0e4eda: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1c0e4eda]; startup date [Thu Mar 16 09:43:59 CST 2017]; root of context hierarchy
2017-03-16 09:43:59 [ main:42 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:43:59 [ main:45 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:43:59 [ main:64 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:43:59 [ main:65 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:44:01 [ main:2270 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:44:01 [ main:2297 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:44:01 [ main:2318 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:44:01 [ main:2318 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@1c0e4eda]: org.springframework.beans.factory.support.DefaultListableBeanFactory@1e5dfa5e
2017-03-16 09:44:01 [ main:2318 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@1c0e4eda: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1c0e4eda]; startup date [Thu Mar 16 09:43:59 CST 2017]; root of context hierarchy
2017-03-16 09:44:01 [ main:2328 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:44:01 [ main:2329 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:44:01 [ main:2342 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:44:01 [ main:2354 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:44:01 [ main:2355 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@45f67c40]
2017-03-16 09:44:01 [ main:2357 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4f2161d4]
2017-03-16 09:44:01 [ main:2358 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1e5dfa5e: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:44:01 [ main:2358 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:44:01 [ main:2358 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:44:01 [ main:2362 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:44:01 [ main:2374 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:01 [ main:2374 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:01 [ main:2375 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:44:01 [ main:2378 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:44:01 [ main:2378 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:44:01 [ main:2380 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:44:01 [ main:2383 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:44:01 [ main:2384 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:01 [ main:2387 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:44:01 [ main:2387 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:44:01 [ main:2387 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:44:01 [ main:2398 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:44:01 [ main:2405 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:44:01 [ main:2406 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:44:02 [ main:2705 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:44:02 [ main:2985 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:02 [ main:2987 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:44:02 [ main:2988 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:44:02 [ main:2988 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:44:02 [ main:2992 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:44:02 [ main:2997 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:44:02 [ main:2997 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:02 [ main:3002 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:44:02 [ main:3008 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@766fef4d] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:44:02 [ main:3008 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:02 [ main:3009 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:44:02 [ main:3009 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:02 [ main:3009 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:44:02 [ main:3009 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:44:02 [ main:3011 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:44:02 [ main:3011 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:02 [ main:3011 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:44:02 [ main:3011 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:44:02 [ main:3011 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:44:02 [ main:3011 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:44:02 [ main:3011 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:44:02 [ main:3012 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:44:02 [ main:3014 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:44:02 [ main:3014 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:44:02 [ main:3015 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:44:02 [ main:3015 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:44:02 [ main:3015 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:02 [ main:3015 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:02 [ main:3016 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:02 [ main:3038 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:02 [ main:3064 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:02 [ main:3064 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:02 [ main:3064 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:02 [ main:3079 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:02 [ main:3079 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:02 [ main:3079 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:02 [ main:3094 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:02 [ main:3094 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:02 [ main:3094 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:02 [ main:3108 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:02 [ main:3108 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:02 [ main:3109 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:02 [ main:3124 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:02 [ main:3124 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:02 [ main:3124 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:41 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@3d23b070: display name [org.springframework.context.support.ClassPathXmlApplicationContext@3d23b070]; startup date [Thu Mar 16 09:44:41 CST 2017]; root of context hierarchy
2017-03-16 09:44:41 [ main:41 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:44:41 [ main:44 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:44:41 [ main:62 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:44:41 [ main:63 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:44:43 [ main:2196 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:44:43 [ main:2223 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:44:43 [ main:2245 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:44:43 [ main:2245 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@3d23b070]: org.springframework.beans.factory.support.DefaultListableBeanFactory@6fcc8c5e
2017-03-16 09:44:43 [ main:2246 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@3d23b070: display name [org.springframework.context.support.ClassPathXmlApplicationContext@3d23b070]; startup date [Thu Mar 16 09:44:41 CST 2017]; root of context hierarchy
2017-03-16 09:44:43 [ main:2257 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:44:43 [ main:2257 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:44:43 [ main:2271 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:44:43 [ main:2283 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:44:43 [ main:2285 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1db7b9]
2017-03-16 09:44:43 [ main:2286 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@36f75b16]
2017-03-16 09:44:43 [ main:2287 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6fcc8c5e: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:44:43 [ main:2288 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:44:43 [ main:2288 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:44:43 [ main:2291 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:44:43 [ main:2304 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:43 [ main:2304 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:43 [ main:2305 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:44:43 [ main:2309 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:44:43 [ main:2309 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:44:43 [ main:2310 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:44:43 [ main:2313 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:44:43 [ main:2314 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:43 [ main:2316 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:44:43 [ main:2317 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:44:43 [ main:2317 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:44:43 [ main:2329 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:44:43 [ main:2336 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:44:43 [ main:2337 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:44:43 [ main:2634 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:44:44 [ main:2911 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:44 [ main:2913 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:44:44 [ main:2913 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:44:44 [ main:2913 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:44:44 [ main:2917 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:44:44 [ main:2922 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:44:44 [ main:2923 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:44 [ main:2928 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:44:44 [ main:2935 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@386f5297] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:44:44 [ main:2935 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:44 [ main:2936 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:44:44 [ main:2936 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:44 [ main:2936 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:44:44 [ main:2936 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:44:44 [ main:2942 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:44:44 [ main:2942 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:44 [ main:2945 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:44:44 [ main:2951 ] - [ DEBUG ] Creating implicit proxy for bean 'hibernateUtil' with 0 common interceptors and 1 specific interceptors
2017-03-16 09:44:44 [ main:2955 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.util.HibernateUtil@1b3c0cef]
2017-03-16 09:44:44 [ main:3003 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:44:44 [ main:3003 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:44:44 [ main:3003 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:44:44 [ main:3006 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:44:44 [ main:3006 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:44:44 [ main:3006 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:44:44 [ main:3006 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:44:44 [ main:3009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.Session dtx.oa.util.HibernateUtil.getSession()
2017-03-16 09:44:44 [ main:3009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 09:44:44 [ main:3009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.SessionFactory dtx.oa.util.HibernateUtil.getSessionFactory()
2017-03-16 09:44:44 [ main:3009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.closeSession(org.hibernate.Session)
2017-03-16 09:44:44 [ main:3009 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 09:44:44 [ main:3009 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 09:44:44 [ main:3009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 09:44:44 [ main:3009 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 09:44:44 [ main:3009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 09:44:44 [ main:3010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 09:44:44 [ main:3025 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:44:44 [ main:3025 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:44:44 [ main:3025 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:44:44 [ main:3025 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:44:44 [ main:3025 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:44:44 [ main:3026 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:44 [ main:3048 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:44 [ main:3078 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:44 [ main:3105 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:44 [ main:3106 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:44 [ main:3106 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:44 [ main:3120 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:44 [ main:3120 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:44 [ main:3120 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:44 [ main:3135 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:44 [ main:3135 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:44 [ main:3135 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:44 [ main:3153 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:44 [ main:3154 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:44 [ main:3154 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:44:44 [ main:3169 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:44:44 [ main:3169 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:44:44 [ main:3169 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:48:17 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d1a542b: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6d1a542b]; startup date [Thu Mar 16 09:48:17 CST 2017]; root of context hierarchy
2017-03-16 09:48:17 [ main:46 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:48:17 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:48:17 [ main:86 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:48:17 [ main:88 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:48:19 [ main:1533 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:48:19 [ main:1560 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:48:19 [ main:1582 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:48:19 [ main:1582 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@6d1a542b]: org.springframework.beans.factory.support.DefaultListableBeanFactory@3846f00b
2017-03-16 09:48:19 [ main:1582 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@6d1a542b: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6d1a542b]; startup date [Thu Mar 16 09:48:17 CST 2017]; root of context hierarchy
2017-03-16 09:48:19 [ main:1594 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:48:19 [ main:1594 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:48:19 [ main:1608 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:48:19 [ main:1621 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:48:19 [ main:1622 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@9320ebf]
2017-03-16 09:48:19 [ main:1623 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4b7dd928]
2017-03-16 09:48:19 [ main:1625 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3846f00b: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:48:19 [ main:1625 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:48:19 [ main:1625 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:48:19 [ main:1634 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:48:19 [ main:1649 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:48:19 [ main:1649 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:48:19 [ main:1650 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:48:19 [ main:1654 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:48:19 [ main:1655 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:48:19 [ main:1656 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:48:19 [ main:1660 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:48:19 [ main:1660 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:48:19 [ main:1663 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:48:19 [ main:1663 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:48:19 [ main:1664 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:48:19 [ main:1682 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:48:19 [ main:1690 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:48:19 [ main:1691 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:48:19 [ main:1990 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:48:20 [ main:2439 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:48:20 [ main:2448 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:48:20 [ main:2449 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:48:20 [ main:2449 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:48:20 [ main:2453 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:48:20 [ main:2457 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:48:20 [ main:2458 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:48:20 [ main:2464 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:48:20 [ main:2470 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@398e9aa3] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:48:20 [ main:2470 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:48:20 [ main:2471 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:48:20 [ main:2471 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:48:20 [ main:2471 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:48:20 [ main:2471 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:48:20 [ main:2473 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:48:20 [ main:2473 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:48:20 [ main:2473 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:48:20 [ main:2473 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:48:20 [ main:2473 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:48:20 [ main:2474 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:48:20 [ main:2474 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:48:20 [ main:2474 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:48:20 [ main:2476 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:48:20 [ main:2477 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:48:20 [ main:2477 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:48:20 [ main:2477 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:48:20 [ main:2477 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:48:20 [ main:2477 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:49:10 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4726df42: display name [org.springframework.context.support.ClassPathXmlApplicationContext@4726df42]; startup date [Thu Mar 16 09:49:10 CST 2017]; root of context hierarchy
2017-03-16 09:49:10 [ main:44 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:49:10 [ main:57 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:49:10 [ main:81 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:49:10 [ main:83 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:49:12 [ main:1655 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:49:12 [ main:1677 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:49:12 [ main:1699 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:49:12 [ main:1699 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@4726df42]: org.springframework.beans.factory.support.DefaultListableBeanFactory@3846f00b
2017-03-16 09:49:12 [ main:1699 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@4726df42: display name [org.springframework.context.support.ClassPathXmlApplicationContext@4726df42]; startup date [Thu Mar 16 09:49:10 CST 2017]; root of context hierarchy
2017-03-16 09:49:12 [ main:1710 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:49:12 [ main:1711 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:49:12 [ main:1725 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:49:12 [ main:1737 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:49:12 [ main:1738 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@35662250]
2017-03-16 09:49:12 [ main:1739 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@333bf7d0]
2017-03-16 09:49:12 [ main:1741 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3846f00b: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:49:12 [ main:1741 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:49:12 [ main:1741 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:49:12 [ main:1750 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:49:12 [ main:1765 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:12 [ main:1765 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:12 [ main:1766 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:49:12 [ main:1770 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:49:12 [ main:1770 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:49:12 [ main:1772 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:49:12 [ main:1776 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:49:12 [ main:1776 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:12 [ main:1779 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:49:12 [ main:1779 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:49:12 [ main:1779 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:49:12 [ main:1797 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:49:12 [ main:1805 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:49:12 [ main:1806 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:49:12 [ main:2099 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:49:13 [ main:2557 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:13 [ main:2559 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:49:13 [ main:2559 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:49:13 [ main:2559 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:49:13 [ main:2564 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:49:13 [ main:2568 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:49:13 [ main:2569 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:13 [ main:2575 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:49:13 [ main:2581 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@7a1ca9b2] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:49:13 [ main:2581 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:13 [ main:2582 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:49:13 [ main:2582 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:49:13 [ main:2583 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:49:13 [ main:2583 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:49:13 [ main:2584 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:49:13 [ main:2584 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:13 [ main:2584 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:49:13 [ main:2585 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:49:13 [ main:2585 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:49:13 [ main:2585 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:49:13 [ main:2585 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:49:13 [ main:2585 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:49:13 [ main:2588 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:49:13 [ main:2588 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:49:13 [ main:2588 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:49:13 [ main:2588 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:49:13 [ main:2588 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:13 [ main:2588 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:49:36 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6d23f9b8: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6d23f9b8]; startup date [Thu Mar 16 09:49:36 CST 2017]; root of context hierarchy
2017-03-16 09:49:36 [ main:43 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:49:36 [ main:60 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:49:36 [ main:84 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:49:36 [ main:85 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:49:39 [ main:2616 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:49:39 [ main:2645 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:49:39 [ main:2667 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:49:39 [ main:2668 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@6d23f9b8]: org.springframework.beans.factory.support.DefaultListableBeanFactory@5e7aa43b
2017-03-16 09:49:39 [ main:2668 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@6d23f9b8: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6d23f9b8]; startup date [Thu Mar 16 09:49:36 CST 2017]; root of context hierarchy
2017-03-16 09:49:39 [ main:2680 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:49:39 [ main:2680 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:49:39 [ main:2694 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:49:39 [ main:2707 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:49:39 [ main:2708 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@35662250]
2017-03-16 09:49:39 [ main:2710 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@333bf7d0]
2017-03-16 09:49:39 [ main:2711 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5e7aa43b: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:49:39 [ main:2711 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:49:39 [ main:2711 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:49:39 [ main:2720 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:49:39 [ main:2735 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:39 [ main:2735 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:39 [ main:2736 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:49:39 [ main:2741 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:49:39 [ main:2741 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:49:39 [ main:2742 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:49:39 [ main:2746 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:49:39 [ main:2746 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:39 [ main:2751 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:49:39 [ main:2751 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:49:39 [ main:2751 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:49:39 [ main:2770 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:49:39 [ main:2777 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:49:39 [ main:2779 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:49:39 [ main:3072 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:49:40 [ main:3531 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:40 [ main:3533 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:49:40 [ main:3533 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:49:40 [ main:3533 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:49:40 [ main:3537 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:49:40 [ main:3541 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:49:40 [ main:3542 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:40 [ main:3548 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:49:40 [ main:3553 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@414a60da] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:49:40 [ main:3553 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:40 [ main:3554 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:49:40 [ main:3554 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:49:40 [ main:3554 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:49:40 [ main:3555 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:49:40 [ main:3556 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:49:40 [ main:3556 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:40 [ main:3556 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:49:40 [ main:3556 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:49:40 [ main:3557 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:49:40 [ main:3557 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:49:40 [ main:3557 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:49:40 [ main:3557 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:49:40 [ main:3559 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:49:40 [ main:3560 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:49:40 [ main:3560 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:49:40 [ main:3560 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:49:40 [ main:3560 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:49:40 [ main:3560 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:50:05 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@a24d858: display name [org.springframework.context.support.ClassPathXmlApplicationContext@a24d858]; startup date [Thu Mar 16 09:50:05 CST 2017]; root of context hierarchy
2017-03-16 09:50:05 [ main:44 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:50:05 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:50:05 [ main:82 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:50:05 [ main:84 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:50:07 [ main:2589 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:50:07 [ main:2612 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:50:08 [ main:2633 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:50:08 [ main:2633 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@a24d858]: org.springframework.beans.factory.support.DefaultListableBeanFactory@734e6c9b
2017-03-16 09:50:08 [ main:2634 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@a24d858: display name [org.springframework.context.support.ClassPathXmlApplicationContext@a24d858]; startup date [Thu Mar 16 09:50:05 CST 2017]; root of context hierarchy
2017-03-16 09:50:08 [ main:2645 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:50:08 [ main:2645 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:50:08 [ main:2659 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:50:08 [ main:2672 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:50:08 [ main:2673 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@35662250]
2017-03-16 09:50:08 [ main:2674 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@333bf7d0]
2017-03-16 09:50:08 [ main:2675 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@734e6c9b: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:50:08 [ main:2676 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:50:08 [ main:2676 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:50:08 [ main:2684 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:50:08 [ main:2700 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:08 [ main:2700 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:08 [ main:2701 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:50:08 [ main:2705 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:50:08 [ main:2705 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:50:08 [ main:2706 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:50:08 [ main:2710 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:50:08 [ main:2711 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:08 [ main:2714 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:50:08 [ main:2714 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:50:08 [ main:2714 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:50:08 [ main:2732 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:50:08 [ main:2739 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:50:08 [ main:2741 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:50:08 [ main:3029 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:50:08 [ main:3493 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:08 [ main:3495 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:50:08 [ main:3495 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:50:08 [ main:3495 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:50:08 [ main:3500 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:50:08 [ main:3504 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:50:08 [ main:3505 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:08 [ main:3511 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:50:08 [ main:3516 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@414a60da] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:50:08 [ main:3516 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:08 [ main:3517 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:50:08 [ main:3517 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:50:08 [ main:3517 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:50:08 [ main:3518 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:50:08 [ main:3519 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:50:08 [ main:3519 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:08 [ main:3520 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:50:08 [ main:3520 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:50:08 [ main:3520 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:50:08 [ main:3520 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:50:08 [ main:3520 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:50:08 [ main:3520 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:50:08 [ main:3523 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:50:08 [ main:3523 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:50:08 [ main:3523 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:50:08 [ main:3523 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:50:08 [ main:3523 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:08 [ main:3523 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:50:08 [ main:3525 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:50:08 [ main:3546 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:50:43 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b: display name [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]; startup date [Thu Mar 16 09:50:43 CST 2017]; root of context hierarchy
2017-03-16 09:50:43 [ main:47 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:50:43 [ main:63 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:50:43 [ main:87 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:50:43 [ main:89 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:50:45 [ main:1670 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:50:45 [ main:1694 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:50:45 [ main:1717 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:50:45 [ main:1717 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]: org.springframework.beans.factory.support.DefaultListableBeanFactory@734e6c9b
2017-03-16 09:50:45 [ main:1717 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b: display name [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]; startup date [Thu Mar 16 09:50:43 CST 2017]; root of context hierarchy
2017-03-16 09:50:45 [ main:1728 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:50:45 [ main:1729 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:50:45 [ main:1743 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:50:45 [ main:1755 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:50:45 [ main:1756 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@35662250]
2017-03-16 09:50:45 [ main:1757 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@333bf7d0]
2017-03-16 09:50:45 [ main:1758 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@734e6c9b: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:50:45 [ main:1759 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:50:45 [ main:1759 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:50:45 [ main:1767 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:50:45 [ main:1783 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:45 [ main:1783 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:45 [ main:1783 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:50:45 [ main:1788 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:50:45 [ main:1788 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:50:45 [ main:1789 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:50:45 [ main:1793 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:50:45 [ main:1794 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:45 [ main:1797 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:50:45 [ main:1797 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:50:45 [ main:1797 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:50:45 [ main:1815 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:50:45 [ main:1822 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:50:45 [ main:1824 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:50:45 [ main:2118 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:50:46 [ main:2576 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:46 [ main:2579 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:50:46 [ main:2579 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:50:46 [ main:2579 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:50:46 [ main:2584 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:50:46 [ main:2588 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:50:46 [ main:2588 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:46 [ main:2594 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:50:46 [ main:2599 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@398e9aa3] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:50:46 [ main:2599 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:46 [ main:2600 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:50:46 [ main:2601 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:50:46 [ main:2601 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:50:46 [ main:2601 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:50:46 [ main:2602 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:50:46 [ main:2602 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:46 [ main:2603 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:50:46 [ main:2603 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:50:46 [ main:2603 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:50:46 [ main:2603 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:50:46 [ main:2603 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:50:46 [ main:2603 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:50:46 [ main:2605 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:50:46 [ main:2606 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:50:46 [ main:2606 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:50:46 [ main:2606 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:50:46 [ main:2606 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:50:46 [ main:2606 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:50:46 [ main:2608 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:50:46 [ main:2629 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:50:59 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@40993028: display name [org.springframework.context.support.ClassPathXmlApplicationContext@40993028]; startup date [Thu Mar 16 09:50:59 CST 2017]; root of context hierarchy
2017-03-16 09:50:59 [ main:45 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:50:59 [ main:60 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:51:00 [ main:87 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:51:00 [ main:88 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:51:01 [ main:1481 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:51:01 [ main:1508 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:51:01 [ main:1530 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:51:01 [ main:1530 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@40993028]: org.springframework.beans.factory.support.DefaultListableBeanFactory@508f66bd
2017-03-16 09:51:01 [ main:1530 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@40993028: display name [org.springframework.context.support.ClassPathXmlApplicationContext@40993028]; startup date [Thu Mar 16 09:50:59 CST 2017]; root of context hierarchy
2017-03-16 09:51:01 [ main:1541 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:51:01 [ main:1542 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:51:01 [ main:1556 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:51:01 [ main:1568 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:51:01 [ main:1569 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@e279c82]
2017-03-16 09:51:01 [ main:1570 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2cb549af]
2017-03-16 09:51:01 [ main:1571 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@508f66bd: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:51:01 [ main:1572 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:51:01 [ main:1572 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:51:01 [ main:1581 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:51:01 [ main:1596 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:01 [ main:1596 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:01 [ main:1597 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:51:01 [ main:1601 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:51:01 [ main:1601 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:51:01 [ main:1603 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:51:01 [ main:1607 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:51:01 [ main:1607 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:01 [ main:1610 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:51:01 [ main:1610 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:51:01 [ main:1610 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:51:01 [ main:1629 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:51:01 [ main:1636 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:51:01 [ main:1637 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:51:01 [ main:1930 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:51:02 [ main:2396 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:02 [ main:2398 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:51:02 [ main:2398 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:51:02 [ main:2398 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:51:02 [ main:2403 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:51:02 [ main:2407 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:51:02 [ main:2407 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:02 [ main:2413 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:51:02 [ main:2418 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@7e4a09ee] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:51:02 [ main:2419 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:02 [ main:2420 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:51:02 [ main:2420 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:51:02 [ main:2420 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:51:02 [ main:2420 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:51:02 [ main:2422 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:51:02 [ main:2422 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:02 [ main:2422 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:51:02 [ main:2422 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:51:02 [ main:2422 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:51:02 [ main:2422 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:51:02 [ main:2422 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:51:02 [ main:2423 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:51:02 [ main:2425 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:51:02 [ main:2425 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:51:02 [ main:2426 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:51:02 [ main:2426 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:51:02 [ main:2426 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:02 [ main:2426 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:51:02 [ main:2427 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:51:02 [ main:2449 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:51:17 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b: display name [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]; startup date [Thu Mar 16 09:51:17 CST 2017]; root of context hierarchy
2017-03-16 09:51:17 [ main:44 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:51:17 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:51:17 [ main:82 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:51:17 [ main:83 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:51:21 [ main:4423 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:51:21 [ main:4441 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:51:21 [ main:4464 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:51:21 [ main:4464 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]: org.springframework.beans.factory.support.DefaultListableBeanFactory@85f7aac
2017-03-16 09:51:21 [ main:4464 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b: display name [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]; startup date [Thu Mar 16 09:51:17 CST 2017]; root of context hierarchy
2017-03-16 09:51:21 [ main:4475 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:51:21 [ main:4476 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:51:21 [ main:4490 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:51:21 [ main:4502 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:51:21 [ main:4503 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@e279c82]
2017-03-16 09:51:21 [ main:4505 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@2cb549af]
2017-03-16 09:51:21 [ main:4506 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@85f7aac: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:51:21 [ main:4506 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:51:21 [ main:4506 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:51:21 [ main:4515 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:51:21 [ main:4530 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:21 [ main:4530 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:21 [ main:4531 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:51:21 [ main:4535 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:51:21 [ main:4535 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:51:21 [ main:4537 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:51:21 [ main:4541 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:51:21 [ main:4541 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:21 [ main:4544 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:51:21 [ main:4544 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:51:21 [ main:4544 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:51:21 [ main:4562 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:51:21 [ main:4570 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:51:21 [ main:4571 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:51:22 [ main:4873 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:51:22 [ main:5331 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:22 [ main:5333 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:51:22 [ main:5333 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:51:22 [ main:5334 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:51:22 [ main:5338 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:51:22 [ main:5342 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:51:22 [ main:5342 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:22 [ main:5348 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:51:22 [ main:5353 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@115e194f] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:51:22 [ main:5353 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:22 [ main:5355 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:51:22 [ main:5355 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:51:22 [ main:5355 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:51:22 [ main:5355 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:51:22 [ main:5356 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:51:22 [ main:5356 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:22 [ main:5357 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:51:22 [ main:5357 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:51:22 [ main:5357 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:51:22 [ main:5357 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:51:22 [ main:5357 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:51:22 [ main:5357 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:51:22 [ main:5360 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:51:22 [ main:5360 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:51:22 [ main:5360 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:51:22 [ main:5360 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:51:22 [ main:5360 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:51:22 [ main:5360 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:51:22 [ main:5362 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:51:22 [ main:5384 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:53:53 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b: display name [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]; startup date [Thu Mar 16 09:53:53 CST 2017]; root of context hierarchy
2017-03-16 09:53:53 [ main:46 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:53:53 [ main:60 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:53:53 [ main:83 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:53:53 [ main:85 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:53:55 [ main:1658 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:53:55 [ main:1676 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:53:55 [ main:1699 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:53:55 [ main:1699 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]: org.springframework.beans.factory.support.DefaultListableBeanFactory@734e6c9b
2017-03-16 09:53:55 [ main:1699 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b: display name [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]; startup date [Thu Mar 16 09:53:53 CST 2017]; root of context hierarchy
2017-03-16 09:53:55 [ main:1710 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:53:55 [ main:1711 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:53:55 [ main:1725 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:53:55 [ main:1737 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:53:55 [ main:1738 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1ed290f2]
2017-03-16 09:53:55 [ main:1740 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@36a9a4]
2017-03-16 09:53:55 [ main:1741 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@734e6c9b: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:53:55 [ main:1741 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:53:55 [ main:1741 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:53:55 [ main:1750 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:53:55 [ main:1764 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:53:55 [ main:1764 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:53:55 [ main:1765 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:53:55 [ main:1770 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:53:55 [ main:1770 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:53:55 [ main:1771 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:53:55 [ main:1775 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:53:55 [ main:1775 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:53:55 [ main:1778 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:53:55 [ main:1779 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:53:55 [ main:1779 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:53:55 [ main:1796 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:53:55 [ main:1804 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:53:55 [ main:1805 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:53:55 [ main:2099 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:53:56 [ main:2554 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:53:56 [ main:2556 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:53:56 [ main:2557 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:53:56 [ main:2557 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:53:56 [ main:2561 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:53:56 [ main:2565 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:53:56 [ main:2566 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:53:56 [ main:2571 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:53:56 [ main:2577 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@7a1ca9b2] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:53:56 [ main:2577 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:53:56 [ main:2578 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:53:56 [ main:2579 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:53:56 [ main:2579 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:53:56 [ main:2579 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:53:56 [ main:2589 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:53:56 [ main:2589 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:53:56 [ main:2591 ] - [ DEBUG ] Adding transactional method [getSession] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:53:56 [ main:2596 ] - [ DEBUG ] Creating implicit proxy for bean 'hibernateUtil' with 0 common interceptors and 1 specific interceptors
2017-03-16 09:53:56 [ main:2600 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.util.HibernateUtil@417d4040]
2017-03-16 09:53:56 [ main:2647 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:53:56 [ main:2647 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:53:56 [ main:2647 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:53:56 [ main:2649 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:53:56 [ main:2649 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:53:56 [ main:2650 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:53:56 [ main:2650 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:53:56 [ main:2652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.SessionFactory dtx.oa.util.HibernateUtil.getSessionFactory()
2017-03-16 09:53:56 [ main:2652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 09:53:56 [ main:2652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.Session dtx.oa.util.HibernateUtil.getSession()
2017-03-16 09:53:56 [ main:2652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.closeSession(org.hibernate.Session)
2017-03-16 09:53:56 [ main:2652 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 09:53:56 [ main:2652 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 09:53:56 [ main:2652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 09:53:56 [ main:2652 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 09:53:56 [ main:2653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 09:53:56 [ main:2654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 09:53:56 [ main:2667 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:53:56 [ main:2668 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:53:56 [ main:2668 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:53:56 [ main:2668 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:53:56 [ main:2668 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:53:56 [ main:2668 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:53:56 [ main:2686 ] - [ DEBUG ] Opening Hibernate Session
2017-03-16 09:53:56 [ main:2705 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 09:54:18 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b: display name [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]; startup date [Thu Mar 16 09:54:18 CST 2017]; root of context hierarchy
2017-03-16 09:54:18 [ main:43 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 09:54:18 [ main:57 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 09:54:18 [ main:80 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 09:54:18 [ main:81 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 09:54:21 [ main:2955 ] - [ DEBUG ] Loading bean definitions
2017-03-16 09:54:21 [ main:2985 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 09:54:21 [ main:3007 ] - [ DEBUG ] Loaded 8 bean definitions from location pattern [beans.xml]
2017-03-16 09:54:21 [ main:3007 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]: org.springframework.beans.factory.support.DefaultListableBeanFactory@734e6c9b
2017-03-16 09:54:21 [ main:3007 ] - [ DEBUG ] 8 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b: display name [org.springframework.context.support.ClassPathXmlApplicationContext@78f77e9b]; startup date [Thu Mar 16 09:54:18 CST 2017]; root of context hierarchy
2017-03-16 09:54:21 [ main:3018 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:54:21 [ main:3018 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:54:21 [ main:3032 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 09:54:21 [ main:3044 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:54:21 [ main:3045 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4456cd93]
2017-03-16 09:54:21 [ main:3047 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@260a92f7]
2017-03-16 09:54:21 [ main:3048 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@734e6c9b: defining beans [dataSource,sessionFactory,txManager,hibernateUtil,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 09:54:21 [ main:3048 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 09:54:21 [ main:3048 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 09:54:21 [ main:3057 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 09:54:21 [ main:3071 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:54:21 [ main:3072 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:54:21 [ main:3073 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 09:54:21 [ main:3077 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:54:21 [ main:3077 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:54:21 [ main:3078 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 09:54:21 [ main:3082 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:54:21 [ main:3083 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:54:21 [ main:3086 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 09:54:21 [ main:3086 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 09:54:21 [ main:3086 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 09:54:21 [ main:3104 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 09:54:21 [ main:3111 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 09:54:21 [ main:3112 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 09:54:21 [ main:3398 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 09:54:22 [ main:3855 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:54:22 [ main:3857 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 09:54:22 [ main:3857 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 09:54:22 [ main:3857 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 09:54:22 [ main:3861 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 09:54:22 [ main:3865 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:54:22 [ main:3866 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:54:22 [ main:3871 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 09:54:22 [ main:3877 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@398e9aa3] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 09:54:22 [ main:3877 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:54:22 [ main:3878 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 09:54:22 [ main:3879 ] - [ DEBUG ] Creating shared instance of singleton bean 'hibernateUtil'
2017-03-16 09:54:22 [ main:3879 ] - [ DEBUG ] Creating instance of bean 'hibernateUtil'
2017-03-16 09:54:22 [ main:3879 ] - [ DEBUG ] Eagerly caching bean 'hibernateUtil' to allow for resolving potential circular references
2017-03-16 09:54:22 [ main:3888 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 09:54:22 [ main:3888 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:54:22 [ main:3890 ] - [ DEBUG ] Adding transactional method [getSession] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 09:54:22 [ main:3896 ] - [ DEBUG ] Creating implicit proxy for bean 'hibernateUtil' with 0 common interceptors and 1 specific interceptors
2017-03-16 09:54:22 [ main:3900 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.util.HibernateUtil@1684342c]
2017-03-16 09:54:22 [ main:3948 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:54:22 [ main:3948 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:54:22 [ main:3948 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 09:54:22 [ main:3951 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 09:54:22 [ main:3951 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:54:22 [ main:3951 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:54:22 [ main:3951 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:54:22 [ main:3953 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.SessionFactory dtx.oa.util.HibernateUtil.getSessionFactory()
2017-03-16 09:54:22 [ main:3953 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public org.hibernate.Session dtx.oa.util.HibernateUtil.getSession()
2017-03-16 09:54:22 [ main:3953 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 09:54:22 [ main:3953 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.util.HibernateUtil.closeSession(org.hibernate.Session)
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 09:54:22 [ main:3954 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 09:54:22 [ main:3955 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 09:54:22 [ main:3955 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 09:54:22 [ main:3955 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 09:54:22 [ main:3955 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:54:22 [ main:3955 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 09:54:22 [ main:3955 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 09:54:22 [ main:3955 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 09:54:22 [ main:3955 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 09:54:22 [ main:3955 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 09:54:22 [ main:3969 ] - [ DEBUG ] Finished creating instance of bean 'hibernateUtil'
2017-03-16 09:54:22 [ main:3969 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 09:54:22 [ main:3969 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 09:54:22 [ main:3969 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 09:54:22 [ main:3969 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 09:54:22 [ main:3969 ] - [ DEBUG ] Returning cached instance of singleton bean 'hibernateUtil'
2017-03-16 09:54:22 [ main:3989 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.util.HibernateUtil.getSession]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 09:54:22 [ main:4010 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@abb9c4f] for Hibernate transaction
2017-03-16 09:54:22 [ main:4012 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@abb9c4f]
2017-03-16 09:54:22 [ main:4024 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 09:54:22 [ main:4026 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 09:54:22 [ main:4026 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@abb9c4f]
2017-03-16 09:54:22 [ main:4027 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@abb9c4f] after transaction
2017-03-16 09:54:22 [ main:4028 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 10:40:45 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c09e6e0: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6c09e6e0]; startup date [Thu Mar 16 10:40:45 CST 2017]; root of context hierarchy
2017-03-16 10:40:45 [ main:44 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 10:40:45 [ main:76 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 10:40:45 [ main:118 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 10:40:45 [ main:119 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 10:40:52 [ main:7381 ] - [ DEBUG ] Loading bean definitions
2017-03-16 10:40:52 [ main:7401 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 10:40:52 [ main:7426 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 10:40:52 [ main:7426 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@6c09e6e0]: org.springframework.beans.factory.support.DefaultListableBeanFactory@7b3fce4d
2017-03-16 10:40:52 [ main:7427 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@6c09e6e0: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6c09e6e0]; startup date [Thu Mar 16 10:40:45 CST 2017]; root of context hierarchy
2017-03-16 10:40:52 [ main:7443 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 10:40:52 [ main:7443 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 10:40:52 [ main:7457 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 10:40:52 [ main:7468 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 10:40:52 [ main:7470 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@45700941]
2017-03-16 10:40:52 [ main:7471 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4359a197]
2017-03-16 10:40:52 [ main:7472 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7b3fce4d: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 10:40:52 [ main:7473 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 10:40:52 [ main:7473 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 10:40:52 [ main:7489 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 10:40:52 [ main:7505 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:52 [ main:7505 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:52 [ main:7506 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 10:40:52 [ main:7510 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 10:40:52 [ main:7510 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 10:40:52 [ main:7511 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 10:40:52 [ main:7515 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 10:40:52 [ main:7515 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:52 [ main:7518 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 10:40:52 [ main:7518 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 10:40:52 [ main:7518 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 10:40:52 [ main:7540 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 10:40:52 [ main:7549 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 10:40:52 [ main:7550 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 10:40:52 [ main:7884 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 10:40:53 [ main:8413 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:53 [ main:8415 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 10:40:53 [ main:8415 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 10:40:53 [ main:8415 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 10:40:53 [ main:8415 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 10:40:53 [ main:8418 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 10:40:53 [ main:8418 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:53 [ main:8423 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:53 [ main:8434 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8441 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 10:40:53 [ main:8446 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@3b97d937]
2017-03-16 10:40:53 [ main:8492 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 10:40:53 [ main:8492 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 10:40:53 [ main:8492 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 10:40:53 [ main:8494 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 10:40:53 [ main:8494 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 10:40:53 [ main:8498 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 10:40:53 [ main:8501 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 10:40:53 [ main:8501 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 10:40:53 [ main:8506 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@e8a2db2] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 10:40:53 [ main:8506 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:53 [ main:8507 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 10:40:53 [ main:8507 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 10:40:53 [ main:8507 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 10:40:53 [ main:8507 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 10:40:53 [ main:8510 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8510 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 10:40:53 [ main:8510 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8510 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 10:40:53 [ main:8510 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8510 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 10:40:53 [ main:8510 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8510 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 10:40:53 [ main:8510 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8510 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 10:40:53 [ main:8511 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8511 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 10:40:53 [ main:8511 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8511 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 10:40:53 [ main:8511 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8511 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 10:40:53 [ main:8511 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8511 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 10:40:53 [ main:8511 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8511 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8512 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 10:40:53 [ main:8513 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 10:40:53 [ main:8514 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 10:40:53 [ main:8531 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 10:40:53 [ main:8531 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 10:40:53 [ main:8531 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 10:40:53 [ main:8531 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 10:40:53 [ main:8534 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 10:40:53 [ main:8534 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:53 [ main:8534 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8534 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 10:40:53 [ main:8534 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@a7a1258]
2017-03-16 10:40:53 [ main:8536 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8536 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 10:40:53 [ main:8536 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8536 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 10:40:53 [ main:8536 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8536 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 10:40:53 [ main:8537 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 10:40:53 [ main:8538 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 10:40:53 [ main:8539 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 10:40:53 [ main:8540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 10:40:53 [ main:8554 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 10:40:53 [ main:8554 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 10:40:53 [ main:8554 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 10:40:53 [ main:8554 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 10:40:53 [ main:8558 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 10:40:53 [ main:8558 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:53 [ main:8558 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8558 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 10:40:53 [ main:8558 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@7fecbee0]
2017-03-16 10:40:53 [ main:8559 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8559 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 10:40:53 [ main:8562 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 10:40:53 [ main:8563 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 10:40:53 [ main:8564 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 10:40:53 [ main:8578 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 10:40:53 [ main:8578 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 10:40:53 [ main:8578 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 10:40:53 [ main:8578 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 10:40:53 [ main:8580 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 10:40:53 [ main:8581 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:53 [ main:8581 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8581 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 10:40:53 [ main:8581 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@31c24543]
2017-03-16 10:40:53 [ main:8582 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8582 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 10:40:53 [ main:8582 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8582 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 10:40:53 [ main:8582 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8582 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 10:40:53 [ main:8582 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8583 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8584 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 10:40:53 [ main:8585 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 10:40:53 [ main:8586 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 10:40:53 [ main:8598 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 10:40:53 [ main:8598 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 10:40:53 [ main:8598 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 10:40:53 [ main:8598 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 10:40:53 [ main:8600 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 10:40:53 [ main:8601 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:53 [ main:8601 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8601 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 10:40:53 [ main:8601 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@aff9dc7]
2017-03-16 10:40:53 [ main:8602 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8602 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 10:40:53 [ main:8602 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8602 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 10:40:53 [ main:8602 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8602 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 10:40:53 [ main:8602 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8602 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 10:40:53 [ main:8602 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8602 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 10:40:53 [ main:8605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 10:40:53 [ main:8606 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 10:40:53 [ main:8617 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 10:40:53 [ main:8617 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 10:40:53 [ main:8617 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 10:40:53 [ main:8617 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 10:40:53 [ main:8617 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 10:40:53 [ main:8617 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 10:40:53 [ main:8617 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 10:40:53 [ main:8621 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 10:40:53 [ main:8641 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@75cf5ff9] for Hibernate transaction
2017-03-16 10:40:53 [ main:8642 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@75cf5ff9]
2017-03-16 10:40:53 [ main:8662 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 10:40:53 [ main:8682 ] - [ DEBUG ] Initiating transaction rollback
2017-03-16 10:40:53 [ main:8683 ] - [ DEBUG ] Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@75cf5ff9]
2017-03-16 10:40:53 [ main:8684 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@75cf5ff9] after transaction
2017-03-16 10:40:53 [ main:8684 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 10:42:51 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@117280a: display name [org.springframework.context.support.ClassPathXmlApplicationContext@117280a]; startup date [Thu Mar 16 10:42:51 CST 2017]; root of context hierarchy
2017-03-16 10:42:51 [ main:42 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 10:42:51 [ main:56 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 10:42:51 [ main:78 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 10:42:51 [ main:80 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 10:45:02 [ main:130950 ] - [ WARN ] Ignored XML validation warning
org.xml.sax.SAXParseException; lineNumber: 26; columnNumber: 4; schema_reference.4: 无法读取方案文档 'http://www.springframework.org/schema/beans/spring-beans-4.0.xsd', 原因为 1) 无法找到文档; 2) 无法读取文档; 3) 文档的根元素不是 <xsd:schema>。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:99)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:433)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:347)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaErr(XSDHandler.java:4166)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaWarning(XSDHandler.java:4157)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument1(XSDHandler.java:2490)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:2187)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:573)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:617)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2453)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1772)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:746)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:379)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:396)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:342)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:310)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:212)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:113)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:80)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:123)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:422)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:352)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at dtx.oa.util.ApplicationContextUtil.<clinit>(ApplicationContextUtil.java:16)
	at dtx.oa.rbac.idao.factory.IDaoFactory.iUserDao(IDaoFactory.java:22)
	at dtx.oa.util.TestApp.test(TestApp.java:27)
	at dtx.oa.util.TestApp.main(TestApp.java:22)
Caused by: java.net.ConnectException: 连接超时
	at java.net.PlainSocketImpl.socketConnect(Native Method)
	at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:339)
	at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
	at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
	at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:392)
	at java.net.Socket.connect(Socket.java:579)
	at java.net.Socket.connect(Socket.java:528)
	at sun.net.NetworkClient.doConnect(NetworkClient.java:180)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:432)
	at sun.net.www.http.HttpClient.openServer(HttpClient.java:527)
	at sun.net.www.http.HttpClient.<init>(HttpClient.java:211)
	at sun.net.www.http.HttpClient.New(HttpClient.java:308)
	at sun.net.www.http.HttpClient.New(HttpClient.java:326)
	at sun.net.www.protocol.http.HttpURLConnection.getNewHttpClient(HttpURLConnection.java:997)
	at sun.net.www.protocol.http.HttpURLConnection.plainConnect(HttpURLConnection.java:933)
	at sun.net.www.protocol.http.HttpURLConnection.connect(HttpURLConnection.java:851)
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1301)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:643)
	at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:189)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:582)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:685)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser.parse(SchemaDOMParser.java:530)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:2175)
	... 36 more
2017-03-16 10:45:49 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7e14b389: display name [org.springframework.context.support.ClassPathXmlApplicationContext@7e14b389]; startup date [Thu Mar 16 10:45:49 CST 2017]; root of context hierarchy
2017-03-16 10:45:49 [ main:44 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 10:45:49 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 10:45:49 [ main:82 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 10:45:49 [ main:83 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:00:10 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@117280a: display name [org.springframework.context.support.ClassPathXmlApplicationContext@117280a]; startup date [Thu Mar 16 11:00:10 CST 2017]; root of context hierarchy
2017-03-16 11:00:10 [ main:45 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:00:10 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:00:10 [ main:115 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:00:10 [ main:119 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:09:41 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6c09e6e0: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6c09e6e0]; startup date [Thu Mar 16 11:09:41 CST 2017]; root of context hierarchy
2017-03-16 11:09:41 [ main:42 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:09:41 [ main:57 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:09:41 [ main:79 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:09:41 [ main:81 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:09:45 [ main:4204 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:09:45 [ main:4224 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:09:45 [ main:4249 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:09:45 [ main:4249 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@6c09e6e0]: org.springframework.beans.factory.support.DefaultListableBeanFactory@7b3fce4d
2017-03-16 11:09:45 [ main:4249 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@6c09e6e0: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6c09e6e0]; startup date [Thu Mar 16 11:09:41 CST 2017]; root of context hierarchy
2017-03-16 11:09:45 [ main:4269 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:09:45 [ main:4270 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:09:45 [ main:4284 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:09:45 [ main:4295 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:09:45 [ main:4297 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5ccc078]
2017-03-16 11:09:45 [ main:4298 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4b919723]
2017-03-16 11:09:45 [ main:4299 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7b3fce4d: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:09:45 [ main:4300 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:09:45 [ main:4300 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:09:45 [ main:4312 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:09:45 [ main:4328 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:45 [ main:4328 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:45 [ main:4329 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:09:45 [ main:4333 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:09:45 [ main:4333 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:09:45 [ main:4334 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:09:45 [ main:4338 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:09:45 [ main:4338 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:45 [ main:4341 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:09:45 [ main:4341 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:09:45 [ main:4342 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:09:45 [ main:4364 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:09:45 [ main:4378 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:09:45 [ main:4380 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:09:45 [ main:4728 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:09:46 [ main:5246 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:46 [ main:5248 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:09:46 [ main:5249 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:09:46 [ main:5249 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:09:46 [ main:5249 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:09:46 [ main:5251 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:09:46 [ main:5252 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:46 [ main:5257 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:46 [ main:5267 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5276 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:09:46 [ main:5281 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@2c7e9758]
2017-03-16 11:09:46 [ main:5333 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:09:46 [ main:5333 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:09:46 [ main:5333 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:09:46 [ main:5336 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:09:46 [ main:5336 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:09:46 [ main:5340 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:09:46 [ main:5344 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:09:46 [ main:5344 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:09:46 [ main:5349 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@b958dc2] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:09:46 [ main:5349 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:46 [ main:5350 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:09:46 [ main:5350 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:09:46 [ main:5351 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:09:46 [ main:5351 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:09:46 [ main:5353 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:09:46 [ main:5353 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5353 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:09:46 [ main:5353 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5353 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:09:46 [ main:5353 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5353 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:09:46 [ main:5353 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5353 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:09:46 [ main:5354 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5354 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:09:46 [ main:5354 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5354 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:09:46 [ main:5354 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5354 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:09:46 [ main:5354 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5354 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:09:46 [ main:5354 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5354 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:09:46 [ main:5355 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5355 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:09:46 [ main:5355 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5355 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5355 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5355 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:09:46 [ main:5355 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5355 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5355 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:09:46 [ main:5356 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:09:46 [ main:5357 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:09:46 [ main:5375 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:09:46 [ main:5375 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:09:46 [ main:5375 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:09:46 [ main:5375 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:09:46 [ main:5378 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:09:46 [ main:5378 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:46 [ main:5378 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5378 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:09:46 [ main:5378 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@293e5044]
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:09:46 [ main:5380 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5381 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5382 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:09:46 [ main:5383 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:09:46 [ main:5384 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:09:46 [ main:5399 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:09:46 [ main:5399 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:09:46 [ main:5399 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:09:46 [ main:5399 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:09:46 [ main:5403 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:09:46 [ main:5403 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:46 [ main:5403 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5403 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:09:46 [ main:5403 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@15f9c366]
2017-03-16 11:09:46 [ main:5404 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5405 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:09:46 [ main:5406 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5406 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:09:46 [ main:5406 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5406 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:09:46 [ main:5406 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5406 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:09:46 [ main:5406 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5406 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:09:46 [ main:5406 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5406 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:09:46 [ main:5407 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:09:46 [ main:5408 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:09:46 [ main:5409 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:09:46 [ main:5410 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:09:46 [ main:5424 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:09:46 [ main:5424 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:09:46 [ main:5424 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:09:46 [ main:5424 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:09:46 [ main:5426 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:09:46 [ main:5426 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:46 [ main:5427 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5427 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:09:46 [ main:5427 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@58115cba]
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:09:46 [ main:5429 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:09:46 [ main:5431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:09:46 [ main:5443 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:09:46 [ main:5443 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:09:46 [ main:5443 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:09:46 [ main:5443 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:09:46 [ main:5446 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:09:46 [ main:5446 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:46 [ main:5446 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5446 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:09:46 [ main:5446 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@12d574fe]
2017-03-16 11:09:46 [ main:5447 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:09:46 [ main:5447 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5447 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:09:46 [ main:5447 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5447 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:09:46 [ main:5447 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5447 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:09:46 [ main:5448 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5449 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:09:46 [ main:5450 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:09:46 [ main:5451 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:09:46 [ main:5462 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:09:46 [ main:5462 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:09:46 [ main:5462 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:09:46 [ main:5462 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:09:46 [ main:5462 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:09:46 [ main:5462 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:09:46 [ main:5462 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:09:46 [ main:5466 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:09:46 [ main:5485 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@e8cf09c] for Hibernate transaction
2017-03-16 11:09:46 [ main:5486 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@e8cf09c]
2017-03-16 11:09:46 [ main:5506 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:09:46 [ main:5653 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:09:46 [ main:5653 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@e8cf09c]
2017-03-16 11:09:46 [ main:5657 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@e8cf09c] after transaction
2017-03-16 11:09:46 [ main:5657 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:15 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9: display name [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]; startup date [Thu Mar 16 11:10:15 CST 2017]; root of context hierarchy
2017-03-16 11:10:15 [ main:43 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:10:15 [ main:55 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:10:15 [ main:75 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:10:15 [ main:76 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:10:22 [ main:7013 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:10:22 [ main:7031 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:10:22 [ main:7052 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:10:22 [ main:7053 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]: org.springframework.beans.factory.support.DefaultListableBeanFactory@6645add0
2017-03-16 11:10:22 [ main:7053 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9: display name [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]; startup date [Thu Mar 16 11:10:15 CST 2017]; root of context hierarchy
2017-03-16 11:10:22 [ main:7067 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:10:22 [ main:7067 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:10:22 [ main:7081 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7091 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:10:22 [ main:7093 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6c353acd]
2017-03-16 11:10:22 [ main:7094 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@356defec]
2017-03-16 11:10:22 [ main:7095 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6645add0: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:10:22 [ main:7096 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:10:22 [ main:7096 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:10:22 [ main:7099 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7112 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:22 [ main:7112 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:22 [ main:7113 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7116 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:10:22 [ main:7116 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:10:22 [ main:7118 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7121 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:10:22 [ main:7121 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:22 [ main:7123 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:10:22 [ main:7123 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:10:22 [ main:7123 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:10:22 [ main:7135 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7141 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:10:22 [ main:7142 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:10:22 [ main:7430 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:10:22 [ main:7715 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:22 [ main:7717 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:10:22 [ main:7717 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:10:22 [ main:7717 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:10:22 [ main:7717 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7720 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:10:22 [ main:7721 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:22 [ main:7727 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:22 [ main:7733 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7739 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:10:22 [ main:7743 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@74f09f02]
2017-03-16 11:10:22 [ main:7788 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:10:22 [ main:7789 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:10:22 [ main:7789 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7791 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:10:22 [ main:7791 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:10:22 [ main:7795 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7799 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:10:22 [ main:7799 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:10:22 [ main:7804 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@170f5650] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:10:22 [ main:7804 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:22 [ main:7805 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:10:22 [ main:7805 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:10:22 [ main:7805 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:10:22 [ main:7805 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:10:22 [ main:7808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:10:22 [ main:7808 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:10:22 [ main:7808 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:10:22 [ main:7808 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:10:22 [ main:7808 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:10:22 [ main:7808 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7809 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:10:22 [ main:7811 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:10:22 [ main:7812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:10:22 [ main:7832 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:10:22 [ main:7832 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:10:22 [ main:7832 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:10:22 [ main:7832 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7835 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:10:22 [ main:7835 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:22 [ main:7836 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7836 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:10:22 [ main:7836 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@661303aa]
2017-03-16 11:10:22 [ main:7837 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:10:22 [ main:7837 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7837 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:10:22 [ main:7837 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7837 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:10:22 [ main:7837 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7839 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:10:22 [ main:7840 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7841 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:10:22 [ main:7842 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:10:22 [ main:7842 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:10:22 [ main:7842 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:10:22 [ main:7842 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:10:22 [ main:7855 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:10:22 [ main:7856 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:10:22 [ main:7856 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:10:22 [ main:7856 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7860 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:10:22 [ main:7860 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:22 [ main:7860 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7860 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:10:22 [ main:7860 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@36075ad3]
2017-03-16 11:10:22 [ main:7861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:10:22 [ main:7861 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:10:22 [ main:7861 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:10:22 [ main:7862 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:10:22 [ main:7863 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7864 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:10:22 [ main:7865 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:10:22 [ main:7866 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:10:22 [ main:7880 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:10:22 [ main:7880 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:10:22 [ main:7880 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:10:22 [ main:7880 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:10:22 [ main:7883 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:10:22 [ main:7883 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:22 [ main:7883 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7883 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:10:22 [ main:7883 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@24a519a2]
2017-03-16 11:10:22 [ main:7892 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:10:22 [ main:7892 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:10:22 [ main:7892 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:10:22 [ main:7892 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:10:22 [ main:7892 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:10:22 [ main:7894 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:10:22 [ main:7896 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:10:23 [ main:7907 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:10:23 [ main:7907 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:10:23 [ main:7907 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:10:23 [ main:7908 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:10:23 [ main:7910 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:10:23 [ main:7911 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:23 [ main:7911 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7911 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:10:23 [ main:7911 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@72e52a96]
2017-03-16 11:10:23 [ main:7912 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:10:23 [ main:7912 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:10:23 [ main:7913 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:10:23 [ main:7913 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:10:23 [ main:7913 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:10:23 [ main:7914 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7914 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:10:23 [ main:7914 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7914 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:10:23 [ main:7914 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7914 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:10:23 [ main:7914 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7914 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:10:23 [ main:7914 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7914 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:10:23 [ main:7915 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:10:23 [ main:7916 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:10:23 [ main:7917 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:10:23 [ main:7928 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:10:23 [ main:7928 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:10:23 [ main:7928 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:10:23 [ main:7928 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:10:23 [ main:7928 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:10:23 [ main:7928 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:10:23 [ main:7928 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:10:23 [ main:7995 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8018 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@284cf033] for Hibernate transaction
2017-03-16 11:10:23 [ main:8020 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@284cf033]
2017-03-16 11:10:23 [ main:8034 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8150 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8150 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@284cf033]
2017-03-16 11:10:23 [ main:8153 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@284cf033] after transaction
2017-03-16 11:10:23 [ main:8154 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8154 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8155 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@ef478e9] for Hibernate transaction
2017-03-16 11:10:23 [ main:8155 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@ef478e9]
2017-03-16 11:10:23 [ main:8155 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8157 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8157 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@ef478e9]
2017-03-16 11:10:23 [ main:8157 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@ef478e9] after transaction
2017-03-16 11:10:23 [ main:8157 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8174 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:10:23 [ main:8180 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8180 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1e88ced3] for Hibernate transaction
2017-03-16 11:10:23 [ main:8181 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1e88ced3]
2017-03-16 11:10:23 [ main:8181 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8185 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8185 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1e88ced3]
2017-03-16 11:10:23 [ main:8186 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1e88ced3] after transaction
2017-03-16 11:10:23 [ main:8186 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8187 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8187 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@317d20f] for Hibernate transaction
2017-03-16 11:10:23 [ main:8187 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@317d20f]
2017-03-16 11:10:23 [ main:8187 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8196 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8196 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@317d20f]
2017-03-16 11:10:23 [ main:8196 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@317d20f] after transaction
2017-03-16 11:10:23 [ main:8196 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8196 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8196 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@591547a0] for Hibernate transaction
2017-03-16 11:10:23 [ main:8197 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@591547a0]
2017-03-16 11:10:23 [ main:8197 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8199 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8199 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@591547a0]
2017-03-16 11:10:23 [ main:8200 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@591547a0] after transaction
2017-03-16 11:10:23 [ main:8200 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8211 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:10:23 [ main:8218 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8218 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@71ef76df] for Hibernate transaction
2017-03-16 11:10:23 [ main:8218 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@71ef76df]
2017-03-16 11:10:23 [ main:8218 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8224 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8224 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@71ef76df]
2017-03-16 11:10:23 [ main:8230 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@71ef76df] after transaction
2017-03-16 11:10:23 [ main:8230 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8230 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8230 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1dbadced] for Hibernate transaction
2017-03-16 11:10:23 [ main:8230 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1dbadced]
2017-03-16 11:10:23 [ main:8231 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8232 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8232 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1dbadced]
2017-03-16 11:10:23 [ main:8233 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1dbadced] after transaction
2017-03-16 11:10:23 [ main:8233 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8235 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8235 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@64d2aa7b] for Hibernate transaction
2017-03-16 11:10:23 [ main:8235 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@64d2aa7b]
2017-03-16 11:10:23 [ main:8236 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8236 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8236 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@64d2aa7b]
2017-03-16 11:10:23 [ main:8239 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@64d2aa7b] after transaction
2017-03-16 11:10:23 [ main:8239 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8240 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8240 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@79ad4ae5] for Hibernate transaction
2017-03-16 11:10:23 [ main:8240 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@79ad4ae5]
2017-03-16 11:10:23 [ main:8240 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8242 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8242 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@79ad4ae5]
2017-03-16 11:10:23 [ main:8243 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@79ad4ae5] after transaction
2017-03-16 11:10:23 [ main:8243 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8252 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:10:23 [ main:8258 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8258 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6a7b295f] for Hibernate transaction
2017-03-16 11:10:23 [ main:8258 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6a7b295f]
2017-03-16 11:10:23 [ main:8259 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8260 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8261 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6a7b295f]
2017-03-16 11:10:23 [ main:8261 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6a7b295f] after transaction
2017-03-16 11:10:23 [ main:8261 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8263 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8263 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1db770] for Hibernate transaction
2017-03-16 11:10:23 [ main:8263 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1db770]
2017-03-16 11:10:23 [ main:8264 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8271 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8271 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1db770]
2017-03-16 11:10:23 [ main:8271 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1db770] after transaction
2017-03-16 11:10:23 [ main:8271 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8271 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8271 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3b2b979d] for Hibernate transaction
2017-03-16 11:10:23 [ main:8272 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3b2b979d]
2017-03-16 11:10:23 [ main:8272 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8273 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8273 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3b2b979d]
2017-03-16 11:10:23 [ main:8274 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3b2b979d] after transaction
2017-03-16 11:10:23 [ main:8274 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8274 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8274 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1fccd900] for Hibernate transaction
2017-03-16 11:10:23 [ main:8274 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1fccd900]
2017-03-16 11:10:23 [ main:8275 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8276 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8276 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1fccd900]
2017-03-16 11:10:23 [ main:8276 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1fccd900] after transaction
2017-03-16 11:10:23 [ main:8276 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8277 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8277 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4d5d6704] for Hibernate transaction
2017-03-16 11:10:23 [ main:8277 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4d5d6704]
2017-03-16 11:10:23 [ main:8277 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8279 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8279 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4d5d6704]
2017-03-16 11:10:23 [ main:8280 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4d5d6704] after transaction
2017-03-16 11:10:23 [ main:8280 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8280 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8280 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@65ba7645] for Hibernate transaction
2017-03-16 11:10:23 [ main:8280 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@65ba7645]
2017-03-16 11:10:23 [ main:8280 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8281 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8281 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@65ba7645]
2017-03-16 11:10:23 [ main:8282 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@65ba7645] after transaction
2017-03-16 11:10:23 [ main:8282 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8282 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8282 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5d94043f] for Hibernate transaction
2017-03-16 11:10:23 [ main:8282 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5d94043f]
2017-03-16 11:10:23 [ main:8283 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8284 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8285 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5d94043f]
2017-03-16 11:10:23 [ main:8285 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5d94043f] after transaction
2017-03-16 11:10:23 [ main:8285 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8293 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:10:23 [ main:8299 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8299 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@48f2d715] for Hibernate transaction
2017-03-16 11:10:23 [ main:8299 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@48f2d715]
2017-03-16 11:10:23 [ main:8300 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8301 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8301 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@48f2d715]
2017-03-16 11:10:23 [ main:8302 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@48f2d715] after transaction
2017-03-16 11:10:23 [ main:8302 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8302 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8302 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2f56f186] for Hibernate transaction
2017-03-16 11:10:23 [ main:8302 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f56f186]
2017-03-16 11:10:23 [ main:8303 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8304 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8304 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f56f186]
2017-03-16 11:10:23 [ main:8306 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f56f186] after transaction
2017-03-16 11:10:23 [ main:8306 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8313 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:10:23 [ main:8319 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8319 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@368c820e] for Hibernate transaction
2017-03-16 11:10:23 [ main:8319 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@368c820e]
2017-03-16 11:10:23 [ main:8320 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8321 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8321 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@368c820e]
2017-03-16 11:10:23 [ main:8322 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@368c820e] after transaction
2017-03-16 11:10:23 [ main:8322 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8323 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8323 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3f898ae8] for Hibernate transaction
2017-03-16 11:10:23 [ main:8323 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3f898ae8]
2017-03-16 11:10:23 [ main:8323 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8326 ] - [ DEBUG ] Initiating transaction rollback
2017-03-16 11:10:23 [ main:8326 ] - [ DEBUG ] Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3f898ae8]
2017-03-16 11:10:23 [ main:8327 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3f898ae8] after transaction
2017-03-16 11:10:23 [ main:8327 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:10:23 [ main:8334 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:10:23 [ main:8340 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:10:23 [ main:8340 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3fdbd2d5] for Hibernate transaction
2017-03-16 11:10:23 [ main:8340 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3fdbd2d5]
2017-03-16 11:10:23 [ main:8340 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:10:23 [ main:8340 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:10:23 [ main:8341 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3fdbd2d5]
2017-03-16 11:10:23 [ main:8341 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3fdbd2d5] after transaction
2017-03-16 11:10:23 [ main:8341 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:13:49 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]; startup date [Thu Mar 16 11:13:49 CST 2017]; root of context hierarchy
2017-03-16 11:13:49 [ main:45 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:13:49 [ main:57 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:13:49 [ main:78 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:13:49 [ main:79 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:13:59 [ main:9939 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:13:59 [ main:9956 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:13:59 [ main:9977 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:13:59 [ main:9978 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]: org.springframework.beans.factory.support.DefaultListableBeanFactory@68966724
2017-03-16 11:13:59 [ main:9978 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]; startup date [Thu Mar 16 11:13:49 CST 2017]; root of context hierarchy
2017-03-16 11:13:59 [ main:9992 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:13:59 [ main:9993 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:13:59 [ main:10006 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:13:59 [ main:10017 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:13:59 [ main:10018 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1aa7a03b]
2017-03-16 11:13:59 [ main:10020 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@44a28a5b]
2017-03-16 11:13:59 [ main:10021 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@68966724: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:13:59 [ main:10021 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:13:59 [ main:10021 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:13:59 [ main:10024 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:13:59 [ main:10037 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:13:59 [ main:10037 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:13:59 [ main:10038 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:13:59 [ main:10042 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:13:59 [ main:10042 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:13:59 [ main:10043 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:13:59 [ main:10046 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:13:59 [ main:10046 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:13:59 [ main:10049 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:13:59 [ main:10049 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:13:59 [ main:10049 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:13:59 [ main:10061 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:13:59 [ main:10067 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:13:59 [ main:10068 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:13:59 [ main:10362 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:14:00 [ main:10653 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:14:00 [ main:10655 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:14:00 [ main:10655 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:14:00 [ main:10655 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:14:00 [ main:10655 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:14:00 [ main:10658 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:14:00 [ main:10658 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:14:00 [ main:10664 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:14:00 [ main:10670 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10677 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:14:00 [ main:10681 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@164b9e9b]
2017-03-16 11:14:00 [ main:10728 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:14:00 [ main:10729 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:14:00 [ main:10729 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:14:00 [ main:10731 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:14:00 [ main:10731 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:14:00 [ main:10736 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:14:00 [ main:10740 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:14:00 [ main:10740 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:14:00 [ main:10746 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@7725aa0c] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:14:00 [ main:10747 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:14:00 [ main:10747 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:14:00 [ main:10748 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:14:00 [ main:10748 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:14:00 [ main:10748 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:14:00 [ main:10750 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10750 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:14:00 [ main:10751 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10752 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:14:00 [ main:10753 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:14:00 [ main:10754 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:14:00 [ main:10773 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:14:00 [ main:10773 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:14:00 [ main:10773 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:14:00 [ main:10773 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:14:00 [ main:10776 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:14:00 [ main:10776 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:14:00 [ main:10777 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10777 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:14:00 [ main:10777 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@22240e82]
2017-03-16 11:14:00 [ main:10778 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10779 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10780 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10781 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:14:00 [ main:10782 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:14:00 [ main:10783 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:14:00 [ main:10798 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:14:00 [ main:10798 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:14:00 [ main:10799 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:14:00 [ main:10799 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:14:00 [ main:10802 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:14:00 [ main:10802 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:14:00 [ main:10803 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10803 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:14:00 [ main:10803 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@cb0c187]
2017-03-16 11:14:00 [ main:10804 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10804 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:14:00 [ main:10804 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10804 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:14:00 [ main:10804 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:14:00 [ main:10805 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:14:00 [ main:10806 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:14:00 [ main:10808 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:14:00 [ main:10809 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:14:00 [ main:10823 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:14:00 [ main:10824 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:14:00 [ main:10824 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:14:00 [ main:10824 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:14:00 [ main:10826 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:14:00 [ main:10826 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:14:00 [ main:10826 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10826 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:14:00 [ main:10827 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@69248a85]
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10828 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10829 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10830 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10838 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:14:00 [ main:10838 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:14:00 [ main:10838 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:14:00 [ main:10838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:14:00 [ main:10839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:14:00 [ main:10851 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:14:00 [ main:10851 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:14:00 [ main:10851 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:14:00 [ main:10852 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:14:00 [ main:10854 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:14:00 [ main:10854 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:14:00 [ main:10855 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10855 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:14:00 [ main:10855 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@2c8446f7]
2017-03-16 11:14:00 [ main:10856 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10856 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:14:00 [ main:10856 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10856 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:14:00 [ main:10856 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10856 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:14:00 [ main:10856 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10856 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:14:00 [ main:10856 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10859 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:14:00 [ main:10860 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:14:00 [ main:10871 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:14:00 [ main:10871 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:14:00 [ main:10871 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:14:00 [ main:10871 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:14:00 [ main:10871 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:14:00 [ main:10871 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:14:00 [ main:10872 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:14:00 [ main:10916 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:14:00 [ main:10936 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3fba6481] for Hibernate transaction
2017-03-16 11:14:00 [ main:10937 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3fba6481]
2017-03-16 11:14:00 [ main:10949 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:14:00 [ main:10981 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:14:00 [ main:10981 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3fba6481]
2017-03-16 11:14:00 [ main:10998 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3fba6481] after transaction
2017-03-16 11:14:00 [ main:10998 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:14:00 [ main:10999 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:14:00 [ main:10999 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@656ff7f9] for Hibernate transaction
2017-03-16 11:14:00 [ main:10999 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@656ff7f9]
2017-03-16 11:14:00 [ main:11000 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:14:00 [ main:11006 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:14:00 [ main:11006 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@656ff7f9]
2017-03-16 11:14:00 [ main:11006 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@656ff7f9] after transaction
2017-03-16 11:14:00 [ main:11007 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:14:00 [ main:11008 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:14:00 [ main:11008 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@68871741] for Hibernate transaction
2017-03-16 11:14:00 [ main:11008 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@68871741]
2017-03-16 11:14:00 [ main:11008 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:14:00 [ main:11009 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:14:00 [ main:11009 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@68871741]
2017-03-16 11:14:00 [ main:11011 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@68871741] after transaction
2017-03-16 11:14:00 [ main:11011 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:14:00 [ main:11011 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:14:00 [ main:11011 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@20118bdc] for Hibernate transaction
2017-03-16 11:14:00 [ main:11011 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@20118bdc]
2017-03-16 11:14:00 [ main:11012 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:14:00 [ main:11013 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:14:00 [ main:11013 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@20118bdc]
2017-03-16 11:14:00 [ main:11014 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@20118bdc] after transaction
2017-03-16 11:14:00 [ main:11014 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:14:39 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]; startup date [Thu Mar 16 11:14:39 CST 2017]; root of context hierarchy
2017-03-16 11:14:39 [ main:45 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:14:39 [ main:56 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:14:39 [ main:77 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:14:39 [ main:78 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:34:29 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13: display name [org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13]; startup date [Thu Mar 16 11:34:29 CST 2017]; root of context hierarchy
2017-03-16 11:34:29 [ main:66 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:34:29 [ main:78 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:34:29 [ main:113 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:34:29 [ main:114 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:34:32 [ main:2888 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:34:32 [ main:2907 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:34:32 [ main:2933 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:34:32 [ main:2933 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13]: org.springframework.beans.factory.support.DefaultListableBeanFactory@6645add0
2017-03-16 11:34:32 [ main:2933 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13: display name [org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13]; startup date [Thu Mar 16 11:34:29 CST 2017]; root of context hierarchy
2017-03-16 11:34:32 [ main:2949 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:34:32 [ main:2949 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:34:32 [ main:2962 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:34:32 [ main:2973 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:34:32 [ main:2975 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6c353acd]
2017-03-16 11:34:32 [ main:2976 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@356defec]
2017-03-16 11:34:32 [ main:2977 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6645add0: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:34:32 [ main:2977 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:34:32 [ main:2978 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:34:32 [ main:2981 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:34:32 [ main:2994 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:32 [ main:2994 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:32 [ main:2995 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:34:32 [ main:2999 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:34:32 [ main:2999 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:34:32 [ main:3000 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:34:32 [ main:3003 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:34:32 [ main:3003 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:32 [ main:3006 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:34:32 [ main:3006 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:34:32 [ main:3006 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:34:32 [ main:3020 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:34:32 [ main:3027 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:34:32 [ main:3028 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:34:32 [ main:3403 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:34:33 [ main:3706 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:33 [ main:3708 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:34:33 [ main:3708 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:34:33 [ main:3708 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:34:33 [ main:3709 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:34:33 [ main:3711 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:34:33 [ main:3712 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:33 [ main:3718 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:33 [ main:3724 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3732 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:34:33 [ main:3737 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@1eecf45c]
2017-03-16 11:34:33 [ main:3784 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:34:33 [ main:3784 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:34:33 [ main:3785 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:34:33 [ main:3788 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:34:33 [ main:3788 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:34:33 [ main:3791 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:34:33 [ main:3795 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:34:33 [ main:3795 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:34:33 [ main:3800 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@3f83dcf3] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:34:33 [ main:3801 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:33 [ main:3801 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:34:33 [ main:3802 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:34:33 [ main:3802 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:34:33 [ main:3802 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:34:33 [ main:3804 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:34:33 [ main:3805 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3806 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:34:33 [ main:3807 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:34:33 [ main:3808 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:34:33 [ main:3827 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:34:33 [ main:3827 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:34:33 [ main:3827 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:34:33 [ main:3827 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:34:33 [ main:3830 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:34:33 [ main:3830 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:33 [ main:3830 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3830 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:34:33 [ main:3830 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@3d2b92fd]
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:34:33 [ main:3832 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3833 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3834 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:34:33 [ main:3835 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:34:33 [ main:3836 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:34:33 [ main:3850 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:34:33 [ main:3850 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:34:33 [ main:3850 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:34:33 [ main:3850 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:34:33 [ main:3855 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:34:33 [ main:3855 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:33 [ main:3855 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3855 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:34:33 [ main:3855 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@1eb99641]
2017-03-16 11:34:33 [ main:3856 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3857 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3860 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:34:33 [ main:3861 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:34:33 [ main:3862 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:34:33 [ main:3862 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:34:33 [ main:3862 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:34:33 [ main:3862 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:34:33 [ main:3877 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:34:33 [ main:3877 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:34:33 [ main:3877 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:34:33 [ main:3877 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:34:33 [ main:3879 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:34:33 [ main:3879 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:33 [ main:3880 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3880 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:34:33 [ main:3880 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@496d5aa8]
2017-03-16 11:34:33 [ main:3881 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3881 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:34:33 [ main:3881 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3881 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:34:33 [ main:3881 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3881 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:34:33 [ main:3881 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3881 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:34:33 [ main:3881 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3881 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:34:33 [ main:3884 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3884 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3884 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3890 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:34:33 [ main:3891 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:34:33 [ main:3891 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:34:33 [ main:3891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:34:33 [ main:3891 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:34:33 [ main:3891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:34:33 [ main:3891 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:34:33 [ main:3891 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:34:33 [ main:3891 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3891 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3891 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:34:33 [ main:3892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:34:33 [ main:3905 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:34:33 [ main:3905 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:34:33 [ main:3905 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:34:33 [ main:3906 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:34:33 [ main:3908 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:34:33 [ main:3908 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:33 [ main:3908 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3909 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:34:33 [ main:3909 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@2708ee1b]
2017-03-16 11:34:33 [ main:3910 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3910 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:34:33 [ main:3910 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3910 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:34:33 [ main:3910 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3910 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:34:33 [ main:3910 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3910 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:34:33 [ main:3911 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:34:33 [ main:3913 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:34:33 [ main:3914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:34:33 [ main:3925 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:34:33 [ main:3925 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:34:33 [ main:3925 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:34:33 [ main:3925 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:34:33 [ main:3925 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:34:33 [ main:3926 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:34:33 [ main:3926 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:34:33 [ main:3990 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:34:33 [ main:4013 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@41dff693] for Hibernate transaction
2017-03-16 11:34:33 [ main:4014 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@41dff693]
2017-03-16 11:34:33 [ main:4027 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:34:33 [ main:4152 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:34:33 [ main:4152 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@41dff693]
2017-03-16 11:34:33 [ main:4165 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@41dff693] after transaction
2017-03-16 11:34:33 [ main:4165 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:34:33 [ main:4168 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:34:33 [ main:4168 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7833c80d] for Hibernate transaction
2017-03-16 11:34:33 [ main:4168 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7833c80d]
2017-03-16 11:34:33 [ main:4169 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:34:33 [ main:4171 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:34:33 [ main:4171 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7833c80d]
2017-03-16 11:34:33 [ main:4172 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7833c80d] after transaction
2017-03-16 11:34:33 [ main:4172 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:34:50 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13: display name [org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13]; startup date [Thu Mar 16 11:34:50 CST 2017]; root of context hierarchy
2017-03-16 11:34:50 [ main:45 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:34:50 [ main:57 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:34:50 [ main:78 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:34:50 [ main:80 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:38:52 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]; startup date [Thu Mar 16 11:38:52 CST 2017]; root of context hierarchy
2017-03-16 11:38:53 [ main:51 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:38:53 [ main:63 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:38:53 [ main:86 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:38:53 [ main:87 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:39:02 [ main:9357 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:39:02 [ main:9382 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:39:02 [ main:9405 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:39:02 [ main:9405 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]: org.springframework.beans.factory.support.DefaultListableBeanFactory@6645add0
2017-03-16 11:39:02 [ main:9405 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]; startup date [Thu Mar 16 11:38:52 CST 2017]; root of context hierarchy
2017-03-16 11:39:02 [ main:9419 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:39:02 [ main:9420 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:39:02 [ main:9435 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:39:02 [ main:9447 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:39:02 [ main:9449 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1aa7a03b]
2017-03-16 11:39:02 [ main:9450 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@44a28a5b]
2017-03-16 11:39:02 [ main:9451 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6645add0: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:39:02 [ main:9452 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:39:02 [ main:9452 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:39:02 [ main:9455 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:39:02 [ main:9469 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:02 [ main:9469 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:02 [ main:9470 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:39:02 [ main:9474 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:39:02 [ main:9474 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:39:02 [ main:9475 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:39:02 [ main:9478 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:39:02 [ main:9479 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:02 [ main:9481 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:39:02 [ main:9482 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:39:02 [ main:9482 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:39:02 [ main:9494 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:39:02 [ main:9500 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:39:02 [ main:9501 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:39:02 [ main:9811 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:39:03 [ main:10153 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:03 [ main:10156 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:39:03 [ main:10156 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:39:03 [ main:10156 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:39:03 [ main:10156 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:39:03 [ main:10159 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:39:03 [ main:10160 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:03 [ main:10166 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:03 [ main:10172 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10178 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:39:03 [ main:10183 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@35853853]
2017-03-16 11:39:03 [ main:10232 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:39:03 [ main:10233 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:39:03 [ main:10233 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:39:03 [ main:10236 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:39:03 [ main:10236 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:39:03 [ main:10240 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:39:03 [ main:10243 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:39:03 [ main:10244 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:39:03 [ main:10249 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@47ace768] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:39:03 [ main:10249 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:03 [ main:10250 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:39:03 [ main:10250 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:39:03 [ main:10250 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:39:03 [ main:10250 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:39:03 [ main:10252 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10254 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:39:03 [ main:10255 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:39:03 [ main:10256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:39:03 [ main:10257 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:39:03 [ main:10257 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:39:03 [ main:10275 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:39:03 [ main:10275 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:39:03 [ main:10275 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:39:03 [ main:10275 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:39:03 [ main:10278 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:39:03 [ main:10278 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:03 [ main:10278 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10278 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:39:03 [ main:10278 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@43c58c4a]
2017-03-16 11:39:03 [ main:10280 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10280 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:39:03 [ main:10280 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10280 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:39:03 [ main:10280 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10280 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:39:03 [ main:10281 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:39:03 [ main:10282 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10283 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10284 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10285 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10285 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:39:03 [ main:10285 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:39:03 [ main:10285 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:39:03 [ main:10285 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:39:03 [ main:10285 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:39:03 [ main:10285 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:39:03 [ main:10298 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:39:03 [ main:10298 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:39:03 [ main:10298 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:39:03 [ main:10298 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:39:03 [ main:10302 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:39:03 [ main:10302 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:03 [ main:10302 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10302 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:39:03 [ main:10302 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@6a55c240]
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:39:03 [ main:10304 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10305 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10306 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:39:03 [ main:10307 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:39:03 [ main:10308 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:39:03 [ main:10323 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:39:03 [ main:10323 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:39:03 [ main:10323 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:39:03 [ main:10324 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:39:03 [ main:10326 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:39:03 [ main:10326 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:03 [ main:10326 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10326 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:39:03 [ main:10326 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@364f4c91]
2017-03-16 11:39:03 [ main:10327 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10327 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:39:03 [ main:10327 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10327 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10328 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10329 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:39:03 [ main:10330 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:39:03 [ main:10331 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:39:03 [ main:10352 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:39:03 [ main:10353 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:39:03 [ main:10353 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:39:03 [ main:10353 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:39:03 [ main:10356 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:39:03 [ main:10356 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:03 [ main:10356 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10356 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:39:03 [ main:10356 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@7a7005f1]
2017-03-16 11:39:03 [ main:10357 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10357 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:39:03 [ main:10357 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10357 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:39:03 [ main:10358 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:39:03 [ main:10359 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:39:03 [ main:10361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:39:03 [ main:10362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:39:03 [ main:10373 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:39:03 [ main:10373 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:39:03 [ main:10373 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:39:03 [ main:10373 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:39:03 [ main:10373 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:39:03 [ main:10373 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:39:03 [ main:10373 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:39:03 [ main:10438 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:39:03 [ main:10460 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@64fb3bc4] for Hibernate transaction
2017-03-16 11:39:03 [ main:10462 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@64fb3bc4]
2017-03-16 11:39:03 [ main:10474 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:39:03 [ main:10597 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:39:03 [ main:10597 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@64fb3bc4]
2017-03-16 11:39:03 [ main:10600 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@64fb3bc4] after transaction
2017-03-16 11:39:03 [ main:10600 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:39:03 [ main:10601 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:39:03 [ main:10601 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3a192cf2] for Hibernate transaction
2017-03-16 11:39:03 [ main:10601 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3a192cf2]
2017-03-16 11:39:03 [ main:10602 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:39:03 [ main:10603 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:39:03 [ main:10604 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3a192cf2]
2017-03-16 11:39:03 [ main:10604 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3a192cf2] after transaction
2017-03-16 11:39:03 [ main:10604 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:39:32 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9: display name [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]; startup date [Thu Mar 16 11:39:32 CST 2017]; root of context hierarchy
2017-03-16 11:39:32 [ main:44 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:39:32 [ main:56 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:39:32 [ main:77 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:39:32 [ main:78 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:40:08 [ main:36383 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:40:08 [ main:36426 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:40:08 [ main:36465 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:40:08 [ main:36466 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]: org.springframework.beans.factory.support.DefaultListableBeanFactory@6645add0
2017-03-16 11:40:08 [ main:36466 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9: display name [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]; startup date [Thu Mar 16 11:39:32 CST 2017]; root of context hierarchy
2017-03-16 11:40:08 [ main:36490 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:40:08 [ main:36490 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:40:08 [ main:36520 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:40:08 [ main:36542 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:40:08 [ main:36544 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1aa7a03b]
2017-03-16 11:40:08 [ main:36547 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@44a28a5b]
2017-03-16 11:40:08 [ main:36550 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6645add0: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:40:08 [ main:36552 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:40:08 [ main:36552 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:40:08 [ main:36559 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:40:08 [ main:36587 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:08 [ main:36587 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:08 [ main:36590 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:40:08 [ main:36597 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:40:08 [ main:36597 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:40:08 [ main:36602 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:40:08 [ main:36608 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:40:08 [ main:36608 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:08 [ main:36613 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:40:08 [ main:36613 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:40:08 [ main:36613 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:40:09 [ main:36640 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:40:09 [ main:36654 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:40:09 [ main:36656 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:40:09 [ main:37238 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:40:10 [ main:37816 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:10 [ main:37818 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:40:10 [ main:37821 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:40:10 [ main:37821 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:40:10 [ main:37821 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:40:10 [ main:37825 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:40:10 [ main:37826 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:10 [ main:37840 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:10 [ main:37853 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:37871 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:40:10 [ main:37879 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@6e445622]
2017-03-16 11:40:10 [ main:37988 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:40:10 [ main:37988 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:40:10 [ main:37988 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:40:10 [ main:37992 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:40:10 [ main:37992 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:40:10 [ main:37999 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:40:10 [ main:38009 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:40:10 [ main:38009 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:40:10 [ main:38023 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@43e3a075] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:40:10 [ main:38024 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:10 [ main:38025 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:40:10 [ main:38025 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:40:10 [ main:38025 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:40:10 [ main:38025 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:40:10 [ main:38030 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:40:10 [ main:38030 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38030 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:40:10 [ main:38031 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38031 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:40:10 [ main:38031 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38031 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:40:10 [ main:38031 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38031 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:40:10 [ main:38031 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38031 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:40:10 [ main:38032 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38032 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:40:10 [ main:38032 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38032 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:40:10 [ main:38032 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38032 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:40:10 [ main:38032 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38033 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:40:10 [ main:38033 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38033 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38033 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38033 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:40:10 [ main:38034 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38034 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38034 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38035 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:40:10 [ main:38035 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38035 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:40:10 [ main:38035 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38035 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:40:10 [ main:38036 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38037 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:40:10 [ main:38038 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:40:10 [ main:38038 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:40:10 [ main:38038 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:40:10 [ main:38038 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:40:10 [ main:38038 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:40:10 [ main:38076 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:40:10 [ main:38077 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:40:10 [ main:38077 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:40:10 [ main:38077 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:40:10 [ main:38083 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:40:10 [ main:38083 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:10 [ main:38084 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38084 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:40:10 [ main:38085 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@2ced9829]
2017-03-16 11:40:10 [ main:38088 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38088 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:40:10 [ main:38089 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38089 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:40:10 [ main:38089 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38089 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:40:10 [ main:38089 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38089 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:40:10 [ main:38089 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38089 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:40:10 [ main:38090 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38090 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:40:10 [ main:38090 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38090 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:40:10 [ main:38090 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38090 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:40:10 [ main:38090 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38090 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:40:10 [ main:38090 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38090 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:40:10 [ main:38091 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38091 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:40:10 [ main:38091 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38091 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:40:10 [ main:38091 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38091 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:40:10 [ main:38091 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38091 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:40:10 [ main:38091 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38091 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:40:10 [ main:38092 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38092 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38092 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38092 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:40:10 [ main:38092 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38092 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38092 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38092 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:40:10 [ main:38092 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:40:10 [ main:38093 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38094 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:40:10 [ main:38095 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:40:10 [ main:38095 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:40:10 [ main:38095 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:40:10 [ main:38095 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:40:10 [ main:38096 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:40:10 [ main:38124 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:40:10 [ main:38124 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:40:10 [ main:38124 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:40:10 [ main:38124 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:40:10 [ main:38130 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:40:10 [ main:38131 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:10 [ main:38131 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38131 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:40:10 [ main:38131 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@3ebe6c82]
2017-03-16 11:40:10 [ main:38136 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38136 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:40:10 [ main:38137 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38137 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:40:10 [ main:38137 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38137 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:40:10 [ main:38138 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38138 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:40:10 [ main:38138 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38138 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:40:10 [ main:38138 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38138 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:40:10 [ main:38138 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38138 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:40:10 [ main:38138 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38139 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:40:10 [ main:38139 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38139 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:40:10 [ main:38139 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38139 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:40:10 [ main:38139 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38139 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:40:10 [ main:38139 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38139 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:40:10 [ main:38139 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38140 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:40:10 [ main:38140 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38140 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:40:10 [ main:38140 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38140 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:40:10 [ main:38140 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38140 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:40:10 [ main:38140 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38140 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:40:10 [ main:38141 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38141 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:40:10 [ main:38141 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38141 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:40:10 [ main:38141 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38141 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:40:10 [ main:38141 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38141 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38141 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38141 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:40:10 [ main:38142 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38142 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38142 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38142 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:40:10 [ main:38142 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38142 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:40:10 [ main:38142 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38142 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:40:10 [ main:38142 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38142 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38143 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:40:10 [ main:38144 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:40:10 [ main:38171 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:40:10 [ main:38171 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:40:10 [ main:38171 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:40:10 [ main:38172 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:40:10 [ main:38175 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:40:10 [ main:38175 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:10 [ main:38175 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38175 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:40:10 [ main:38175 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@5eedf162]
2017-03-16 11:40:10 [ main:38176 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38176 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38177 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:40:10 [ main:38178 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38178 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:40:10 [ main:38178 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38178 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:40:10 [ main:38179 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:40:10 [ main:38179 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:40:10 [ main:38180 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:40:10 [ main:38180 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:40:10 [ main:38180 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38180 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:40:10 [ main:38180 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38181 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:40:10 [ main:38181 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:40:10 [ main:38181 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:40:10 [ main:38181 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38181 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:40:10 [ main:38182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38194 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38197 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:40:10 [ main:38197 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:40:10 [ main:38197 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:40:10 [ main:38197 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:40:10 [ main:38197 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38197 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:40:10 [ main:38199 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38200 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:40:10 [ main:38200 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:40:10 [ main:38200 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:40:10 [ main:38200 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:40:10 [ main:38200 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:40:10 [ main:38200 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:40:10 [ main:38221 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:40:10 [ main:38222 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:40:10 [ main:38223 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:40:10 [ main:38224 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:40:10 [ main:38230 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:40:10 [ main:38231 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:10 [ main:38231 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38231 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:40:10 [ main:38231 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@6b4cbf71]
2017-03-16 11:40:10 [ main:38234 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38234 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:40:10 [ main:38235 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38235 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:40:10 [ main:38235 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38235 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:40:10 [ main:38235 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38235 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:40:10 [ main:38235 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38235 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:40:10 [ main:38236 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38236 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:40:10 [ main:38236 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38236 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:40:10 [ main:38236 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38236 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:40:10 [ main:38236 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38236 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:40:10 [ main:38237 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38237 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:40:10 [ main:38237 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38237 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:40:10 [ main:38237 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38237 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:40:10 [ main:38237 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38238 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:40:10 [ main:38238 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38238 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:40:10 [ main:38238 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38238 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38239 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38239 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:40:10 [ main:38239 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38239 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38239 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38239 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:40:10 [ main:38240 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38240 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:40:10 [ main:38240 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38240 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:40:10 [ main:38241 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38241 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:40:10 [ main:38241 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38242 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:40:10 [ main:38243 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:40:10 [ main:38268 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:40:10 [ main:38268 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:40:10 [ main:38268 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:40:10 [ main:38268 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:40:10 [ main:38268 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:40:10 [ main:38269 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:40:10 [ main:38269 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:40:10 [ main:38397 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:40:10 [ main:38442 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6f9f2580] for Hibernate transaction
2017-03-16 11:40:10 [ main:38444 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6f9f2580]
2017-03-16 11:40:10 [ main:38461 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:40:11 [ main:38681 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:40:11 [ main:38681 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6f9f2580]
2017-03-16 11:40:11 [ main:38685 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6f9f2580] after transaction
2017-03-16 11:40:11 [ main:38685 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:40:11 [ main:38686 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:40:11 [ main:38686 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@d9a3137] for Hibernate transaction
2017-03-16 11:40:11 [ main:38687 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@d9a3137]
2017-03-16 11:40:11 [ main:38687 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:40:11 [ main:38692 ] - [ DEBUG ] Initiating transaction rollback
2017-03-16 11:40:11 [ main:38692 ] - [ DEBUG ] Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@d9a3137]
2017-03-16 11:40:11 [ main:38693 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@d9a3137] after transaction
2017-03-16 11:40:11 [ main:38693 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:41:44 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29011b29: display name [org.springframework.context.support.ClassPathXmlApplicationContext@29011b29]; startup date [Thu Mar 16 11:41:44 CST 2017]; root of context hierarchy
2017-03-16 11:41:44 [ main:54 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:41:44 [ main:68 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:41:44 [ main:94 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:41:44 [ main:95 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:41:46 [ main:2535 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:41:46 [ main:2560 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:41:46 [ main:2583 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:41:46 [ main:2583 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@29011b29]: org.springframework.beans.factory.support.DefaultListableBeanFactory@f945a61
2017-03-16 11:41:46 [ main:2584 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@29011b29: display name [org.springframework.context.support.ClassPathXmlApplicationContext@29011b29]; startup date [Thu Mar 16 11:41:44 CST 2017]; root of context hierarchy
2017-03-16 11:41:46 [ main:2601 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:41:46 [ main:2602 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:41:46 [ main:2619 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:41:46 [ main:2633 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:41:46 [ main:2635 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3904e3f1]
2017-03-16 11:41:46 [ main:2636 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@168f6724]
2017-03-16 11:41:46 [ main:2638 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@f945a61: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:41:46 [ main:2638 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:41:46 [ main:2638 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:41:46 [ main:2642 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:41:46 [ main:2659 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:46 [ main:2659 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:46 [ main:2660 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:41:46 [ main:2664 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:41:46 [ main:2664 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:41:46 [ main:2665 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:41:46 [ main:2668 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:41:46 [ main:2669 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:46 [ main:2672 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:41:46 [ main:2672 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:41:46 [ main:2672 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:41:46 [ main:2686 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:41:46 [ main:2695 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:41:46 [ main:2696 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:41:47 [ main:3040 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:41:47 [ main:3398 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:47 [ main:3400 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:41:47 [ main:3400 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:41:47 [ main:3400 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:41:47 [ main:3401 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:41:47 [ main:3403 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:41:47 [ main:3404 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:47 [ main:3411 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:47 [ main:3421 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3429 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:41:47 [ main:3434 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@35853853]
2017-03-16 11:41:47 [ main:3493 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:41:47 [ main:3494 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:41:47 [ main:3494 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:41:47 [ main:3497 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:41:47 [ main:3497 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:41:47 [ main:3501 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:41:47 [ main:3509 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:41:47 [ main:3509 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:41:47 [ main:3515 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@47ace768] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:41:47 [ main:3516 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:47 [ main:3517 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:41:47 [ main:3517 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:41:47 [ main:3517 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:41:47 [ main:3517 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:41:47 [ main:3520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:41:47 [ main:3520 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:41:47 [ main:3520 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:41:47 [ main:3520 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:41:47 [ main:3520 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:41:47 [ main:3522 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3522 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:41:47 [ main:3522 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3522 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:41:47 [ main:3522 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:41:47 [ main:3523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:41:47 [ main:3524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:41:47 [ main:3549 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:41:47 [ main:3549 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:41:47 [ main:3549 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:41:47 [ main:3549 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:41:47 [ main:3552 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:41:47 [ main:3552 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:47 [ main:3553 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3553 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:41:47 [ main:3553 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@43c58c4a]
2017-03-16 11:41:47 [ main:3554 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:41:47 [ main:3554 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3554 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3555 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3556 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:41:47 [ main:3557 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3557 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:41:47 [ main:3557 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3557 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:41:47 [ main:3557 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3557 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3557 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3557 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:41:47 [ main:3557 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3557 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:41:47 [ main:3558 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:41:47 [ main:3559 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:41:47 [ main:3578 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:41:47 [ main:3578 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:41:47 [ main:3578 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:41:47 [ main:3578 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:41:47 [ main:3583 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:41:47 [ main:3583 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:47 [ main:3583 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3583 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:41:47 [ main:3583 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@6a55c240]
2017-03-16 11:41:47 [ main:3584 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3584 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3585 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3586 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3587 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3588 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:41:47 [ main:3589 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:41:47 [ main:3590 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:41:47 [ main:3606 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:41:47 [ main:3606 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:41:47 [ main:3606 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:41:47 [ main:3606 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:41:47 [ main:3611 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:41:47 [ main:3611 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:47 [ main:3612 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3612 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:41:47 [ main:3612 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@364f4c91]
2017-03-16 11:41:47 [ main:3613 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3613 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:41:47 [ main:3613 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3613 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:41:47 [ main:3613 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3613 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:41:47 [ main:3613 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3613 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3614 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3615 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:41:47 [ main:3616 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:41:47 [ main:3617 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:41:47 [ main:3626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:41:47 [ main:3628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:41:47 [ main:3628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:41:47 [ main:3628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:41:47 [ main:3628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:41:47 [ main:3628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:41:47 [ main:3629 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:41:47 [ main:3644 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:41:47 [ main:3644 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:41:47 [ main:3645 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:41:47 [ main:3645 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:41:47 [ main:3648 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:41:47 [ main:3648 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:47 [ main:3648 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3648 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:41:47 [ main:3648 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@24a519a2]
2017-03-16 11:41:47 [ main:3649 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:41:47 [ main:3650 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:41:47 [ main:3651 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3652 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:41:47 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:41:47 [ main:3654 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:41:47 [ main:3668 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:41:47 [ main:3668 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:41:47 [ main:3668 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:41:47 [ main:3668 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:41:47 [ main:3668 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:41:47 [ main:3668 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:41:47 [ main:3668 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:41:48 [ main:3747 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:41:48 [ main:3773 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@36a19624] for Hibernate transaction
2017-03-16 11:41:48 [ main:3774 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@36a19624]
2017-03-16 11:41:48 [ main:3789 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:41:48 [ main:3929 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:41:48 [ main:3929 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@36a19624]
2017-03-16 11:41:48 [ main:3933 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@36a19624] after transaction
2017-03-16 11:41:48 [ main:3934 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:41:48 [ main:3937 ] - [ INFO ] --------------->>>ff80808159922a2c01599237ab430001
2017-03-16 11:41:48 [ main:3937 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:41:48 [ main:3938 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7d6556ab] for Hibernate transaction
2017-03-16 11:41:48 [ main:3938 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7d6556ab]
2017-03-16 11:41:48 [ main:3939 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:41:48 [ main:3944 ] - [ DEBUG ] Initiating transaction rollback
2017-03-16 11:41:48 [ main:3945 ] - [ DEBUG ] Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7d6556ab]
2017-03-16 11:41:48 [ main:3945 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7d6556ab] after transaction
2017-03-16 11:41:48 [ main:3945 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:43:53 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]; startup date [Thu Mar 16 11:43:53 CST 2017]; root of context hierarchy
2017-03-16 11:43:53 [ main:50 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:43:53 [ main:62 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:43:53 [ main:84 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:43:53 [ main:87 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:43:55 [ main:1744 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:43:55 [ main:1762 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:43:55 [ main:1784 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:43:55 [ main:1784 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]: org.springframework.beans.factory.support.DefaultListableBeanFactory@f945a61
2017-03-16 11:43:55 [ main:1784 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]; startup date [Thu Mar 16 11:43:53 CST 2017]; root of context hierarchy
2017-03-16 11:43:55 [ main:1798 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:43:55 [ main:1798 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:43:55 [ main:1812 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:43:55 [ main:1823 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:43:55 [ main:1824 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3904e3f1]
2017-03-16 11:43:55 [ main:1826 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@168f6724]
2017-03-16 11:43:55 [ main:1827 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@f945a61: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:43:55 [ main:1827 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:43:55 [ main:1827 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:43:55 [ main:1830 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:43:55 [ main:1844 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:55 [ main:1844 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:55 [ main:1845 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:43:55 [ main:1848 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:43:55 [ main:1848 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:43:55 [ main:1849 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:43:55 [ main:1852 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:43:55 [ main:1852 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:55 [ main:1855 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:43:55 [ main:1855 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:43:55 [ main:1855 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:43:55 [ main:1867 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:43:55 [ main:1874 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:43:55 [ main:1875 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:43:55 [ main:2163 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:43:56 [ main:2450 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:56 [ main:2453 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:43:56 [ main:2453 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:43:56 [ main:2453 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:43:56 [ main:2453 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:43:56 [ main:2456 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:43:56 [ main:2457 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:56 [ main:2462 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:56 [ main:2469 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2475 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:43:56 [ main:2480 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@51853928]
2017-03-16 11:43:56 [ main:2528 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:43:56 [ main:2528 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:43:56 [ main:2528 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:43:56 [ main:2531 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:43:56 [ main:2531 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:43:56 [ main:2535 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:43:56 [ main:2539 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:43:56 [ main:2539 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:43:56 [ main:2544 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@35194a50] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:43:56 [ main:2545 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:56 [ main:2546 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:43:56 [ main:2546 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:43:56 [ main:2546 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:43:56 [ main:2546 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:43:56 [ main:2548 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:43:56 [ main:2548 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2548 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:43:56 [ main:2548 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2548 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:43:56 [ main:2548 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2548 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2549 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2550 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:43:56 [ main:2551 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:43:56 [ main:2552 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:43:56 [ main:2570 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:43:56 [ main:2570 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:43:56 [ main:2570 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:43:56 [ main:2570 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:43:56 [ main:2573 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:43:56 [ main:2573 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:56 [ main:2574 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2574 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:43:56 [ main:2574 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@66e4540e]
2017-03-16 11:43:56 [ main:2575 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:43:56 [ main:2575 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2575 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:43:56 [ main:2575 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2575 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:43:56 [ main:2575 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2575 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:43:56 [ main:2575 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2575 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2576 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2577 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:43:56 [ main:2578 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:43:56 [ main:2579 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:43:56 [ main:2593 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:43:56 [ main:2593 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:43:56 [ main:2593 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:43:56 [ main:2593 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:43:56 [ main:2597 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:43:56 [ main:2597 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:56 [ main:2597 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2597 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:43:56 [ main:2597 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@2e43a9ef]
2017-03-16 11:43:56 [ main:2599 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:43:56 [ main:2599 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2599 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:43:56 [ main:2599 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2599 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:43:56 [ main:2599 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2599 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:43:56 [ main:2599 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2599 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:43:56 [ main:2600 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2600 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:43:56 [ main:2600 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2600 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:43:56 [ main:2600 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2600 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:43:56 [ main:2600 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2600 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:43:56 [ main:2600 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2600 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2601 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:43:56 [ main:2602 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:43:56 [ main:2603 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2603 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:43:56 [ main:2603 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2603 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:43:56 [ main:2603 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2604 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:43:56 [ main:2605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:43:56 [ main:2605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:43:56 [ main:2605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:43:56 [ main:2605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:43:56 [ main:2605 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:43:56 [ main:2619 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:43:56 [ main:2619 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:43:56 [ main:2619 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:43:56 [ main:2619 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:43:56 [ main:2622 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:43:56 [ main:2622 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:56 [ main:2622 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2622 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:43:56 [ main:2622 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@247d03c0]
2017-03-16 11:43:56 [ main:2623 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:43:56 [ main:2623 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:43:56 [ main:2623 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:43:56 [ main:2623 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:43:56 [ main:2623 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:43:56 [ main:2627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:43:56 [ main:2627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:43:56 [ main:2627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:43:56 [ main:2627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:43:56 [ main:2627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:43:56 [ main:2649 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:43:56 [ main:2649 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:43:56 [ main:2649 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:43:56 [ main:2649 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:43:56 [ main:2652 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:43:56 [ main:2653 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:56 [ main:2653 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2653 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:43:56 [ main:2653 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@337688d3]
2017-03-16 11:43:56 [ main:2654 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2654 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:43:56 [ main:2654 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2654 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:43:56 [ main:2654 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2654 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:43:56 [ main:2654 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2654 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:43:56 [ main:2655 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2656 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:43:56 [ main:2657 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:43:56 [ main:2658 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:43:56 [ main:2670 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:43:56 [ main:2670 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:43:56 [ main:2670 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:43:56 [ main:2670 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:43:56 [ main:2670 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:43:56 [ main:2670 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:43:56 [ main:2670 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:43:56 [ main:2731 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:43:56 [ main:2754 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@49d49f02] for Hibernate transaction
2017-03-16 11:43:56 [ main:2755 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@49d49f02]
2017-03-16 11:43:56 [ main:2767 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:43:56 [ main:2883 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:43:56 [ main:2883 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@49d49f02]
2017-03-16 11:43:56 [ main:2887 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@49d49f02] after transaction
2017-03-16 11:43:56 [ main:2887 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:43:56 [ main:2888 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:43:56 [ main:2888 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6a2c4842] for Hibernate transaction
2017-03-16 11:43:56 [ main:2888 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6a2c4842]
2017-03-16 11:43:56 [ main:2888 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:43:56 [ main:2898 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:43:56 [ main:2898 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@6a2c4842] for Hibernate transaction
2017-03-16 11:43:56 [ main:2898 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:43:56 [ main:2919 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:43:56 [ main:2919 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6a2c4842]
2017-03-16 11:43:56 [ main:2920 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6a2c4842] after transaction
2017-03-16 11:43:56 [ main:2920 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:43:56 [ main:2920 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:43:56 [ main:2920 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@41a6547b] for Hibernate transaction
2017-03-16 11:43:56 [ main:2920 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@41a6547b]
2017-03-16 11:43:56 [ main:2921 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:43:56 [ main:2921 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:43:56 [ main:2921 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@41a6547b]
2017-03-16 11:43:56 [ main:2922 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@41a6547b] after transaction
2017-03-16 11:43:56 [ main:2922 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:07 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9: display name [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]; startup date [Thu Mar 16 11:46:07 CST 2017]; root of context hierarchy
2017-03-16 11:46:07 [ main:46 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:46:07 [ main:58 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:46:07 [ main:80 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:46:07 [ main:81 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:46:10 [ main:2960 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:46:10 [ main:2979 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:46:10 [ main:3001 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:46:10 [ main:3001 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]: org.springframework.beans.factory.support.DefaultListableBeanFactory@6645add0
2017-03-16 11:46:10 [ main:3001 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9: display name [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]; startup date [Thu Mar 16 11:46:07 CST 2017]; root of context hierarchy
2017-03-16 11:46:10 [ main:3016 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:46:10 [ main:3016 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:46:10 [ main:3030 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:46:10 [ main:3041 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:46:10 [ main:3043 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6c353acd]
2017-03-16 11:46:10 [ main:3044 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@356defec]
2017-03-16 11:46:10 [ main:3045 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6645add0: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:46:10 [ main:3045 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:46:10 [ main:3045 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:46:10 [ main:3049 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:46:10 [ main:3062 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:10 [ main:3062 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:10 [ main:3063 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:46:10 [ main:3066 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:46:10 [ main:3066 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:46:10 [ main:3068 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:46:10 [ main:3071 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:46:10 [ main:3071 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:10 [ main:3073 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:46:10 [ main:3074 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:46:10 [ main:3074 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:46:10 [ main:3085 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:46:10 [ main:3092 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:46:10 [ main:3093 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:46:10 [ main:3375 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:46:11 [ main:3667 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:11 [ main:3669 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:46:11 [ main:3670 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:46:11 [ main:3670 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:46:11 [ main:3670 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:46:11 [ main:3672 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:46:11 [ main:3673 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:11 [ main:3679 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:11 [ main:3686 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3692 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:46:11 [ main:3696 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@3d34ec98]
2017-03-16 11:46:11 [ main:3745 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:46:11 [ main:3745 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:46:11 [ main:3746 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:46:11 [ main:3749 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:46:11 [ main:3749 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:46:11 [ main:3753 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:46:11 [ main:3757 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:46:11 [ main:3757 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:46:11 [ main:3762 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@288c819b] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:46:11 [ main:3763 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:11 [ main:3764 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:46:11 [ main:3764 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:46:11 [ main:3764 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:46:11 [ main:3764 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:46:11 [ main:3767 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:46:11 [ main:3767 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:46:11 [ main:3767 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:46:11 [ main:3767 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:46:11 [ main:3767 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:46:11 [ main:3768 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:46:11 [ main:3770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:46:11 [ main:3771 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:46:11 [ main:3790 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:46:11 [ main:3790 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:46:11 [ main:3790 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:46:11 [ main:3790 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:46:11 [ main:3793 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:46:11 [ main:3793 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:11 [ main:3793 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3793 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:46:11 [ main:3793 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@5e7d7108]
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3796 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3797 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3798 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:46:11 [ main:3799 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:46:11 [ main:3813 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:46:11 [ main:3814 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:46:11 [ main:3814 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:46:11 [ main:3814 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:46:11 [ main:3818 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:46:11 [ main:3818 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:11 [ main:3818 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3818 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:46:11 [ main:3818 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@24442e4a]
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3820 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:46:11 [ main:3821 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:46:11 [ main:3822 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3823 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:46:11 [ main:3824 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:46:11 [ main:3825 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:46:11 [ main:3825 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3825 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:46:11 [ main:3825 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3825 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:46:11 [ main:3825 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:46:11 [ main:3825 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:46:11 [ main:3825 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:46:11 [ main:3825 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:46:11 [ main:3825 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:46:11 [ main:3839 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:46:11 [ main:3839 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:46:11 [ main:3839 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:46:11 [ main:3839 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:46:11 [ main:3841 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:46:11 [ main:3842 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:11 [ main:3842 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3842 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:46:11 [ main:3842 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@102bdf72]
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:46:11 [ main:3843 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:46:11 [ main:3845 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3845 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:46:11 [ main:3845 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3845 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3845 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3845 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:46:11 [ main:3845 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3845 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3845 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3845 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3846 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:46:11 [ main:3854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:46:11 [ main:3867 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:46:11 [ main:3867 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:46:11 [ main:3867 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:46:11 [ main:3867 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:46:11 [ main:3870 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:46:11 [ main:3870 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:11 [ main:3870 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3870 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:46:11 [ main:3870 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@3d090e84]
2017-03-16 11:46:11 [ main:3871 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:46:11 [ main:3871 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3871 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:46:11 [ main:3872 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3873 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:46:11 [ main:3874 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:46:11 [ main:3875 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:46:11 [ main:3876 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:46:11 [ main:3876 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:46:11 [ main:3876 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:46:11 [ main:3887 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:46:11 [ main:3887 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:46:11 [ main:3887 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:46:11 [ main:3887 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:46:11 [ main:3887 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:46:11 [ main:3887 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:46:11 [ main:3887 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:46:11 [ main:3947 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:3968 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5ba240e5] for Hibernate transaction
2017-03-16 11:46:11 [ main:3970 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5ba240e5]
2017-03-16 11:46:11 [ main:3983 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4099 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4099 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5ba240e5]
2017-03-16 11:46:11 [ main:4102 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5ba240e5] after transaction
2017-03-16 11:46:11 [ main:4102 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4103 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4103 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6c8185d3] for Hibernate transaction
2017-03-16 11:46:11 [ main:4103 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6c8185d3]
2017-03-16 11:46:11 [ main:4104 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4105 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4105 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6c8185d3]
2017-03-16 11:46:11 [ main:4106 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6c8185d3] after transaction
2017-03-16 11:46:11 [ main:4106 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4123 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:46:11 [ main:4130 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4130 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@d9a3137] for Hibernate transaction
2017-03-16 11:46:11 [ main:4130 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@d9a3137]
2017-03-16 11:46:11 [ main:4130 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4134 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4135 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@d9a3137]
2017-03-16 11:46:11 [ main:4135 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@d9a3137] after transaction
2017-03-16 11:46:11 [ main:4135 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4135 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4135 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@25187150] for Hibernate transaction
2017-03-16 11:46:11 [ main:4135 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@25187150]
2017-03-16 11:46:11 [ main:4136 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4146 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4146 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@25187150]
2017-03-16 11:46:11 [ main:4147 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@25187150] after transaction
2017-03-16 11:46:11 [ main:4147 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4147 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4147 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4ea2d2b0] for Hibernate transaction
2017-03-16 11:46:11 [ main:4147 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4ea2d2b0]
2017-03-16 11:46:11 [ main:4148 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4150 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4150 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4ea2d2b0]
2017-03-16 11:46:11 [ main:4151 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4ea2d2b0] after transaction
2017-03-16 11:46:11 [ main:4151 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4162 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:46:11 [ main:4168 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4168 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@54bbdd1f] for Hibernate transaction
2017-03-16 11:46:11 [ main:4168 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@54bbdd1f]
2017-03-16 11:46:11 [ main:4169 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4176 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4176 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@54bbdd1f]
2017-03-16 11:46:11 [ main:4182 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@54bbdd1f] after transaction
2017-03-16 11:46:11 [ main:4182 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4183 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4183 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@60c85184] for Hibernate transaction
2017-03-16 11:46:11 [ main:4183 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@60c85184]
2017-03-16 11:46:11 [ main:4183 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4185 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4185 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@60c85184]
2017-03-16 11:46:11 [ main:4185 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@60c85184] after transaction
2017-03-16 11:46:11 [ main:4185 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4187 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4187 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6709fce5] for Hibernate transaction
2017-03-16 11:46:11 [ main:4187 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6709fce5]
2017-03-16 11:46:11 [ main:4188 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4189 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4189 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6709fce5]
2017-03-16 11:46:11 [ main:4192 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6709fce5] after transaction
2017-03-16 11:46:11 [ main:4192 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4192 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4192 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@e68b3db] for Hibernate transaction
2017-03-16 11:46:11 [ main:4192 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@e68b3db]
2017-03-16 11:46:11 [ main:4193 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4194 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4194 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@e68b3db]
2017-03-16 11:46:11 [ main:4195 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@e68b3db] after transaction
2017-03-16 11:46:11 [ main:4195 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4204 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:46:11 [ main:4211 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4211 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@e60c4e2] for Hibernate transaction
2017-03-16 11:46:11 [ main:4211 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@e60c4e2]
2017-03-16 11:46:11 [ main:4212 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4213 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4213 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@e60c4e2]
2017-03-16 11:46:11 [ main:4214 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@e60c4e2] after transaction
2017-03-16 11:46:11 [ main:4214 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4215 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4215 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7bb434bd] for Hibernate transaction
2017-03-16 11:46:11 [ main:4215 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7bb434bd]
2017-03-16 11:46:11 [ main:4215 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4222 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4222 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7bb434bd]
2017-03-16 11:46:11 [ main:4223 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7bb434bd] after transaction
2017-03-16 11:46:11 [ main:4223 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4223 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4223 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@54fecad4] for Hibernate transaction
2017-03-16 11:46:11 [ main:4223 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@54fecad4]
2017-03-16 11:46:11 [ main:4224 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4225 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4225 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@54fecad4]
2017-03-16 11:46:11 [ main:4226 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@54fecad4] after transaction
2017-03-16 11:46:11 [ main:4226 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4226 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4226 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@635b4736] for Hibernate transaction
2017-03-16 11:46:11 [ main:4226 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@635b4736]
2017-03-16 11:46:11 [ main:4227 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4228 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4228 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@635b4736]
2017-03-16 11:46:11 [ main:4228 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@635b4736] after transaction
2017-03-16 11:46:11 [ main:4228 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4228 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4228 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@57101ba4] for Hibernate transaction
2017-03-16 11:46:11 [ main:4228 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@57101ba4]
2017-03-16 11:46:11 [ main:4229 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4230 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4230 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@57101ba4]
2017-03-16 11:46:11 [ main:4231 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@57101ba4] after transaction
2017-03-16 11:46:11 [ main:4231 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4231 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4232 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@65076fbc] for Hibernate transaction
2017-03-16 11:46:11 [ main:4232 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@65076fbc]
2017-03-16 11:46:11 [ main:4232 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4233 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4233 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@65076fbc]
2017-03-16 11:46:11 [ main:4234 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@65076fbc] after transaction
2017-03-16 11:46:11 [ main:4234 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4234 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4234 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@32b76997] for Hibernate transaction
2017-03-16 11:46:11 [ main:4234 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@32b76997]
2017-03-16 11:46:11 [ main:4235 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4236 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4236 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@32b76997]
2017-03-16 11:46:11 [ main:4237 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@32b76997] after transaction
2017-03-16 11:46:11 [ main:4237 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4246 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:46:11 [ main:4252 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4253 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@590106e] for Hibernate transaction
2017-03-16 11:46:11 [ main:4253 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@590106e]
2017-03-16 11:46:11 [ main:4253 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4255 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4255 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@590106e]
2017-03-16 11:46:11 [ main:4255 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@590106e] after transaction
2017-03-16 11:46:11 [ main:4255 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4256 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4256 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@725651ca] for Hibernate transaction
2017-03-16 11:46:11 [ main:4256 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@725651ca]
2017-03-16 11:46:11 [ main:4256 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4258 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4258 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@725651ca]
2017-03-16 11:46:11 [ main:4260 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@725651ca] after transaction
2017-03-16 11:46:11 [ main:4260 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4267 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:46:11 [ main:4273 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4273 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@31963228] for Hibernate transaction
2017-03-16 11:46:11 [ main:4273 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@31963228]
2017-03-16 11:46:11 [ main:4274 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4275 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4275 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@31963228]
2017-03-16 11:46:11 [ main:4276 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@31963228] after transaction
2017-03-16 11:46:11 [ main:4276 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4277 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4277 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3b2b979d] for Hibernate transaction
2017-03-16 11:46:11 [ main:4277 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3b2b979d]
2017-03-16 11:46:11 [ main:4277 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4281 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:46:11 [ main:4281 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3b2b979d] for Hibernate transaction
2017-03-16 11:46:11 [ main:4281 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:46:11 [ main:4301 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4301 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3b2b979d]
2017-03-16 11:46:11 [ main:4302 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3b2b979d] after transaction
2017-03-16 11:46:11 [ main:4302 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4302 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4302 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7dfc31d5] for Hibernate transaction
2017-03-16 11:46:11 [ main:4302 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7dfc31d5]
2017-03-16 11:46:11 [ main:4303 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4304 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4304 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7dfc31d5]
2017-03-16 11:46:11 [ main:4304 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7dfc31d5] after transaction
2017-03-16 11:46:11 [ main:4304 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:46:11 [ main:4312 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:46:11 [ main:4317 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:46:11 [ main:4318 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@49043ad5] for Hibernate transaction
2017-03-16 11:46:11 [ main:4318 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@49043ad5]
2017-03-16 11:46:11 [ main:4318 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:46:11 [ main:4318 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:46:11 [ main:4318 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@49043ad5]
2017-03-16 11:46:11 [ main:4319 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@49043ad5] after transaction
2017-03-16 11:46:11 [ main:4319 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:23 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13: display name [org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13]; startup date [Thu Mar 16 11:48:23 CST 2017]; root of context hierarchy
2017-03-16 11:48:23 [ main:46 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:48:23 [ main:58 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:48:23 [ main:79 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:48:23 [ main:80 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:48:24 [ main:1607 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:48:24 [ main:1625 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:48:24 [ main:1646 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:48:24 [ main:1646 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13]: org.springframework.beans.factory.support.DefaultListableBeanFactory@54b99e44
2017-03-16 11:48:24 [ main:1646 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13: display name [org.springframework.context.support.ClassPathXmlApplicationContext@697a3d13]; startup date [Thu Mar 16 11:48:23 CST 2017]; root of context hierarchy
2017-03-16 11:48:24 [ main:1661 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:48:24 [ main:1662 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:48:24 [ main:1675 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:48:24 [ main:1686 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:48:24 [ main:1687 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@70110075]
2017-03-16 11:48:24 [ main:1689 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@20bc780e]
2017-03-16 11:48:24 [ main:1690 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@54b99e44: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:48:24 [ main:1690 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:48:24 [ main:1691 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:48:24 [ main:1694 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:48:24 [ main:1707 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:24 [ main:1707 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:24 [ main:1708 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:48:24 [ main:1712 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:48:24 [ main:1712 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:48:24 [ main:1713 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:48:24 [ main:1716 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:48:24 [ main:1716 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:24 [ main:1719 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:48:24 [ main:1719 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:48:24 [ main:1719 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:48:25 [ main:1731 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:48:25 [ main:1738 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:48:25 [ main:1738 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:48:25 [ main:2027 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:48:25 [ main:2316 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:25 [ main:2318 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:48:25 [ main:2318 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:48:25 [ main:2319 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:48:25 [ main:2319 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:48:25 [ main:2322 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:48:25 [ main:2323 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:25 [ main:2328 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:25 [ main:2334 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2341 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:48:25 [ main:2345 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@3f86f612]
2017-03-16 11:48:25 [ main:2393 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:48:25 [ main:2393 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:48:25 [ main:2393 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:48:25 [ main:2396 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:48:25 [ main:2396 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:48:25 [ main:2400 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:48:25 [ main:2404 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:48:25 [ main:2404 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:48:25 [ main:2409 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@5d811d55] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:48:25 [ main:2410 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:25 [ main:2411 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:48:25 [ main:2411 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:48:25 [ main:2411 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:48:25 [ main:2411 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:48:25 [ main:2413 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2414 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2415 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:48:25 [ main:2416 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:48:25 [ main:2417 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2418 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:48:25 [ main:2418 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:48:25 [ main:2418 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:48:25 [ main:2418 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:48:25 [ main:2418 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:48:25 [ main:2418 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:48:25 [ main:2437 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:48:25 [ main:2437 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:48:25 [ main:2437 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:48:25 [ main:2437 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:48:25 [ main:2440 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:48:25 [ main:2440 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:25 [ main:2440 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2440 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:48:25 [ main:2440 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@493b0ccd]
2017-03-16 11:48:25 [ main:2442 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2442 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:48:25 [ main:2442 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2442 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:48:25 [ main:2442 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2442 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:48:25 [ main:2442 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2442 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:48:25 [ main:2442 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2442 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:48:25 [ main:2443 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2444 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:48:25 [ main:2445 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:48:25 [ main:2446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:48:25 [ main:2447 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:48:25 [ main:2461 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:48:25 [ main:2461 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:48:25 [ main:2461 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:48:25 [ main:2461 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:48:25 [ main:2465 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:48:25 [ main:2465 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:25 [ main:2465 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2465 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:48:25 [ main:2465 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@661303aa]
2017-03-16 11:48:25 [ main:2466 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:48:25 [ main:2466 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2466 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:48:25 [ main:2466 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2466 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:48:25 [ main:2466 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2467 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:48:25 [ main:2468 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2468 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:48:25 [ main:2468 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2468 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:48:25 [ main:2468 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2468 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:48:25 [ main:2468 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2468 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:48:25 [ main:2468 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2468 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:48:25 [ main:2469 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:48:25 [ main:2470 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:48:25 [ main:2471 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:48:25 [ main:2472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:48:25 [ main:2472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:48:25 [ main:2472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:48:25 [ main:2472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:48:25 [ main:2472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:48:25 [ main:2472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:48:25 [ main:2472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:48:25 [ main:2472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:48:25 [ main:2486 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:48:25 [ main:2487 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:48:25 [ main:2487 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:48:25 [ main:2487 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:48:25 [ main:2489 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:48:25 [ main:2490 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:25 [ main:2490 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2490 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:48:25 [ main:2490 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@53d6ba07]
2017-03-16 11:48:25 [ main:2491 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:48:25 [ main:2491 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2491 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:48:25 [ main:2491 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2491 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:48:25 [ main:2491 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2491 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:48:25 [ main:2491 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:48:25 [ main:2492 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2494 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2501 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:48:25 [ main:2502 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:48:25 [ main:2514 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:48:25 [ main:2514 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:48:25 [ main:2514 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:48:25 [ main:2514 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:48:25 [ main:2517 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:48:25 [ main:2517 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:25 [ main:2518 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2518 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:48:25 [ main:2518 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@64bd8f9c]
2017-03-16 11:48:25 [ main:2519 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:48:25 [ main:2519 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2519 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:48:25 [ main:2520 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2521 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:48:25 [ main:2522 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:48:25 [ main:2523 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:48:25 [ main:2524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:48:25 [ main:2524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:48:25 [ main:2524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:48:25 [ main:2524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:48:25 [ main:2524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:48:25 [ main:2524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:48:25 [ main:2524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:48:25 [ main:2524 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:48:25 [ main:2535 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:48:25 [ main:2535 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:48:25 [ main:2535 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:48:25 [ main:2535 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:48:25 [ main:2535 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:48:25 [ main:2535 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:48:25 [ main:2535 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:48:25 [ main:2595 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:25 [ main:2616 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@42924a3b] for Hibernate transaction
2017-03-16 11:48:25 [ main:2617 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@42924a3b]
2017-03-16 11:48:25 [ main:2631 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2749 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2749 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@42924a3b]
2017-03-16 11:48:26 [ main:2752 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@42924a3b] after transaction
2017-03-16 11:48:26 [ main:2752 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2754 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2754 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@11323617] for Hibernate transaction
2017-03-16 11:48:26 [ main:2754 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@11323617]
2017-03-16 11:48:26 [ main:2755 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2756 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2756 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@11323617]
2017-03-16 11:48:26 [ main:2757 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@11323617] after transaction
2017-03-16 11:48:26 [ main:2757 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2773 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:48:26 [ main:2780 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2780 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7714dc3e] for Hibernate transaction
2017-03-16 11:48:26 [ main:2780 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7714dc3e]
2017-03-16 11:48:26 [ main:2780 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2785 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2785 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7714dc3e]
2017-03-16 11:48:26 [ main:2785 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7714dc3e] after transaction
2017-03-16 11:48:26 [ main:2785 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2786 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2786 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7dbd3222] for Hibernate transaction
2017-03-16 11:48:26 [ main:2786 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7dbd3222]
2017-03-16 11:48:26 [ main:2786 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2795 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2795 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7dbd3222]
2017-03-16 11:48:26 [ main:2798 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7dbd3222] after transaction
2017-03-16 11:48:26 [ main:2798 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2798 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2799 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@32f3fb36] for Hibernate transaction
2017-03-16 11:48:26 [ main:2799 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@32f3fb36]
2017-03-16 11:48:26 [ main:2800 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2805 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2805 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@32f3fb36]
2017-03-16 11:48:26 [ main:2806 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@32f3fb36] after transaction
2017-03-16 11:48:26 [ main:2806 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2820 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:48:26 [ main:2826 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2826 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7b4da77] for Hibernate transaction
2017-03-16 11:48:26 [ main:2826 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7b4da77]
2017-03-16 11:48:26 [ main:2827 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2834 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2834 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7b4da77]
2017-03-16 11:48:26 [ main:2840 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7b4da77] after transaction
2017-03-16 11:48:26 [ main:2840 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2840 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2840 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4dd4a6bb] for Hibernate transaction
2017-03-16 11:48:26 [ main:2840 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4dd4a6bb]
2017-03-16 11:48:26 [ main:2841 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2842 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2842 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4dd4a6bb]
2017-03-16 11:48:26 [ main:2843 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4dd4a6bb] after transaction
2017-03-16 11:48:26 [ main:2843 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2844 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2844 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@63c58252] for Hibernate transaction
2017-03-16 11:48:26 [ main:2844 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@63c58252]
2017-03-16 11:48:26 [ main:2845 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2845 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2845 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@63c58252]
2017-03-16 11:48:26 [ main:2848 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@63c58252] after transaction
2017-03-16 11:48:26 [ main:2849 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2849 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2849 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@633a6ad1] for Hibernate transaction
2017-03-16 11:48:26 [ main:2849 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@633a6ad1]
2017-03-16 11:48:26 [ main:2849 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2851 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2851 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@633a6ad1]
2017-03-16 11:48:26 [ main:2852 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@633a6ad1] after transaction
2017-03-16 11:48:26 [ main:2852 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2861 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:48:26 [ main:2867 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2867 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7a5d9706] for Hibernate transaction
2017-03-16 11:48:26 [ main:2867 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7a5d9706]
2017-03-16 11:48:26 [ main:2868 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2869 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2869 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7a5d9706]
2017-03-16 11:48:26 [ main:2870 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7a5d9706] after transaction
2017-03-16 11:48:26 [ main:2870 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2870 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2870 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@18a81f43] for Hibernate transaction
2017-03-16 11:48:26 [ main:2871 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@18a81f43]
2017-03-16 11:48:26 [ main:2871 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2878 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2878 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@18a81f43]
2017-03-16 11:48:26 [ main:2879 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@18a81f43] after transaction
2017-03-16 11:48:26 [ main:2879 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2879 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2879 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@e68b3db] for Hibernate transaction
2017-03-16 11:48:26 [ main:2879 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@e68b3db]
2017-03-16 11:48:26 [ main:2879 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2881 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2881 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@e68b3db]
2017-03-16 11:48:26 [ main:2882 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@e68b3db] after transaction
2017-03-16 11:48:26 [ main:2882 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2882 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2882 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@193eadf9] for Hibernate transaction
2017-03-16 11:48:26 [ main:2882 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@193eadf9]
2017-03-16 11:48:26 [ main:2882 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2884 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2884 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@193eadf9]
2017-03-16 11:48:26 [ main:2884 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@193eadf9] after transaction
2017-03-16 11:48:26 [ main:2884 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2885 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2885 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4e6ff0de] for Hibernate transaction
2017-03-16 11:48:26 [ main:2885 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4e6ff0de]
2017-03-16 11:48:26 [ main:2885 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2887 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2887 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4e6ff0de]
2017-03-16 11:48:26 [ main:2888 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4e6ff0de] after transaction
2017-03-16 11:48:26 [ main:2888 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2888 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2888 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@18f1e971] for Hibernate transaction
2017-03-16 11:48:26 [ main:2888 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@18f1e971]
2017-03-16 11:48:26 [ main:2888 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2890 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2890 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@18f1e971]
2017-03-16 11:48:26 [ main:2890 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@18f1e971] after transaction
2017-03-16 11:48:26 [ main:2890 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2890 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2890 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@20f77ec4] for Hibernate transaction
2017-03-16 11:48:26 [ main:2890 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@20f77ec4]
2017-03-16 11:48:26 [ main:2891 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2893 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2893 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@20f77ec4]
2017-03-16 11:48:26 [ main:2894 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@20f77ec4] after transaction
2017-03-16 11:48:26 [ main:2894 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2903 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:48:26 [ main:2909 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2909 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6286d8a3] for Hibernate transaction
2017-03-16 11:48:26 [ main:2909 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6286d8a3]
2017-03-16 11:48:26 [ main:2909 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2911 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2911 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6286d8a3]
2017-03-16 11:48:26 [ main:2911 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6286d8a3] after transaction
2017-03-16 11:48:26 [ main:2911 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2911 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2912 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4b38d375] for Hibernate transaction
2017-03-16 11:48:26 [ main:2912 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4b38d375]
2017-03-16 11:48:26 [ main:2912 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2913 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2913 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4b38d375]
2017-03-16 11:48:26 [ main:2915 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4b38d375] after transaction
2017-03-16 11:48:26 [ main:2915 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2924 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:48:26 [ main:2931 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2931 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3fb0ea5a] for Hibernate transaction
2017-03-16 11:48:26 [ main:2931 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3fb0ea5a]
2017-03-16 11:48:26 [ main:2931 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2933 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2933 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3fb0ea5a]
2017-03-16 11:48:26 [ main:2934 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3fb0ea5a] after transaction
2017-03-16 11:48:26 [ main:2934 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2934 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2934 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7384843c] for Hibernate transaction
2017-03-16 11:48:26 [ main:2934 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7384843c]
2017-03-16 11:48:26 [ main:2935 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2938 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:48:26 [ main:2938 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7384843c] for Hibernate transaction
2017-03-16 11:48:26 [ main:2938 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:48:26 [ main:2960 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2960 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7384843c]
2017-03-16 11:48:26 [ main:2961 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7384843c] after transaction
2017-03-16 11:48:26 [ main:2961 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2961 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2961 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6a3acff7] for Hibernate transaction
2017-03-16 11:48:26 [ main:2961 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6a3acff7]
2017-03-16 11:48:26 [ main:2962 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2962 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2962 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6a3acff7]
2017-03-16 11:48:26 [ main:2963 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6a3acff7] after transaction
2017-03-16 11:48:26 [ main:2963 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:48:26 [ main:2971 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:48:26 [ main:2977 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:48:26 [ main:2977 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@39385b08] for Hibernate transaction
2017-03-16 11:48:26 [ main:2977 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@39385b08]
2017-03-16 11:48:26 [ main:2978 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:48:26 [ main:2978 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:48:26 [ main:2978 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@39385b08]
2017-03-16 11:48:26 [ main:2978 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@39385b08] after transaction
2017-03-16 11:48:26 [ main:2978 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:28 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@29011b29: display name [org.springframework.context.support.ClassPathXmlApplicationContext@29011b29]; startup date [Thu Mar 16 11:49:28 CST 2017]; root of context hierarchy
2017-03-16 11:49:28 [ main:48 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:49:28 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:49:28 [ main:81 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:49:28 [ main:82 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:49:30 [ main:2254 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:49:30 [ main:2273 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:49:30 [ main:2294 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:49:30 [ main:2294 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@29011b29]: org.springframework.beans.factory.support.DefaultListableBeanFactory@f945a61
2017-03-16 11:49:30 [ main:2295 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@29011b29: display name [org.springframework.context.support.ClassPathXmlApplicationContext@29011b29]; startup date [Thu Mar 16 11:49:28 CST 2017]; root of context hierarchy
2017-03-16 11:49:30 [ main:2309 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:49:30 [ main:2309 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:49:30 [ main:2323 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:49:30 [ main:2334 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:49:30 [ main:2336 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3904e3f1]
2017-03-16 11:49:30 [ main:2337 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@168f6724]
2017-03-16 11:49:30 [ main:2338 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@f945a61: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:49:30 [ main:2339 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:49:30 [ main:2339 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:49:30 [ main:2342 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:49:30 [ main:2356 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:30 [ main:2356 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:30 [ main:2357 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:49:30 [ main:2361 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:49:30 [ main:2361 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:49:30 [ main:2362 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:49:30 [ main:2365 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:49:30 [ main:2365 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:30 [ main:2368 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:49:30 [ main:2368 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:49:30 [ main:2368 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:49:30 [ main:2380 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:49:30 [ main:2387 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:49:30 [ main:2388 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:49:31 [ main:2682 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:49:31 [ main:2971 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:31 [ main:2974 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:49:31 [ main:2974 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:49:31 [ main:2974 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:49:31 [ main:2975 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:49:31 [ main:2977 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:49:31 [ main:2978 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:31 [ main:2984 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:31 [ main:2990 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:2996 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:49:31 [ main:3001 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@3f86f612]
2017-03-16 11:49:31 [ main:3050 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:49:31 [ main:3050 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:49:31 [ main:3050 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:49:31 [ main:3053 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:49:31 [ main:3053 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:49:31 [ main:3057 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:49:31 [ main:3061 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:49:31 [ main:3061 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:49:31 [ main:3067 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@5d811d55] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:49:31 [ main:3067 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:31 [ main:3068 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:49:31 [ main:3068 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:49:31 [ main:3068 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:49:31 [ main:3068 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:49:31 [ main:3070 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:49:31 [ main:3071 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3072 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:49:31 [ main:3073 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3074 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3075 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:49:31 [ main:3075 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3075 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3075 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:49:31 [ main:3075 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:49:31 [ main:3075 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:49:31 [ main:3075 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:49:31 [ main:3075 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:49:31 [ main:3094 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:49:31 [ main:3094 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:49:31 [ main:3094 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:49:31 [ main:3094 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:49:31 [ main:3097 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:49:31 [ main:3097 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:31 [ main:3098 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3098 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:49:31 [ main:3098 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@493b0ccd]
2017-03-16 11:49:31 [ main:3099 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3099 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:49:31 [ main:3100 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3101 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3102 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:49:31 [ main:3103 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:49:31 [ main:3104 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:49:31 [ main:3119 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:49:31 [ main:3119 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:49:31 [ main:3119 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:49:31 [ main:3119 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:49:31 [ main:3123 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:49:31 [ main:3123 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:31 [ main:3123 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3123 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:49:31 [ main:3123 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@661303aa]
2017-03-16 11:49:31 [ main:3124 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:49:31 [ main:3124 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3124 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:49:31 [ main:3124 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3125 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3127 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:49:31 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:49:31 [ main:3130 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:49:31 [ main:3144 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:49:31 [ main:3144 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:49:31 [ main:3144 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:49:31 [ main:3145 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:49:31 [ main:3147 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:49:31 [ main:3147 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:31 [ main:3147 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3147 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:49:31 [ main:3148 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@53d6ba07]
2017-03-16 11:49:31 [ main:3149 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:49:31 [ main:3149 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3149 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:49:31 [ main:3149 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3149 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:49:31 [ main:3149 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3149 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:49:31 [ main:3149 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3149 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3150 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3151 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:49:31 [ main:3152 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:49:31 [ main:3153 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:49:31 [ main:3153 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:49:31 [ main:3153 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:49:31 [ main:3153 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:49:31 [ main:3160 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3160 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3160 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:49:31 [ main:3160 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3160 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3160 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:49:31 [ main:3160 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:49:31 [ main:3160 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:49:31 [ main:3161 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:49:31 [ main:3161 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:49:31 [ main:3174 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:49:31 [ main:3174 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:49:31 [ main:3174 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:49:31 [ main:3174 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:49:31 [ main:3177 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:49:31 [ main:3177 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:31 [ main:3177 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3177 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:49:31 [ main:3177 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@64bd8f9c]
2017-03-16 11:49:31 [ main:3178 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:49:31 [ main:3178 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3178 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:49:31 [ main:3178 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3178 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:49:31 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:49:31 [ main:3182 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:49:31 [ main:3193 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:49:31 [ main:3193 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:49:31 [ main:3193 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:49:31 [ main:3193 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:49:31 [ main:3193 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:49:31 [ main:3193 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:49:31 [ main:3193 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:49:31 [ main:3256 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:31 [ main:3280 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@42924a3b] for Hibernate transaction
2017-03-16 11:49:31 [ main:3281 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@42924a3b]
2017-03-16 11:49:31 [ main:3294 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:31 [ main:3413 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:31 [ main:3413 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@42924a3b]
2017-03-16 11:49:31 [ main:3416 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@42924a3b] after transaction
2017-03-16 11:49:31 [ main:3416 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:31 [ main:3417 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:31 [ main:3418 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@11323617] for Hibernate transaction
2017-03-16 11:49:31 [ main:3418 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@11323617]
2017-03-16 11:49:31 [ main:3418 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:31 [ main:3420 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:31 [ main:3420 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@11323617]
2017-03-16 11:49:31 [ main:3421 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@11323617] after transaction
2017-03-16 11:49:31 [ main:3421 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:31 [ main:3438 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:49:31 [ main:3445 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:31 [ main:3445 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7714dc3e] for Hibernate transaction
2017-03-16 11:49:31 [ main:3445 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7714dc3e]
2017-03-16 11:49:31 [ main:3446 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3450 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3450 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7714dc3e]
2017-03-16 11:49:32 [ main:3451 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7714dc3e] after transaction
2017-03-16 11:49:32 [ main:3451 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3451 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3451 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7dbd3222] for Hibernate transaction
2017-03-16 11:49:32 [ main:3451 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7dbd3222]
2017-03-16 11:49:32 [ main:3452 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3460 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3460 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7dbd3222]
2017-03-16 11:49:32 [ main:3461 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7dbd3222] after transaction
2017-03-16 11:49:32 [ main:3461 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3461 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3461 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@32f3fb36] for Hibernate transaction
2017-03-16 11:49:32 [ main:3461 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@32f3fb36]
2017-03-16 11:49:32 [ main:3462 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3464 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3464 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@32f3fb36]
2017-03-16 11:49:32 [ main:3465 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@32f3fb36] after transaction
2017-03-16 11:49:32 [ main:3465 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3475 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:49:32 [ main:3479 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3479 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7b4da77] for Hibernate transaction
2017-03-16 11:49:32 [ main:3479 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7b4da77]
2017-03-16 11:49:32 [ main:3480 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3486 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3486 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7b4da77]
2017-03-16 11:49:32 [ main:3491 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7b4da77] after transaction
2017-03-16 11:49:32 [ main:3491 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3491 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3491 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4dd4a6bb] for Hibernate transaction
2017-03-16 11:49:32 [ main:3491 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4dd4a6bb]
2017-03-16 11:49:32 [ main:3492 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3493 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3493 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4dd4a6bb]
2017-03-16 11:49:32 [ main:3494 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4dd4a6bb] after transaction
2017-03-16 11:49:32 [ main:3494 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3495 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3496 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@63c58252] for Hibernate transaction
2017-03-16 11:49:32 [ main:3496 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@63c58252]
2017-03-16 11:49:32 [ main:3496 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3497 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3497 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@63c58252]
2017-03-16 11:49:32 [ main:3500 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@63c58252] after transaction
2017-03-16 11:49:32 [ main:3500 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3500 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3500 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@633a6ad1] for Hibernate transaction
2017-03-16 11:49:32 [ main:3500 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@633a6ad1]
2017-03-16 11:49:32 [ main:3501 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3502 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3502 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@633a6ad1]
2017-03-16 11:49:32 [ main:3503 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@633a6ad1] after transaction
2017-03-16 11:49:32 [ main:3503 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3512 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:49:32 [ main:3518 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3518 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7a5d9706] for Hibernate transaction
2017-03-16 11:49:32 [ main:3518 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7a5d9706]
2017-03-16 11:49:32 [ main:3518 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3520 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3520 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7a5d9706]
2017-03-16 11:49:32 [ main:3520 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7a5d9706] after transaction
2017-03-16 11:49:32 [ main:3520 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3521 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3521 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@18a81f43] for Hibernate transaction
2017-03-16 11:49:32 [ main:3521 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@18a81f43]
2017-03-16 11:49:32 [ main:3521 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3529 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3529 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@18a81f43]
2017-03-16 11:49:32 [ main:3530 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@18a81f43] after transaction
2017-03-16 11:49:32 [ main:3530 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3530 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3530 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7bf7f640] for Hibernate transaction
2017-03-16 11:49:32 [ main:3530 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7bf7f640]
2017-03-16 11:49:32 [ main:3530 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3532 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3532 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7bf7f640]
2017-03-16 11:49:32 [ main:3533 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7bf7f640] after transaction
2017-03-16 11:49:32 [ main:3533 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3533 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3533 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@620fc361] for Hibernate transaction
2017-03-16 11:49:32 [ main:3533 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@620fc361]
2017-03-16 11:49:32 [ main:3533 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3535 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3535 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@620fc361]
2017-03-16 11:49:32 [ main:3536 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@620fc361] after transaction
2017-03-16 11:49:32 [ main:3536 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3536 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3536 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@172ea70d] for Hibernate transaction
2017-03-16 11:49:32 [ main:3536 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@172ea70d]
2017-03-16 11:49:32 [ main:3536 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3538 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3538 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@172ea70d]
2017-03-16 11:49:32 [ main:3539 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@172ea70d] after transaction
2017-03-16 11:49:32 [ main:3539 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3539 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3539 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@32150682] for Hibernate transaction
2017-03-16 11:49:32 [ main:3539 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@32150682]
2017-03-16 11:49:32 [ main:3540 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3541 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3541 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@32150682]
2017-03-16 11:49:32 [ main:3542 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@32150682] after transaction
2017-03-16 11:49:32 [ main:3542 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3542 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3542 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@58a386c4] for Hibernate transaction
2017-03-16 11:49:32 [ main:3542 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@58a386c4]
2017-03-16 11:49:32 [ main:3543 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3544 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3544 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@58a386c4]
2017-03-16 11:49:32 [ main:3545 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@58a386c4] after transaction
2017-03-16 11:49:32 [ main:3545 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3554 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:49:32 [ main:3560 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3560 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2f8e7de] for Hibernate transaction
2017-03-16 11:49:32 [ main:3560 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f8e7de]
2017-03-16 11:49:32 [ main:3561 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3562 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3562 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f8e7de]
2017-03-16 11:49:32 [ main:3563 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f8e7de] after transaction
2017-03-16 11:49:32 [ main:3563 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3563 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3563 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7fc2cce7] for Hibernate transaction
2017-03-16 11:49:32 [ main:3563 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7fc2cce7]
2017-03-16 11:49:32 [ main:3564 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3565 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3565 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7fc2cce7]
2017-03-16 11:49:32 [ main:3567 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7fc2cce7] after transaction
2017-03-16 11:49:32 [ main:3567 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3576 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:49:32 [ main:3581 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3581 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@77e9db60] for Hibernate transaction
2017-03-16 11:49:32 [ main:3581 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@77e9db60]
2017-03-16 11:49:32 [ main:3582 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3583 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3583 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@77e9db60]
2017-03-16 11:49:32 [ main:3584 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@77e9db60] after transaction
2017-03-16 11:49:32 [ main:3584 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3584 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3584 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@105ba64] for Hibernate transaction
2017-03-16 11:49:32 [ main:3585 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@105ba64]
2017-03-16 11:49:32 [ main:3585 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3589 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:49:32 [ main:3589 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@105ba64] for Hibernate transaction
2017-03-16 11:49:32 [ main:3589 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:49:32 [ main:3610 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3611 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@105ba64]
2017-03-16 11:49:32 [ main:3611 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@105ba64] after transaction
2017-03-16 11:49:32 [ main:3612 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3612 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3612 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3b2b979d] for Hibernate transaction
2017-03-16 11:49:32 [ main:3612 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3b2b979d]
2017-03-16 11:49:32 [ main:3612 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3613 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3613 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3b2b979d]
2017-03-16 11:49:32 [ main:3614 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3b2b979d] after transaction
2017-03-16 11:49:32 [ main:3614 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:49:32 [ main:3623 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:49:32 [ main:3629 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:49:32 [ main:3629 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@22e08791] for Hibernate transaction
2017-03-16 11:49:32 [ main:3629 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@22e08791]
2017-03-16 11:49:32 [ main:3629 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:49:32 [ main:3630 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:49:32 [ main:3630 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@22e08791]
2017-03-16 11:49:32 [ main:3630 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@22e08791] after transaction
2017-03-16 11:49:32 [ main:3630 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:33 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9: display name [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]; startup date [Thu Mar 16 11:52:33 CST 2017]; root of context hierarchy
2017-03-16 11:52:33 [ main:48 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:52:33 [ main:64 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:52:33 [ main:88 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:52:33 [ main:89 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:52:36 [ main:2328 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:52:36 [ main:2347 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:52:36 [ main:2369 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:52:36 [ main:2369 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]: org.springframework.beans.factory.support.DefaultListableBeanFactory@54b99e44
2017-03-16 11:52:36 [ main:2369 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9: display name [org.springframework.context.support.ClassPathXmlApplicationContext@23dc9fb9]; startup date [Thu Mar 16 11:52:33 CST 2017]; root of context hierarchy
2017-03-16 11:52:36 [ main:2383 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:52:36 [ main:2384 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:52:36 [ main:2398 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:2409 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:52:36 [ main:2411 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@70110075]
2017-03-16 11:52:36 [ main:2412 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@20bc780e]
2017-03-16 11:52:36 [ main:2413 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@54b99e44: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:52:36 [ main:2414 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:52:36 [ main:2414 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:52:36 [ main:2417 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:2432 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:2432 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:2432 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:2436 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:52:36 [ main:2436 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:52:36 [ main:2437 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:2440 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:52:36 [ main:2441 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:2443 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:52:36 [ main:2444 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:52:36 [ main:2444 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:52:36 [ main:2455 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:2462 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:52:36 [ main:2463 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:52:36 [ main:2751 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:52:36 [ main:3047 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:3049 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:52:36 [ main:3050 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:52:36 [ main:3050 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:52:36 [ main:3050 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:3053 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:52:36 [ main:3053 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:3059 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:3066 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3073 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:52:36 [ main:3077 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@35853853]
2017-03-16 11:52:36 [ main:3124 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:52:36 [ main:3125 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:52:36 [ main:3125 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:3127 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:52:36 [ main:3127 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:52:36 [ main:3131 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:3135 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:52:36 [ main:3135 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:52:36 [ main:3140 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@47ace768] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:52:36 [ main:3141 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:3141 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:52:36 [ main:3142 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:52:36 [ main:3142 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:52:36 [ main:3142 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:52:36 [ main:3144 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3144 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:52:36 [ main:3144 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3144 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3145 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3146 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:52:36 [ main:3147 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:52:36 [ main:3148 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:52:36 [ main:3167 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:52:36 [ main:3167 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:52:36 [ main:3167 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:52:36 [ main:3167 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:3170 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:52:36 [ main:3170 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:3170 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3171 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:52:36 [ main:3171 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@43c58c4a]
2017-03-16 11:52:36 [ main:3172 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3172 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:52:36 [ main:3172 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3172 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:52:36 [ main:3173 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3173 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:52:36 [ main:3173 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3173 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:52:36 [ main:3173 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3173 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:52:36 [ main:3173 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3173 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:52:36 [ main:3173 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3173 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3174 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3175 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3176 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:52:36 [ main:3177 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:52:36 [ main:3192 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:52:36 [ main:3192 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:52:36 [ main:3192 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:52:36 [ main:3192 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:3196 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:52:36 [ main:3196 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:3196 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3196 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:52:36 [ main:3196 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@6a55c240]
2017-03-16 11:52:36 [ main:3197 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:52:36 [ main:3198 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:52:36 [ main:3199 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:52:36 [ main:3200 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:52:36 [ main:3201 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3202 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3203 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:52:36 [ main:3203 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:52:36 [ main:3203 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:52:36 [ main:3203 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:52:36 [ main:3203 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:52:36 [ main:3203 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:52:36 [ main:3203 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:52:36 [ main:3217 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:52:36 [ main:3217 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:52:36 [ main:3217 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:52:36 [ main:3217 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:3220 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:52:36 [ main:3220 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:3220 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3220 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:52:36 [ main:3220 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@364f4c91]
2017-03-16 11:52:36 [ main:3221 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3221 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:52:36 [ main:3221 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3221 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3222 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:52:36 [ main:3223 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3223 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:52:36 [ main:3223 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3223 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:52:36 [ main:3223 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3223 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:52:36 [ main:3223 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3223 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:52:36 [ main:3223 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3223 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:52:36 [ main:3224 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3225 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3225 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3225 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:52:36 [ main:3225 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:52:36 [ main:3225 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:52:36 [ main:3225 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:52:36 [ main:3225 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:52:36 [ main:3225 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:52:36 [ main:3225 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:52:36 [ main:3233 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3233 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3233 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:52:36 [ main:3233 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:52:36 [ main:3233 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:52:36 [ main:3233 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:52:36 [ main:3233 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:52:36 [ main:3233 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:52:36 [ main:3233 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:52:36 [ main:3233 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:52:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:52:36 [ main:3246 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:52:36 [ main:3246 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:52:36 [ main:3246 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:52:36 [ main:3246 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:52:36 [ main:3249 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:52:36 [ main:3249 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:3250 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3250 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:52:36 [ main:3250 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@591f7e6f]
2017-03-16 11:52:36 [ main:3251 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3251 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:52:36 [ main:3251 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3251 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:52:36 [ main:3251 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3251 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:52:36 [ main:3251 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3251 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:52:36 [ main:3252 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3253 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:52:36 [ main:3254 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:52:36 [ main:3255 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:52:36 [ main:3256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:52:36 [ main:3256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:52:36 [ main:3256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:52:36 [ main:3256 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:52:36 [ main:3267 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:52:36 [ main:3267 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:52:36 [ main:3267 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:52:36 [ main:3267 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:52:36 [ main:3267 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:52:36 [ main:3267 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:52:36 [ main:3267 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:52:37 [ main:3330 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3353 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@169cf40e] for Hibernate transaction
2017-03-16 11:52:37 [ main:3355 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@169cf40e]
2017-03-16 11:52:37 [ main:3367 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3490 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3490 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@169cf40e]
2017-03-16 11:52:37 [ main:3495 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@169cf40e] after transaction
2017-03-16 11:52:37 [ main:3495 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3496 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3496 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3a033047] for Hibernate transaction
2017-03-16 11:52:37 [ main:3496 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3a033047]
2017-03-16 11:52:37 [ main:3497 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3498 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3498 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3a033047]
2017-03-16 11:52:37 [ main:3499 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3a033047] after transaction
2017-03-16 11:52:37 [ main:3499 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3516 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:52:37 [ main:3524 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3524 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@60074b9b] for Hibernate transaction
2017-03-16 11:52:37 [ main:3524 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@60074b9b]
2017-03-16 11:52:37 [ main:3524 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3529 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3529 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@60074b9b]
2017-03-16 11:52:37 [ main:3530 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@60074b9b] after transaction
2017-03-16 11:52:37 [ main:3530 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3530 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3530 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@556dfe7c] for Hibernate transaction
2017-03-16 11:52:37 [ main:3530 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@556dfe7c]
2017-03-16 11:52:37 [ main:3531 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3540 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3540 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@556dfe7c]
2017-03-16 11:52:37 [ main:3541 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@556dfe7c] after transaction
2017-03-16 11:52:37 [ main:3541 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3541 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3541 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@17b252ce] for Hibernate transaction
2017-03-16 11:52:37 [ main:3541 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@17b252ce]
2017-03-16 11:52:37 [ main:3542 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3545 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3545 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@17b252ce]
2017-03-16 11:52:37 [ main:3545 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@17b252ce] after transaction
2017-03-16 11:52:37 [ main:3545 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3555 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:52:37 [ main:3560 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3560 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5bf8d5b0] for Hibernate transaction
2017-03-16 11:52:37 [ main:3560 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5bf8d5b0]
2017-03-16 11:52:37 [ main:3561 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3566 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3567 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5bf8d5b0]
2017-03-16 11:52:37 [ main:3572 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5bf8d5b0] after transaction
2017-03-16 11:52:37 [ main:3572 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3572 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3572 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@63c324af] for Hibernate transaction
2017-03-16 11:52:37 [ main:3572 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@63c324af]
2017-03-16 11:52:37 [ main:3573 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3574 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3574 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@63c324af]
2017-03-16 11:52:37 [ main:3575 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@63c324af] after transaction
2017-03-16 11:52:37 [ main:3575 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3576 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3577 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@79fbdc5a] for Hibernate transaction
2017-03-16 11:52:37 [ main:3577 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@79fbdc5a]
2017-03-16 11:52:37 [ main:3577 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3578 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3578 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@79fbdc5a]
2017-03-16 11:52:37 [ main:3581 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@79fbdc5a] after transaction
2017-03-16 11:52:37 [ main:3581 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3581 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3581 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@62aa2ac9] for Hibernate transaction
2017-03-16 11:52:37 [ main:3581 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@62aa2ac9]
2017-03-16 11:52:37 [ main:3582 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3583 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3583 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@62aa2ac9]
2017-03-16 11:52:37 [ main:3584 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@62aa2ac9] after transaction
2017-03-16 11:52:37 [ main:3584 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3593 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:52:37 [ main:3599 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3600 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2c8cd466] for Hibernate transaction
2017-03-16 11:52:37 [ main:3600 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2c8cd466]
2017-03-16 11:52:37 [ main:3600 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3602 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3602 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2c8cd466]
2017-03-16 11:52:37 [ main:3602 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2c8cd466] after transaction
2017-03-16 11:52:37 [ main:3602 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3603 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3603 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6709fce5] for Hibernate transaction
2017-03-16 11:52:37 [ main:3603 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6709fce5]
2017-03-16 11:52:37 [ main:3603 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3611 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3611 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6709fce5]
2017-03-16 11:52:37 [ main:3611 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6709fce5] after transaction
2017-03-16 11:52:37 [ main:3611 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3612 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3612 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4c07ccad] for Hibernate transaction
2017-03-16 11:52:37 [ main:3612 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4c07ccad]
2017-03-16 11:52:37 [ main:3612 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3614 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3614 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4c07ccad]
2017-03-16 11:52:37 [ main:3614 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4c07ccad] after transaction
2017-03-16 11:52:37 [ main:3614 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3614 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3615 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5317003f] for Hibernate transaction
2017-03-16 11:52:37 [ main:3615 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5317003f]
2017-03-16 11:52:37 [ main:3615 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3617 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3617 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5317003f]
2017-03-16 11:52:37 [ main:3617 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5317003f] after transaction
2017-03-16 11:52:37 [ main:3617 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3618 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3618 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5caed6ca] for Hibernate transaction
2017-03-16 11:52:37 [ main:3618 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5caed6ca]
2017-03-16 11:52:37 [ main:3618 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3620 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3620 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5caed6ca]
2017-03-16 11:52:37 [ main:3620 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5caed6ca] after transaction
2017-03-16 11:52:37 [ main:3621 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3621 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3621 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@870769] for Hibernate transaction
2017-03-16 11:52:37 [ main:3621 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@870769]
2017-03-16 11:52:37 [ main:3621 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3623 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3623 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@870769]
2017-03-16 11:52:37 [ main:3623 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@870769] after transaction
2017-03-16 11:52:37 [ main:3623 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3623 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3623 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@71fb1192] for Hibernate transaction
2017-03-16 11:52:37 [ main:3624 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@71fb1192]
2017-03-16 11:52:37 [ main:3625 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3626 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3626 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@71fb1192]
2017-03-16 11:52:37 [ main:3627 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@71fb1192] after transaction
2017-03-16 11:52:37 [ main:3628 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3636 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:52:37 [ main:3642 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3642 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@64d2aa7b] for Hibernate transaction
2017-03-16 11:52:37 [ main:3642 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@64d2aa7b]
2017-03-16 11:52:37 [ main:3643 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3644 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3644 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@64d2aa7b]
2017-03-16 11:52:37 [ main:3645 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@64d2aa7b] after transaction
2017-03-16 11:52:37 [ main:3645 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3645 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3645 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@32b76997] for Hibernate transaction
2017-03-16 11:52:37 [ main:3645 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@32b76997]
2017-03-16 11:52:37 [ main:3646 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3647 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3647 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@32b76997]
2017-03-16 11:52:37 [ main:3649 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@32b76997] after transaction
2017-03-16 11:52:37 [ main:3649 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3657 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:52:37 [ main:3663 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3664 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@50e132fe] for Hibernate transaction
2017-03-16 11:52:37 [ main:3664 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@50e132fe]
2017-03-16 11:52:37 [ main:3664 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3665 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3665 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@50e132fe]
2017-03-16 11:52:37 [ main:3666 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@50e132fe] after transaction
2017-03-16 11:52:37 [ main:3666 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3666 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3667 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@52598d7c] for Hibernate transaction
2017-03-16 11:52:37 [ main:3667 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@52598d7c]
2017-03-16 11:52:37 [ main:3667 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3671 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:52:37 [ main:3671 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@52598d7c] for Hibernate transaction
2017-03-16 11:52:37 [ main:3671 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:52:37 [ main:3692 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3692 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@52598d7c]
2017-03-16 11:52:37 [ main:3692 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@52598d7c] after transaction
2017-03-16 11:52:37 [ main:3692 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3693 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3693 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2969c7e1] for Hibernate transaction
2017-03-16 11:52:37 [ main:3693 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2969c7e1]
2017-03-16 11:52:37 [ main:3693 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3694 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3694 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2969c7e1]
2017-03-16 11:52:37 [ main:3694 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2969c7e1] after transaction
2017-03-16 11:52:37 [ main:3694 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:52:37 [ main:3702 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:52:37 [ main:3708 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:52:37 [ main:3708 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1be2e9e5] for Hibernate transaction
2017-03-16 11:52:37 [ main:3708 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1be2e9e5]
2017-03-16 11:52:37 [ main:3709 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:52:37 [ main:3709 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:52:37 [ main:3709 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1be2e9e5]
2017-03-16 11:52:37 [ main:3709 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1be2e9e5] after transaction
2017-03-16 11:52:37 [ main:3709 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:10 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@21ee921c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@21ee921c]; startup date [Thu Mar 16 11:54:10 CST 2017]; root of context hierarchy
2017-03-16 11:54:10 [ main:47 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:54:10 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:54:10 [ main:82 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:54:10 [ main:83 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:54:12 [ main:1622 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:54:12 [ main:1641 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:54:12 [ main:1662 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:54:12 [ main:1662 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@21ee921c]: org.springframework.beans.factory.support.DefaultListableBeanFactory@6a4da220
2017-03-16 11:54:12 [ main:1663 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@21ee921c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@21ee921c]; startup date [Thu Mar 16 11:54:10 CST 2017]; root of context hierarchy
2017-03-16 11:54:12 [ main:1677 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:54:12 [ main:1677 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:54:12 [ main:1691 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:54:12 [ main:1702 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:54:12 [ main:1703 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2db8b352]
2017-03-16 11:54:12 [ main:1704 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@88d1f2]
2017-03-16 11:54:12 [ main:1706 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@6a4da220: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:54:12 [ main:1707 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:54:12 [ main:1707 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:54:12 [ main:1710 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:54:12 [ main:1724 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:12 [ main:1724 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:12 [ main:1724 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:54:12 [ main:1728 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:54:12 [ main:1728 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:54:12 [ main:1729 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:54:12 [ main:1732 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:54:12 [ main:1732 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:12 [ main:1735 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:54:12 [ main:1735 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:54:12 [ main:1735 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:54:12 [ main:1747 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:54:12 [ main:1754 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:54:12 [ main:1755 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:54:12 [ main:2037 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:54:13 [ main:2325 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:13 [ main:2327 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:54:13 [ main:2328 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:54:13 [ main:2328 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:54:13 [ main:2328 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:54:13 [ main:2331 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:54:13 [ main:2331 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:13 [ main:2337 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:13 [ main:2344 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2349 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:54:13 [ main:2354 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@173ad86]
2017-03-16 11:54:13 [ main:2405 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:54:13 [ main:2405 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:54:13 [ main:2405 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:54:13 [ main:2409 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:54:13 [ main:2409 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:54:13 [ main:2413 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:54:13 [ main:2417 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:54:13 [ main:2417 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:54:13 [ main:2423 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@5332efbc] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:54:13 [ main:2424 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:13 [ main:2425 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:54:13 [ main:2425 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:54:13 [ main:2425 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:54:13 [ main:2425 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:54:13 [ main:2427 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2428 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:54:13 [ main:2429 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:54:13 [ main:2429 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:54:13 [ main:2429 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:54:13 [ main:2429 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:54:13 [ main:2429 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2429 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:54:13 [ main:2430 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2430 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:54:13 [ main:2430 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2430 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2430 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2431 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:54:13 [ main:2432 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:54:13 [ main:2451 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:54:13 [ main:2451 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:54:13 [ main:2451 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:54:13 [ main:2452 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:54:13 [ main:2454 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:54:13 [ main:2455 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:13 [ main:2455 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2455 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:54:13 [ main:2455 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@43b9fa5e]
2017-03-16 11:54:13 [ main:2456 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:54:13 [ main:2456 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2457 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2458 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2459 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:54:13 [ main:2460 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:54:13 [ main:2461 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:54:13 [ main:2476 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:54:13 [ main:2476 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:54:13 [ main:2476 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:54:13 [ main:2476 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:54:13 [ main:2479 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:54:13 [ main:2480 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:13 [ main:2480 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2480 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:54:13 [ main:2480 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@16b0c0d4]
2017-03-16 11:54:13 [ main:2481 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2481 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:54:13 [ main:2481 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2481 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:54:13 [ main:2481 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2482 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2483 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:54:13 [ main:2484 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2485 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2486 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:54:13 [ main:2487 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:54:13 [ main:2487 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:54:13 [ main:2487 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:54:13 [ main:2487 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:54:13 [ main:2501 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:54:13 [ main:2501 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2501 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2501 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:54:13 [ main:2504 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:54:13 [ main:2504 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:13 [ main:2504 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2504 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:54:13 [ main:2505 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@2b28b29c]
2017-03-16 11:54:13 [ main:2505 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:54:13 [ main:2506 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2507 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2508 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2509 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:54:13 [ main:2510 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:54:13 [ main:2510 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:54:13 [ main:2518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:54:13 [ main:2518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:54:13 [ main:2530 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2530 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:54:13 [ main:2530 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:54:13 [ main:2530 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:54:13 [ main:2533 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:54:13 [ main:2533 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:13 [ main:2533 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2534 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:54:13 [ main:2534 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@3837f691]
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2535 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:54:13 [ main:2536 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:54:13 [ main:2537 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2538 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:54:13 [ main:2539 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:54:13 [ main:2550 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:54:13 [ main:2550 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:54:13 [ main:2550 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:54:13 [ main:2550 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:54:13 [ main:2550 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:54:13 [ main:2550 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:54:13 [ main:2550 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2610 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2631 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5b21399a] for Hibernate transaction
2017-03-16 11:54:13 [ main:2633 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5b21399a]
2017-03-16 11:54:13 [ main:2646 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2751 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2751 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5b21399a]
2017-03-16 11:54:13 [ main:2752 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5b21399a] after transaction
2017-03-16 11:54:13 [ main:2752 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2753 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2753 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5e4da34e] for Hibernate transaction
2017-03-16 11:54:13 [ main:2753 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5e4da34e]
2017-03-16 11:54:13 [ main:2754 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2767 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2767 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5e4da34e]
2017-03-16 11:54:13 [ main:2768 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5e4da34e] after transaction
2017-03-16 11:54:13 [ main:2768 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2775 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2781 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.getRoleByUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2781 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@43f66bae] for Hibernate transaction
2017-03-16 11:54:13 [ main:2781 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@43f66bae]
2017-03-16 11:54:13 [ main:2782 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2782 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:54:13 [ main:2782 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@43f66bae] for Hibernate transaction
2017-03-16 11:54:13 [ main:2782 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:54:13 [ main:2804 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:54:13 [ main:2805 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@43f66bae] for Hibernate transaction
2017-03-16 11:54:13 [ main:2805 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:54:13 [ main:2824 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@43f66bae] for Hibernate transaction
2017-03-16 11:54:13 [ main:2824 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:54:13 [ main:2825 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2825 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@43f66bae]
2017-03-16 11:54:13 [ main:2828 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@43f66bae] after transaction
2017-03-16 11:54:13 [ main:2828 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2833 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2840 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2840 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2c7a7eb5] for Hibernate transaction
2017-03-16 11:54:13 [ main:2840 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2c7a7eb5]
2017-03-16 11:54:13 [ main:2841 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2844 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2845 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2c7a7eb5]
2017-03-16 11:54:13 [ main:2845 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2c7a7eb5] after transaction
2017-03-16 11:54:13 [ main:2845 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2845 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2845 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3343fb14] for Hibernate transaction
2017-03-16 11:54:13 [ main:2846 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3343fb14]
2017-03-16 11:54:13 [ main:2846 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2847 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2847 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3343fb14]
2017-03-16 11:54:13 [ main:2847 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3343fb14] after transaction
2017-03-16 11:54:13 [ main:2847 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2853 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2858 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2858 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7cf54ad7] for Hibernate transaction
2017-03-16 11:54:13 [ main:2859 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7cf54ad7]
2017-03-16 11:54:13 [ main:2859 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2860 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2860 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7cf54ad7]
2017-03-16 11:54:13 [ main:2860 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7cf54ad7] after transaction
2017-03-16 11:54:13 [ main:2860 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2867 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2873 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2874 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1aba6f2d] for Hibernate transaction
2017-03-16 11:54:13 [ main:2874 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1aba6f2d]
2017-03-16 11:54:13 [ main:2874 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2878 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2878 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1aba6f2d]
2017-03-16 11:54:13 [ main:2879 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1aba6f2d] after transaction
2017-03-16 11:54:13 [ main:2879 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2879 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2879 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@321baa4a] for Hibernate transaction
2017-03-16 11:54:13 [ main:2879 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@321baa4a]
2017-03-16 11:54:13 [ main:2880 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2884 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2884 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@321baa4a]
2017-03-16 11:54:13 [ main:2884 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@321baa4a] after transaction
2017-03-16 11:54:13 [ main:2884 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2890 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2896 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2896 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6ad3ad65] for Hibernate transaction
2017-03-16 11:54:13 [ main:2896 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6ad3ad65]
2017-03-16 11:54:13 [ main:2897 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2898 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2898 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6ad3ad65]
2017-03-16 11:54:13 [ main:2898 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6ad3ad65] after transaction
2017-03-16 11:54:13 [ main:2898 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2904 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2910 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2910 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@206564e9] for Hibernate transaction
2017-03-16 11:54:13 [ main:2910 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@206564e9]
2017-03-16 11:54:13 [ main:2911 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2912 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2912 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@206564e9]
2017-03-16 11:54:13 [ main:2913 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@206564e9] after transaction
2017-03-16 11:54:13 [ main:2913 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2919 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2922 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUsers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2922 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@671683bc] for Hibernate transaction
2017-03-16 11:54:13 [ main:2922 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@671683bc]
2017-03-16 11:54:13 [ main:2923 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2928 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2928 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@671683bc]
2017-03-16 11:54:13 [ main:2932 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@671683bc] after transaction
2017-03-16 11:54:13 [ main:2932 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2932 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2932 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4e1a9338] for Hibernate transaction
2017-03-16 11:54:13 [ main:2932 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4e1a9338]
2017-03-16 11:54:13 [ main:2933 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2934 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2934 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4e1a9338]
2017-03-16 11:54:13 [ main:2936 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4e1a9338] after transaction
2017-03-16 11:54:13 [ main:2936 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:54:13 [ main:2940 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:54:13 [ main:2943 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:54:13 [ main:2943 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@42918ced] for Hibernate transaction
2017-03-16 11:54:13 [ main:2943 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@42918ced]
2017-03-16 11:54:13 [ main:2944 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:54:13 [ main:2944 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:54:13 [ main:2944 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@42918ced]
2017-03-16 11:54:13 [ main:2946 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@42918ced] after transaction
2017-03-16 11:54:13 [ main:2946 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:33 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@190c4838: display name [org.springframework.context.support.ClassPathXmlApplicationContext@190c4838]; startup date [Thu Mar 16 11:55:33 CST 2017]; root of context hierarchy
2017-03-16 11:55:33 [ main:50 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:55:33 [ main:61 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:55:33 [ main:84 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:55:33 [ main:85 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:55:36 [ main:2317 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:55:36 [ main:2335 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:55:36 [ main:2357 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:55:36 [ main:2357 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@190c4838]: org.springframework.beans.factory.support.DefaultListableBeanFactory@25b7a298
2017-03-16 11:55:36 [ main:2357 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@190c4838: display name [org.springframework.context.support.ClassPathXmlApplicationContext@190c4838]; startup date [Thu Mar 16 11:55:33 CST 2017]; root of context hierarchy
2017-03-16 11:55:36 [ main:2371 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:55:36 [ main:2372 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:55:36 [ main:2386 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:2396 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:55:36 [ main:2397 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@70110075]
2017-03-16 11:55:36 [ main:2399 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@20bc780e]
2017-03-16 11:55:36 [ main:2400 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@25b7a298: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:55:36 [ main:2400 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:55:36 [ main:2400 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:55:36 [ main:2403 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:2417 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:2417 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:2418 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:2422 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:55:36 [ main:2422 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:55:36 [ main:2423 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:2426 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:55:36 [ main:2426 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:2429 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:55:36 [ main:2429 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:55:36 [ main:2429 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:55:36 [ main:2440 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:2447 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:55:36 [ main:2448 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:55:36 [ main:2735 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:55:36 [ main:3028 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:3030 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:55:36 [ main:3030 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:55:36 [ main:3030 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:55:36 [ main:3031 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:3033 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:55:36 [ main:3034 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:3040 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:3046 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3052 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:55:36 [ main:3056 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@3f86f612]
2017-03-16 11:55:36 [ main:3105 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:55:36 [ main:3105 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:55:36 [ main:3105 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:3108 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:55:36 [ main:3108 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:55:36 [ main:3112 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:3116 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:55:36 [ main:3116 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:55:36 [ main:3121 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@5d811d55] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:55:36 [ main:3122 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:3123 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:55:36 [ main:3123 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:55:36 [ main:3123 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:55:36 [ main:3123 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:55:36 [ main:3125 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:55:36 [ main:3125 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3125 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:55:36 [ main:3125 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:55:36 [ main:3126 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3127 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3128 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:55:36 [ main:3129 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:55:36 [ main:3148 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:55:36 [ main:3148 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:55:36 [ main:3148 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:55:36 [ main:3148 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:3151 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:55:36 [ main:3151 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:3152 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3152 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:55:36 [ main:3152 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@493b0ccd]
2017-03-16 11:55:36 [ main:3153 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3153 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:55:36 [ main:3153 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3153 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:55:36 [ main:3154 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3155 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:55:36 [ main:3156 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:55:36 [ main:3157 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:55:36 [ main:3158 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:55:36 [ main:3173 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:55:36 [ main:3173 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:55:36 [ main:3173 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:55:36 [ main:3173 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:3177 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:55:36 [ main:3177 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:3177 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3177 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:55:36 [ main:3177 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@661303aa]
2017-03-16 11:55:36 [ main:3178 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:55:36 [ main:3178 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3178 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:55:36 [ main:3178 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3178 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:55:36 [ main:3178 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3179 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3180 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3181 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:55:36 [ main:3182 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:55:36 [ main:3183 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:55:36 [ main:3184 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:55:36 [ main:3197 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:55:36 [ main:3197 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:55:36 [ main:3197 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:55:36 [ main:3197 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:3200 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:55:36 [ main:3200 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:3200 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3200 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:55:36 [ main:3200 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@53d6ba07]
2017-03-16 11:55:36 [ main:3201 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:55:36 [ main:3201 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3201 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:55:36 [ main:3201 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3202 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:55:36 [ main:3203 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3204 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:55:36 [ main:3205 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:55:36 [ main:3213 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:55:36 [ main:3213 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:55:36 [ main:3213 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:55:36 [ main:3213 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:55:36 [ main:3213 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3213 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3213 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:55:36 [ main:3213 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:55:36 [ main:3214 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3214 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3214 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:55:36 [ main:3214 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:55:36 [ main:3214 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:55:36 [ main:3214 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:55:36 [ main:3226 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:55:36 [ main:3226 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:55:36 [ main:3226 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:55:36 [ main:3226 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:55:36 [ main:3229 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:55:36 [ main:3229 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:3229 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3229 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:55:36 [ main:3229 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@64bd8f9c]
2017-03-16 11:55:36 [ main:3230 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:55:36 [ main:3230 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3231 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3232 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:55:36 [ main:3233 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3234 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3235 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:55:36 [ main:3235 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:55:36 [ main:3235 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3235 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:55:36 [ main:3235 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:55:36 [ main:3235 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:55:36 [ main:3235 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:55:36 [ main:3235 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:55:36 [ main:3246 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:55:36 [ main:3246 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:55:36 [ main:3246 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:55:36 [ main:3246 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:55:36 [ main:3246 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:55:36 [ main:3246 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:55:36 [ main:3246 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:55:37 [ main:3309 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3331 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@661c71d6] for Hibernate transaction
2017-03-16 11:55:37 [ main:3332 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@661c71d6]
2017-03-16 11:55:37 [ main:3345 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3452 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3452 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@661c71d6]
2017-03-16 11:55:37 [ main:3453 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@661c71d6] after transaction
2017-03-16 11:55:37 [ main:3453 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3454 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3454 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@75a3a7f7] for Hibernate transaction
2017-03-16 11:55:37 [ main:3454 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@75a3a7f7]
2017-03-16 11:55:37 [ main:3455 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3459 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3459 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@75a3a7f7]
2017-03-16 11:55:37 [ main:3459 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@75a3a7f7] after transaction
2017-03-16 11:55:37 [ main:3459 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3467 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:55:37 [ main:3471 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.addRoleNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3471 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1b7231b9] for Hibernate transaction
2017-03-16 11:55:37 [ main:3471 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1b7231b9]
2017-03-16 11:55:37 [ main:3472 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3481 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3481 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1b7231b9]
2017-03-16 11:55:37 [ main:3487 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1b7231b9] after transaction
2017-03-16 11:55:37 [ main:3487 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3493 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:55:37 [ main:3500 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3500 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@36b6447b] for Hibernate transaction
2017-03-16 11:55:37 [ main:3500 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@36b6447b]
2017-03-16 11:55:37 [ main:3501 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3504 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3504 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@36b6447b]
2017-03-16 11:55:37 [ main:3505 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@36b6447b] after transaction
2017-03-16 11:55:37 [ main:3505 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3512 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:55:37 [ main:3519 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3519 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5b87851a] for Hibernate transaction
2017-03-16 11:55:37 [ main:3519 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5b87851a]
2017-03-16 11:55:37 [ main:3519 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3523 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3523 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5b87851a]
2017-03-16 11:55:37 [ main:3524 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5b87851a] after transaction
2017-03-16 11:55:37 [ main:3524 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3524 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3524 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6db4b903] for Hibernate transaction
2017-03-16 11:55:37 [ main:3524 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6db4b903]
2017-03-16 11:55:37 [ main:3524 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3537 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3537 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6db4b903]
2017-03-16 11:55:37 [ main:3538 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6db4b903] after transaction
2017-03-16 11:55:37 [ main:3538 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3544 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:55:37 [ main:3551 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3551 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2884ca1f] for Hibernate transaction
2017-03-16 11:55:37 [ main:3551 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2884ca1f]
2017-03-16 11:55:37 [ main:3551 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3556 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3556 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2884ca1f]
2017-03-16 11:55:37 [ main:3557 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2884ca1f] after transaction
2017-03-16 11:55:37 [ main:3557 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3564 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:55:37 [ main:3571 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3571 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@11df24ba] for Hibernate transaction
2017-03-16 11:55:37 [ main:3572 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@11df24ba]
2017-03-16 11:55:37 [ main:3572 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3573 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3573 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@11df24ba]
2017-03-16 11:55:37 [ main:3574 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@11df24ba] after transaction
2017-03-16 11:55:37 [ main:3574 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3580 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:55:37 [ main:3588 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3588 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@229ae46a] for Hibernate transaction
2017-03-16 11:55:37 [ main:3588 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@229ae46a]
2017-03-16 11:55:37 [ main:3589 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3593 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3593 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@229ae46a]
2017-03-16 11:55:37 [ main:3593 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@229ae46a] after transaction
2017-03-16 11:55:37 [ main:3593 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3594 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3594 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@111648d0] for Hibernate transaction
2017-03-16 11:55:37 [ main:3594 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@111648d0]
2017-03-16 11:55:37 [ main:3594 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3595 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3595 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@111648d0]
2017-03-16 11:55:37 [ main:3595 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@111648d0] after transaction
2017-03-16 11:55:37 [ main:3595 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3603 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:55:37 [ main:3610 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3610 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@71fb1192] for Hibernate transaction
2017-03-16 11:55:37 [ main:3610 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@71fb1192]
2017-03-16 11:55:37 [ main:3610 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3610 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:55:37 [ main:3612 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@71fb1192] for Hibernate transaction
2017-03-16 11:55:37 [ main:3612 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:55:37 [ main:3630 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@71fb1192] for Hibernate transaction
2017-03-16 11:55:37 [ main:3630 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:55:37 [ main:3631 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@71fb1192] for Hibernate transaction
2017-03-16 11:55:37 [ main:3631 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:55:37 [ main:3632 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:55:37 [ main:3634 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@71fb1192] for Hibernate transaction
2017-03-16 11:55:37 [ main:3634 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:55:37 [ main:3635 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@71fb1192] for Hibernate transaction
2017-03-16 11:55:37 [ main:3635 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:55:37 [ main:3637 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@71fb1192] for Hibernate transaction
2017-03-16 11:55:37 [ main:3637 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:55:37 [ main:3637 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@71fb1192] for Hibernate transaction
2017-03-16 11:55:37 [ main:3637 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:55:37 [ main:3637 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3637 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@71fb1192]
2017-03-16 11:55:37 [ main:3639 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@71fb1192] after transaction
2017-03-16 11:55:37 [ main:3639 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3644 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:55:37 [ main:3650 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:55:37 [ main:3650 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3651 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1bcc2820] for Hibernate transaction
2017-03-16 11:55:37 [ main:3651 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1bcc2820]
2017-03-16 11:55:37 [ main:3651 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3669 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3669 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1bcc2820]
2017-03-16 11:55:37 [ main:3670 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1bcc2820] after transaction
2017-03-16 11:55:37 [ main:3670 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:55:37 [ main:3670 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:55:37 [ main:3670 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3f898ae8] for Hibernate transaction
2017-03-16 11:55:37 [ main:3671 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3f898ae8]
2017-03-16 11:55:37 [ main:3671 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:55:37 [ main:3671 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:55:37 [ main:3673 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3f898ae8] for Hibernate transaction
2017-03-16 11:55:37 [ main:3673 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:55:37 [ main:3674 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3f898ae8] for Hibernate transaction
2017-03-16 11:55:37 [ main:3675 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:55:37 [ main:3676 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3f898ae8] for Hibernate transaction
2017-03-16 11:55:37 [ main:3676 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:55:37 [ main:3677 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:55:37 [ main:3677 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3f898ae8]
2017-03-16 11:55:37 [ main:3677 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3f898ae8] after transaction
2017-03-16 11:55:37 [ main:3677 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:37 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7eaf8890: display name [org.springframework.context.support.ClassPathXmlApplicationContext@7eaf8890]; startup date [Thu Mar 16 11:56:37 CST 2017]; root of context hierarchy
2017-03-16 11:56:37 [ main:48 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:56:37 [ main:60 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:56:37 [ main:81 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:56:37 [ main:82 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:56:39 [ main:2443 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:56:39 [ main:2473 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:56:39 [ main:2494 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:56:39 [ main:2494 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@7eaf8890]: org.springframework.beans.factory.support.DefaultListableBeanFactory@42845bde
2017-03-16 11:56:39 [ main:2495 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@7eaf8890: display name [org.springframework.context.support.ClassPathXmlApplicationContext@7eaf8890]; startup date [Thu Mar 16 11:56:37 CST 2017]; root of context hierarchy
2017-03-16 11:56:39 [ main:2508 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:56:39 [ main:2509 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:56:39 [ main:2523 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:56:39 [ main:2533 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:56:39 [ main:2535 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3904e3f1]
2017-03-16 11:56:39 [ main:2536 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@168f6724]
2017-03-16 11:56:39 [ main:2537 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@42845bde: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:56:39 [ main:2538 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:56:39 [ main:2538 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:56:39 [ main:2541 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:56:39 [ main:2554 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:39 [ main:2554 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:39 [ main:2555 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:56:39 [ main:2559 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:56:39 [ main:2559 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:56:39 [ main:2560 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:56:39 [ main:2563 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:56:39 [ main:2563 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:39 [ main:2566 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:56:39 [ main:2566 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:56:39 [ main:2566 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:56:40 [ main:2577 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:56:40 [ main:2583 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:56:40 [ main:2584 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:56:40 [ main:2865 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:56:40 [ main:3157 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:40 [ main:3158 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:56:40 [ main:3159 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:56:40 [ main:3159 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:56:40 [ main:3159 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:56:40 [ main:3162 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:56:40 [ main:3162 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:40 [ main:3168 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:40 [ main:3175 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3181 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:56:40 [ main:3185 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@35853853]
2017-03-16 11:56:40 [ main:3234 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:56:40 [ main:3234 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:56:40 [ main:3234 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:56:40 [ main:3237 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:56:40 [ main:3237 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:56:40 [ main:3241 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:56:40 [ main:3244 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:56:40 [ main:3245 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:56:40 [ main:3251 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@47ace768] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:56:40 [ main:3251 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:40 [ main:3252 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:56:40 [ main:3252 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:56:40 [ main:3252 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:56:40 [ main:3252 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:56:40 [ main:3255 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:56:40 [ main:3255 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:56:40 [ main:3255 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:56:40 [ main:3255 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:56:40 [ main:3255 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3255 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3256 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3257 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:56:40 [ main:3258 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:56:40 [ main:3259 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3259 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:56:40 [ main:3259 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:56:40 [ main:3259 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3259 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:56:40 [ main:3259 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:56:40 [ main:3259 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:56:40 [ main:3259 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:56:40 [ main:3259 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:56:40 [ main:3278 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:56:40 [ main:3278 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:56:40 [ main:3278 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:56:40 [ main:3278 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:56:40 [ main:3281 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:56:40 [ main:3281 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:40 [ main:3281 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3281 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:56:40 [ main:3281 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@43c58c4a]
2017-03-16 11:56:40 [ main:3283 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3283 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:56:40 [ main:3283 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3283 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:56:40 [ main:3283 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3283 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:56:40 [ main:3283 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3284 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3285 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3286 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3287 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:56:40 [ main:3288 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:56:40 [ main:3288 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3288 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:56:40 [ main:3288 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:56:40 [ main:3288 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:56:40 [ main:3288 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:56:40 [ main:3288 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:56:40 [ main:3302 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:56:40 [ main:3302 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:56:40 [ main:3302 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:56:40 [ main:3303 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:56:40 [ main:3307 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:56:40 [ main:3307 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:40 [ main:3307 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3307 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:56:40 [ main:3307 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@6a55c240]
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:56:40 [ main:3309 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:56:40 [ main:3310 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3312 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:56:40 [ main:3313 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:56:40 [ main:3314 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3314 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:56:40 [ main:3314 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:56:40 [ main:3314 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3314 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:56:40 [ main:3314 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:56:40 [ main:3314 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:56:40 [ main:3314 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:56:40 [ main:3314 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:56:40 [ main:3329 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:56:40 [ main:3329 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:56:40 [ main:3329 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:56:40 [ main:3329 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:56:40 [ main:3331 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:56:40 [ main:3332 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:40 [ main:3332 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3332 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:56:40 [ main:3332 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@364f4c91]
2017-03-16 11:56:40 [ main:3333 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3333 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:56:40 [ main:3333 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3333 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:56:40 [ main:3333 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3333 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:56:40 [ main:3333 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:56:40 [ main:3334 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3336 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3336 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:56:40 [ main:3336 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3336 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:56:40 [ main:3343 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3343 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3343 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3343 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:56:40 [ main:3343 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:56:40 [ main:3343 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:56:40 [ main:3344 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:56:40 [ main:3345 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:56:40 [ main:3357 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:56:40 [ main:3357 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:56:40 [ main:3357 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:56:40 [ main:3357 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:56:40 [ main:3360 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:56:40 [ main:3360 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:40 [ main:3360 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3360 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:56:40 [ main:3360 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@591f7e6f]
2017-03-16 11:56:40 [ main:3361 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3361 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3362 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3363 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:56:40 [ main:3364 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3365 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:56:40 [ main:3366 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:56:40 [ main:3377 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:56:40 [ main:3377 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:56:40 [ main:3377 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:56:40 [ main:3377 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:56:40 [ main:3377 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:56:40 [ main:3377 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:56:40 [ main:3377 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:40 [ main:3443 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:40 [ main:3466 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@661c71d6] for Hibernate transaction
2017-03-16 11:56:40 [ main:3467 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@661c71d6]
2017-03-16 11:56:40 [ main:3479 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3583 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:56:41 [ main:3583 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@661c71d6] for Hibernate transaction
2017-03-16 11:56:41 [ main:3583 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:3603 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3603 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@661c71d6]
2017-03-16 11:56:41 [ main:3604 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@661c71d6] after transaction
2017-03-16 11:56:41 [ main:3604 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3605 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3605 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1aa0fd0f] for Hibernate transaction
2017-03-16 11:56:41 [ main:3605 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1aa0fd0f]
2017-03-16 11:56:41 [ main:3606 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3609 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3609 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1aa0fd0f]
2017-03-16 11:56:41 [ main:3610 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1aa0fd0f] after transaction
2017-03-16 11:56:41 [ main:3610 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3610 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:56:41 [ main:3610 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3610 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@58a470a8] for Hibernate transaction
2017-03-16 11:56:41 [ main:3610 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@58a470a8]
2017-03-16 11:56:41 [ main:3611 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3623 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3623 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@58a470a8]
2017-03-16 11:56:41 [ main:3624 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@58a470a8] after transaction
2017-03-16 11:56:41 [ main:3624 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3640 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3650 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3650 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@375fb022] for Hibernate transaction
2017-03-16 11:56:41 [ main:3650 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@375fb022]
2017-03-16 11:56:41 [ main:3650 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3657 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3658 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@375fb022]
2017-03-16 11:56:41 [ main:3661 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@375fb022] after transaction
2017-03-16 11:56:41 [ main:3661 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3671 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3679 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3679 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7b32a3b] for Hibernate transaction
2017-03-16 11:56:41 [ main:3679 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7b32a3b]
2017-03-16 11:56:41 [ main:3680 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3688 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3688 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7b32a3b]
2017-03-16 11:56:41 [ main:3689 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7b32a3b] after transaction
2017-03-16 11:56:41 [ main:3689 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3701 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3710 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getParentId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3711 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3d58cfc5] for Hibernate transaction
2017-03-16 11:56:41 [ main:3711 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3d58cfc5]
2017-03-16 11:56:41 [ main:3711 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3712 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3712 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3d58cfc5]
2017-03-16 11:56:41 [ main:3713 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3d58cfc5] after transaction
2017-03-16 11:56:41 [ main:3713 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3724 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3737 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3737 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@362d2c31] for Hibernate transaction
2017-03-16 11:56:41 [ main:3737 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@362d2c31]
2017-03-16 11:56:41 [ main:3737 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3740 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3740 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@362d2c31]
2017-03-16 11:56:41 [ main:3747 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@362d2c31] after transaction
2017-03-16 11:56:41 [ main:3747 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3747 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3748 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@70daeb2d] for Hibernate transaction
2017-03-16 11:56:41 [ main:3748 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@70daeb2d]
2017-03-16 11:56:41 [ main:3748 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3750 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3750 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@70daeb2d]
2017-03-16 11:56:41 [ main:3750 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@70daeb2d] after transaction
2017-03-16 11:56:41 [ main:3751 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3760 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3768 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3768 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@31963228] for Hibernate transaction
2017-03-16 11:56:41 [ main:3768 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@31963228]
2017-03-16 11:56:41 [ main:3769 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3776 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3776 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@31963228] for Hibernate transaction
2017-03-16 11:56:41 [ main:3777 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:3778 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3778 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@31963228] for Hibernate transaction
2017-03-16 11:56:41 [ main:3778 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:3779 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3779 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@31963228]
2017-03-16 11:56:41 [ main:3780 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@31963228] after transaction
2017-03-16 11:56:41 [ main:3780 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3794 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3798 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.addNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3798 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@76eaf285] for Hibernate transaction
2017-03-16 11:56:41 [ main:3798 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@76eaf285]
2017-03-16 11:56:41 [ main:3799 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3801 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3801 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@76eaf285]
2017-03-16 11:56:41 [ main:3803 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@76eaf285] after transaction
2017-03-16 11:56:41 [ main:3803 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3803 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3803 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@416d3ac6] for Hibernate transaction
2017-03-16 11:56:41 [ main:3803 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@416d3ac6]
2017-03-16 11:56:41 [ main:3804 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3805 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3805 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@416d3ac6]
2017-03-16 11:56:41 [ main:3806 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@416d3ac6] after transaction
2017-03-16 11:56:41 [ main:3806 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3815 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3823 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3823 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@76e1c759] for Hibernate transaction
2017-03-16 11:56:41 [ main:3823 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@76e1c759]
2017-03-16 11:56:41 [ main:3823 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3828 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3828 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@76e1c759]
2017-03-16 11:56:41 [ main:3830 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@76e1c759] after transaction
2017-03-16 11:56:41 [ main:3830 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3839 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3847 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3847 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3781facd] for Hibernate transaction
2017-03-16 11:56:41 [ main:3847 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3781facd]
2017-03-16 11:56:41 [ main:3848 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3848 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3848 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3781facd]
2017-03-16 11:56:41 [ main:3849 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3781facd] after transaction
2017-03-16 11:56:41 [ main:3849 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3850 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3850 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6613e9fc] for Hibernate transaction
2017-03-16 11:56:41 [ main:3850 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6613e9fc]
2017-03-16 11:56:41 [ main:3850 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3851 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3851 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6613e9fc]
2017-03-16 11:56:41 [ main:3852 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6613e9fc] after transaction
2017-03-16 11:56:41 [ main:3852 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3852 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3852 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@57113777] for Hibernate transaction
2017-03-16 11:56:41 [ main:3852 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@57113777]
2017-03-16 11:56:41 [ main:3853 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3853 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3853 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@57113777]
2017-03-16 11:56:41 [ main:3854 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@57113777] after transaction
2017-03-16 11:56:41 [ main:3854 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3854 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3854 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6d8e324f] for Hibernate transaction
2017-03-16 11:56:41 [ main:3854 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6d8e324f]
2017-03-16 11:56:41 [ main:3855 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3856 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3856 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6d8e324f]
2017-03-16 11:56:41 [ main:3857 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6d8e324f] after transaction
2017-03-16 11:56:41 [ main:3857 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3867 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3875 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3875 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2e7170a7] for Hibernate transaction
2017-03-16 11:56:41 [ main:3875 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2e7170a7]
2017-03-16 11:56:41 [ main:3875 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3879 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3879 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2e7170a7]
2017-03-16 11:56:41 [ main:3880 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2e7170a7] after transaction
2017-03-16 11:56:41 [ main:3880 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3889 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3896 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3896 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1af37801] for Hibernate transaction
2017-03-16 11:56:41 [ main:3896 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1af37801]
2017-03-16 11:56:41 [ main:3897 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3898 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3898 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1af37801] for Hibernate transaction
2017-03-16 11:56:41 [ main:3898 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:3899 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3899 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1af37801]
2017-03-16 11:56:41 [ main:3900 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1af37801] after transaction
2017-03-16 11:56:41 [ main:3900 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3908 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3915 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3915 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@46af13de] for Hibernate transaction
2017-03-16 11:56:41 [ main:3915 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@46af13de]
2017-03-16 11:56:41 [ main:3916 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3916 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3916 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@46af13de]
2017-03-16 11:56:41 [ main:3917 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@46af13de] after transaction
2017-03-16 11:56:41 [ main:3917 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3917 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3917 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1e60a6ce] for Hibernate transaction
2017-03-16 11:56:41 [ main:3917 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1e60a6ce]
2017-03-16 11:56:41 [ main:3918 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3920 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3920 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1e60a6ce]
2017-03-16 11:56:41 [ main:3921 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1e60a6ce] after transaction
2017-03-16 11:56:41 [ main:3921 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3929 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3936 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3936 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@467110d4] for Hibernate transaction
2017-03-16 11:56:41 [ main:3936 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@467110d4]
2017-03-16 11:56:41 [ main:3937 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3937 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3937 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@467110d4]
2017-03-16 11:56:41 [ main:3939 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@467110d4] after transaction
2017-03-16 11:56:41 [ main:3939 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3939 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3939 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@763026b0] for Hibernate transaction
2017-03-16 11:56:41 [ main:3939 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@763026b0]
2017-03-16 11:56:41 [ main:3939 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3940 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3940 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@763026b0]
2017-03-16 11:56:41 [ main:3941 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@763026b0] after transaction
2017-03-16 11:56:41 [ main:3941 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3949 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3956 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3956 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@dd62e57] for Hibernate transaction
2017-03-16 11:56:41 [ main:3956 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@dd62e57]
2017-03-16 11:56:41 [ main:3957 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3960 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3960 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@dd62e57]
2017-03-16 11:56:41 [ main:3961 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@dd62e57] after transaction
2017-03-16 11:56:41 [ main:3961 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3969 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:3976 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:3976 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@288ff4f3] for Hibernate transaction
2017-03-16 11:56:41 [ main:3976 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@288ff4f3]
2017-03-16 11:56:41 [ main:3976 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:3981 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:3981 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@288ff4f3]
2017-03-16 11:56:41 [ main:3982 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@288ff4f3] after transaction
2017-03-16 11:56:41 [ main:3982 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:3991 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4021 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeTypes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:4021 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@fdeb059] for Hibernate transaction
2017-03-16 11:56:41 [ main:4021 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@fdeb059]
2017-03-16 11:56:41 [ main:4022 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:4022 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:4022 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@fdeb059]
2017-03-16 11:56:41 [ main:4023 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@fdeb059] after transaction
2017-03-16 11:56:41 [ main:4023 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:4032 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4039 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:4039 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@75bebe0f] for Hibernate transaction
2017-03-16 11:56:41 [ main:4039 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@75bebe0f]
2017-03-16 11:56:41 [ main:4040 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:4041 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4041 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@75bebe0f] for Hibernate transaction
2017-03-16 11:56:41 [ main:4041 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:4042 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4042 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@75bebe0f] for Hibernate transaction
2017-03-16 11:56:41 [ main:4042 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:4043 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4043 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@75bebe0f] for Hibernate transaction
2017-03-16 11:56:41 [ main:4043 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:4044 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:4044 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@75bebe0f]
2017-03-16 11:56:41 [ main:4044 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@75bebe0f] after transaction
2017-03-16 11:56:41 [ main:4044 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:4054 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4061 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:4061 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@750cdd5e] for Hibernate transaction
2017-03-16 11:56:41 [ main:4061 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@750cdd5e]
2017-03-16 11:56:41 [ main:4061 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:4062 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:4063 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@750cdd5e]
2017-03-16 11:56:41 [ main:4063 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@750cdd5e] after transaction
2017-03-16 11:56:41 [ main:4063 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:56:41 [ main:4071 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4077 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:56:41 [ main:4078 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@44c6f613] for Hibernate transaction
2017-03-16 11:56:41 [ main:4078 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@44c6f613]
2017-03-16 11:56:41 [ main:4078 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:56:41 [ main:4080 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4080 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@44c6f613] for Hibernate transaction
2017-03-16 11:56:41 [ main:4080 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:4082 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4082 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@44c6f613] for Hibernate transaction
2017-03-16 11:56:41 [ main:4082 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:4083 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4083 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@44c6f613] for Hibernate transaction
2017-03-16 11:56:41 [ main:4083 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:4084 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4084 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@44c6f613] for Hibernate transaction
2017-03-16 11:56:41 [ main:4084 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:4086 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4086 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@44c6f613] for Hibernate transaction
2017-03-16 11:56:41 [ main:4086 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:4087 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:56:41 [ main:4087 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@44c6f613] for Hibernate transaction
2017-03-16 11:56:41 [ main:4087 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:56:41 [ main:4089 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:56:41 [ main:4089 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@44c6f613]
2017-03-16 11:56:41 [ main:4090 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@44c6f613] after transaction
2017-03-16 11:56:41 [ main:4090 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:27 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@a83234a: display name [org.springframework.context.support.ClassPathXmlApplicationContext@a83234a]; startup date [Thu Mar 16 11:57:27 CST 2017]; root of context hierarchy
2017-03-16 11:57:27 [ main:44 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:57:27 [ main:56 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:57:27 [ main:77 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:57:27 [ main:79 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:57:29 [ main:2234 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:57:29 [ main:2261 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:57:29 [ main:2282 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:57:29 [ main:2282 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@a83234a]: org.springframework.beans.factory.support.DefaultListableBeanFactory@79eeb142
2017-03-16 11:57:29 [ main:2282 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@a83234a: display name [org.springframework.context.support.ClassPathXmlApplicationContext@a83234a]; startup date [Thu Mar 16 11:57:27 CST 2017]; root of context hierarchy
2017-03-16 11:57:29 [ main:2296 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:57:29 [ main:2297 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:57:29 [ main:2311 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:57:29 [ main:2322 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:57:29 [ main:2323 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@2db8b352]
2017-03-16 11:57:29 [ main:2325 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@88d1f2]
2017-03-16 11:57:29 [ main:2326 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@79eeb142: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:57:29 [ main:2326 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:57:29 [ main:2326 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:57:29 [ main:2329 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:57:29 [ main:2343 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:29 [ main:2343 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:29 [ main:2344 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:57:29 [ main:2347 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:57:29 [ main:2347 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:57:29 [ main:2348 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:57:29 [ main:2351 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:57:29 [ main:2351 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:29 [ main:2355 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:57:29 [ main:2355 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:57:29 [ main:2355 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:57:29 [ main:2367 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:57:29 [ main:2374 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:57:29 [ main:2375 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:57:29 [ main:2662 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:57:30 [ main:2955 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:30 [ main:2957 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:57:30 [ main:2958 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:57:30 [ main:2958 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:57:30 [ main:2958 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:57:30 [ main:2961 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:57:30 [ main:2961 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:30 [ main:2967 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:30 [ main:2974 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:2980 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:57:30 [ main:2984 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@3d34ec98]
2017-03-16 11:57:30 [ main:3034 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:57:30 [ main:3034 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:57:30 [ main:3035 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:57:30 [ main:3038 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:57:30 [ main:3038 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:57:30 [ main:3042 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:57:30 [ main:3046 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:57:30 [ main:3047 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:57:30 [ main:3052 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@288c819b] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:57:30 [ main:3053 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:30 [ main:3053 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:57:30 [ main:3053 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:57:30 [ main:3054 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:57:30 [ main:3054 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:57:30 [ main:3056 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3056 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:57:30 [ main:3056 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3056 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:57:30 [ main:3057 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:57:30 [ main:3058 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:57:30 [ main:3059 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:57:30 [ main:3060 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:57:30 [ main:3061 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:57:30 [ main:3061 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:57:30 [ main:3080 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:57:30 [ main:3080 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3080 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:57:30 [ main:3080 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:57:30 [ main:3083 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:57:30 [ main:3083 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:30 [ main:3083 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3083 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:57:30 [ main:3083 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@5e7d7108]
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:57:30 [ main:3085 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3086 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:57:30 [ main:3086 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3086 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:57:30 [ main:3086 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3086 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:57:30 [ main:3086 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3086 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:57:30 [ main:3086 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3086 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3087 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:57:30 [ main:3088 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3088 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3088 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3088 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:57:30 [ main:3088 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3088 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3088 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3088 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:57:30 [ main:3088 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3088 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:57:30 [ main:3089 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:57:30 [ main:3090 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:57:30 [ main:3105 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:57:30 [ main:3105 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:57:30 [ main:3105 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:57:30 [ main:3105 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:57:30 [ main:3108 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:57:30 [ main:3109 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:30 [ main:3109 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3109 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:57:30 [ main:3109 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@24442e4a]
2017-03-16 11:57:30 [ main:3110 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3110 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:57:30 [ main:3110 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3110 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:57:30 [ main:3110 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:57:30 [ main:3111 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3112 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3113 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:57:30 [ main:3114 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:57:30 [ main:3115 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:57:30 [ main:3130 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:57:30 [ main:3130 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:57:30 [ main:3131 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:57:30 [ main:3131 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:57:30 [ main:3133 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:57:30 [ main:3133 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:30 [ main:3134 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3134 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:57:30 [ main:3134 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@102bdf72]
2017-03-16 11:57:30 [ main:3135 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3135 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:57:30 [ main:3135 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3135 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:57:30 [ main:3135 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3135 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:57:30 [ main:3135 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3135 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:57:30 [ main:3135 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3135 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:57:30 [ main:3136 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3136 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:57:30 [ main:3136 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3136 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:57:30 [ main:3136 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3136 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:57:30 [ main:3136 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3136 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:57:30 [ main:3136 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3136 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3137 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:57:30 [ main:3138 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:57:30 [ main:3146 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:57:30 [ main:3146 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:57:30 [ main:3146 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:57:30 [ main:3146 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:57:30 [ main:3146 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3146 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3146 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:57:30 [ main:3146 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:57:30 [ main:3146 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:57:30 [ main:3146 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:57:30 [ main:3147 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:57:30 [ main:3159 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:57:30 [ main:3159 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:57:30 [ main:3159 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:57:30 [ main:3159 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:57:30 [ main:3162 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:57:30 [ main:3162 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:30 [ main:3162 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3163 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:57:30 [ main:3163 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@22a5d71f]
2017-03-16 11:57:30 [ main:3164 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3164 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3165 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3166 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3167 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:57:30 [ main:3168 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:57:30 [ main:3169 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:57:30 [ main:3180 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:57:30 [ main:3180 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:57:30 [ main:3180 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:57:30 [ main:3180 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:57:30 [ main:3180 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:57:30 [ main:3180 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:57:30 [ main:3180 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3246 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRoleMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3268 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5575ccf9] for Hibernate transaction
2017-03-16 11:57:30 [ main:3269 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5575ccf9]
2017-03-16 11:57:30 [ main:3282 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3388 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3388 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5575ccf9]
2017-03-16 11:57:30 [ main:3389 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5575ccf9] after transaction
2017-03-16 11:57:30 [ main:3390 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3391 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3391 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@75a3a7f7] for Hibernate transaction
2017-03-16 11:57:30 [ main:3391 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@75a3a7f7]
2017-03-16 11:57:30 [ main:3391 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3401 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3401 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@75a3a7f7]
2017-03-16 11:57:30 [ main:3405 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@75a3a7f7] after transaction
2017-03-16 11:57:30 [ main:3405 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3435 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3442 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.addRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3442 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@65dd9505] for Hibernate transaction
2017-03-16 11:57:30 [ main:3442 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@65dd9505]
2017-03-16 11:57:30 [ main:3443 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3447 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3448 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@65dd9505]
2017-03-16 11:57:30 [ main:3452 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@65dd9505] after transaction
2017-03-16 11:57:30 [ main:3452 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3452 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3452 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@62016a9a] for Hibernate transaction
2017-03-16 11:57:30 [ main:3452 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@62016a9a]
2017-03-16 11:57:30 [ main:3453 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3454 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3454 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@62016a9a]
2017-03-16 11:57:30 [ main:3455 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@62016a9a] after transaction
2017-03-16 11:57:30 [ main:3455 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3470 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3479 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3480 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1e62e899] for Hibernate transaction
2017-03-16 11:57:30 [ main:3480 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1e62e899]
2017-03-16 11:57:30 [ main:3480 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3495 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3495 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1e62e899]
2017-03-16 11:57:30 [ main:3496 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1e62e899] after transaction
2017-03-16 11:57:30 [ main:3496 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3512 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3520 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3521 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7e9b4e48] for Hibernate transaction
2017-03-16 11:57:30 [ main:3521 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7e9b4e48]
2017-03-16 11:57:30 [ main:3521 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3523 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3523 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7e9b4e48]
2017-03-16 11:57:30 [ main:3525 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7e9b4e48] after transaction
2017-03-16 11:57:30 [ main:3525 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3526 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3526 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3cb9f0ff] for Hibernate transaction
2017-03-16 11:57:30 [ main:3526 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3cb9f0ff]
2017-03-16 11:57:30 [ main:3526 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3527 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3527 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3cb9f0ff]
2017-03-16 11:57:30 [ main:3528 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3cb9f0ff] after transaction
2017-03-16 11:57:30 [ main:3528 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3542 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3550 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3551 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1436fde2] for Hibernate transaction
2017-03-16 11:57:30 [ main:3551 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1436fde2]
2017-03-16 11:57:30 [ main:3551 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3556 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3556 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1436fde2]
2017-03-16 11:57:30 [ main:3557 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1436fde2] after transaction
2017-03-16 11:57:30 [ main:3557 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3570 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3578 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3578 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@77b874ea] for Hibernate transaction
2017-03-16 11:57:30 [ main:3578 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@77b874ea]
2017-03-16 11:57:30 [ main:3579 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3584 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3584 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@77b874ea] for Hibernate transaction
2017-03-16 11:57:30 [ main:3584 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:30 [ main:3586 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3586 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@77b874ea] for Hibernate transaction
2017-03-16 11:57:30 [ main:3586 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:30 [ main:3587 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3587 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@77b874ea]
2017-03-16 11:57:30 [ main:3589 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@77b874ea] after transaction
2017-03-16 11:57:30 [ main:3589 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3604 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3613 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateParent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3613 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5509ced8] for Hibernate transaction
2017-03-16 11:57:30 [ main:3613 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5509ced8]
2017-03-16 11:57:30 [ main:3614 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3617 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3617 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5509ced8]
2017-03-16 11:57:30 [ main:3618 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5509ced8] after transaction
2017-03-16 11:57:30 [ main:3618 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3618 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3618 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4f3a7d3a] for Hibernate transaction
2017-03-16 11:57:30 [ main:3618 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f3a7d3a]
2017-03-16 11:57:30 [ main:3619 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3620 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3620 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f3a7d3a]
2017-03-16 11:57:30 [ main:3621 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f3a7d3a] after transaction
2017-03-16 11:57:30 [ main:3621 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3635 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3642 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3642 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4e9e7777] for Hibernate transaction
2017-03-16 11:57:30 [ main:3643 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4e9e7777]
2017-03-16 11:57:30 [ main:3643 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3644 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3644 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4e9e7777] for Hibernate transaction
2017-03-16 11:57:30 [ main:3644 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:30 [ main:3646 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3646 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4e9e7777] for Hibernate transaction
2017-03-16 11:57:30 [ main:3646 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:30 [ main:3648 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3648 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4e9e7777] for Hibernate transaction
2017-03-16 11:57:30 [ main:3648 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:30 [ main:3649 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3649 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4e9e7777]
2017-03-16 11:57:30 [ main:3650 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4e9e7777] after transaction
2017-03-16 11:57:30 [ main:3650 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3662 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3669 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3669 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@b9bb107] for Hibernate transaction
2017-03-16 11:57:30 [ main:3669 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@b9bb107]
2017-03-16 11:57:30 [ main:3670 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3673 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3673 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@b9bb107]
2017-03-16 11:57:30 [ main:3674 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@b9bb107] after transaction
2017-03-16 11:57:30 [ main:3674 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3674 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3674 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@75221ed7] for Hibernate transaction
2017-03-16 11:57:30 [ main:3674 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@75221ed7]
2017-03-16 11:57:30 [ main:3675 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3676 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:30 [ main:3676 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@75221ed7]
2017-03-16 11:57:30 [ main:3677 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@75221ed7] after transaction
2017-03-16 11:57:30 [ main:3677 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:30 [ main:3690 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:30 [ main:3697 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.deleteRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:30 [ main:3697 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@57113777] for Hibernate transaction
2017-03-16 11:57:30 [ main:3697 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@57113777]
2017-03-16 11:57:30 [ main:3698 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:30 [ main:3701 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:57:30 [ main:3701 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@57113777] for Hibernate transaction
2017-03-16 11:57:30 [ main:3701 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3721 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:57:31 [ main:3721 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@57113777] for Hibernate transaction
2017-03-16 11:57:31 [ main:3721 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3740 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:31 [ main:3740 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@57113777]
2017-03-16 11:57:31 [ main:3740 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@57113777] after transaction
2017-03-16 11:57:31 [ main:3740 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:31 [ main:3741 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:31 [ main:3741 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@470c7991] for Hibernate transaction
2017-03-16 11:57:31 [ main:3741 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@470c7991]
2017-03-16 11:57:31 [ main:3742 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:31 [ main:3742 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:31 [ main:3742 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@470c7991]
2017-03-16 11:57:31 [ main:3743 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@470c7991] after transaction
2017-03-16 11:57:31 [ main:3743 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:31 [ main:3743 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:57:31 [ main:3743 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:31 [ main:3743 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@664b9779] for Hibernate transaction
2017-03-16 11:57:31 [ main:3743 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@664b9779]
2017-03-16 11:57:31 [ main:3744 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:31 [ main:3747 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:31 [ main:3747 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@664b9779]
2017-03-16 11:57:31 [ main:3748 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@664b9779] after transaction
2017-03-16 11:57:31 [ main:3748 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:31 [ main:3748 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:57:31 [ main:3748 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:31 [ main:3748 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2947640e] for Hibernate transaction
2017-03-16 11:57:31 [ main:3748 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2947640e]
2017-03-16 11:57:31 [ main:3748 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:31 [ main:3752 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:31 [ main:3752 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2947640e]
2017-03-16 11:57:31 [ main:3752 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2947640e] after transaction
2017-03-16 11:57:31 [ main:3752 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:31 [ main:3766 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3772 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:31 [ main:3772 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@600a2be4] for Hibernate transaction
2017-03-16 11:57:31 [ main:3772 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@600a2be4]
2017-03-16 11:57:31 [ main:3773 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:31 [ main:3774 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:31 [ main:3774 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@600a2be4]
2017-03-16 11:57:31 [ main:3774 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@600a2be4] after transaction
2017-03-16 11:57:31 [ main:3774 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:31 [ main:3774 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:31 [ main:3775 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3db1d05b] for Hibernate transaction
2017-03-16 11:57:31 [ main:3775 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3db1d05b]
2017-03-16 11:57:31 [ main:3775 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:31 [ main:3776 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:31 [ main:3776 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3db1d05b]
2017-03-16 11:57:31 [ main:3776 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3db1d05b] after transaction
2017-03-16 11:57:31 [ main:3776 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:31 [ main:3789 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3799 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:31 [ main:3799 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@544e9892] for Hibernate transaction
2017-03-16 11:57:31 [ main:3799 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@544e9892]
2017-03-16 11:57:31 [ main:3799 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:31 [ main:3801 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3801 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@544e9892] for Hibernate transaction
2017-03-16 11:57:31 [ main:3801 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3802 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3802 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@544e9892] for Hibernate transaction
2017-03-16 11:57:31 [ main:3802 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3803 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3803 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@544e9892] for Hibernate transaction
2017-03-16 11:57:31 [ main:3803 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3804 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3804 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@544e9892] for Hibernate transaction
2017-03-16 11:57:31 [ main:3804 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3805 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:31 [ main:3805 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@544e9892]
2017-03-16 11:57:31 [ main:3806 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@544e9892] after transaction
2017-03-16 11:57:31 [ main:3806 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:31 [ main:3818 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3825 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:31 [ main:3825 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5bf2f522] for Hibernate transaction
2017-03-16 11:57:31 [ main:3825 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5bf2f522]
2017-03-16 11:57:31 [ main:3825 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:31 [ main:3826 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3826 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5bf2f522] for Hibernate transaction
2017-03-16 11:57:31 [ main:3826 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3828 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3828 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5bf2f522] for Hibernate transaction
2017-03-16 11:57:31 [ main:3828 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3829 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3829 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5bf2f522] for Hibernate transaction
2017-03-16 11:57:31 [ main:3829 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3830 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3830 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5bf2f522] for Hibernate transaction
2017-03-16 11:57:31 [ main:3830 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3831 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3831 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5bf2f522] for Hibernate transaction
2017-03-16 11:57:31 [ main:3831 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:57:31 [ main:3832 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:31 [ main:3832 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5bf2f522]
2017-03-16 11:57:31 [ main:3833 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5bf2f522] after transaction
2017-03-16 11:57:31 [ main:3833 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:57:31 [ main:3845 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:57:31 [ main:3852 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:57:31 [ main:3852 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6a9454cd] for Hibernate transaction
2017-03-16 11:57:31 [ main:3852 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6a9454cd]
2017-03-16 11:57:31 [ main:3853 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:57:31 [ main:3854 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:57:31 [ main:3854 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6a9454cd]
2017-03-16 11:57:31 [ main:3855 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6a9454cd] after transaction
2017-03-16 11:57:31 [ main:3855 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:11 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@6e47c1bf: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6e47c1bf]; startup date [Thu Mar 16 11:58:11 CST 2017]; root of context hierarchy
2017-03-16 11:58:11 [ main:56 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 11:58:11 [ main:69 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 11:58:11 [ main:95 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 11:58:11 [ main:96 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 11:58:14 [ main:3459 ] - [ DEBUG ] Loading bean definitions
2017-03-16 11:58:15 [ main:3478 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 11:58:15 [ main:3499 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 11:58:15 [ main:3499 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@6e47c1bf]: org.springframework.beans.factory.support.DefaultListableBeanFactory@56d9ea8d
2017-03-16 11:58:15 [ main:3500 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@6e47c1bf: display name [org.springframework.context.support.ClassPathXmlApplicationContext@6e47c1bf]; startup date [Thu Mar 16 11:58:11 CST 2017]; root of context hierarchy
2017-03-16 11:58:15 [ main:3514 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:58:15 [ main:3515 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:58:15 [ main:3529 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:3540 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:58:15 [ main:3541 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4e907ea2]
2017-03-16 11:58:15 [ main:3542 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@25956b11]
2017-03-16 11:58:15 [ main:3544 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@56d9ea8d: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 11:58:15 [ main:3544 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 11:58:15 [ main:3544 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 11:58:15 [ main:3547 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:3561 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:3561 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:3562 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:3565 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:58:15 [ main:3565 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:58:15 [ main:3567 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:3570 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:58:15 [ main:3571 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:3573 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 11:58:15 [ main:3573 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 11:58:15 [ main:3573 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 11:58:15 [ main:3585 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:3591 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 11:58:15 [ main:3592 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 11:58:15 [ main:3881 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 11:58:15 [ main:4174 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:4176 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 11:58:15 [ main:4176 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 11:58:15 [ main:4176 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 11:58:15 [ main:4177 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:4179 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:58:15 [ main:4180 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:4186 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:4192 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4198 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:58:15 [ main:4202 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@42948855]
2017-03-16 11:58:15 [ main:4253 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:58:15 [ main:4254 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:58:15 [ main:4255 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:4258 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 11:58:15 [ main:4258 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 11:58:15 [ main:4263 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:4267 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:58:15 [ main:4267 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 11:58:15 [ main:4274 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@328c8b07] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 11:58:15 [ main:4274 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:4275 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 11:58:15 [ main:4275 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:58:15 [ main:4275 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:58:15 [ main:4275 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:58:15 [ main:4278 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 11:58:15 [ main:4278 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4278 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 11:58:15 [ main:4278 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4278 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 11:58:15 [ main:4278 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4278 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4279 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 11:58:15 [ main:4280 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4280 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4280 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4280 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:58:15 [ main:4280 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4280 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4280 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4280 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:58:15 [ main:4280 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4280 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:58:15 [ main:4281 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:58:15 [ main:4282 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:58:15 [ main:4302 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 11:58:15 [ main:4302 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 11:58:15 [ main:4302 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 11:58:15 [ main:4302 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:4306 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:58:15 [ main:4306 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:4306 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4306 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:58:15 [ main:4306 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@51bb8cae]
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 11:58:15 [ main:4308 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4309 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:58:15 [ main:4310 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:58:15 [ main:4311 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:58:15 [ main:4312 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:58:15 [ main:4326 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 11:58:15 [ main:4326 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 11:58:15 [ main:4327 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 11:58:15 [ main:4327 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:4331 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:58:15 [ main:4331 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:4331 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4331 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:58:15 [ main:4331 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@11b2084f]
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4333 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 11:58:15 [ main:4334 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4335 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4336 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:58:15 [ main:4337 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:58:15 [ main:4338 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:58:15 [ main:4353 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 11:58:15 [ main:4353 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 11:58:15 [ main:4353 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 11:58:15 [ main:4353 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:4356 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:58:15 [ main:4356 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:4356 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4356 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:58:15 [ main:4356 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@623861c5]
2017-03-16 11:58:15 [ main:4357 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4357 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 11:58:15 [ main:4357 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4358 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4359 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4360 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:58:15 [ main:4361 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:58:15 [ main:4362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:58:15 [ main:4362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:58:15 [ main:4362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:58:15 [ main:4362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:58:15 [ main:4362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:58:15 [ main:4362 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:58:15 [ main:4383 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 11:58:15 [ main:4383 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:15 [ main:4383 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 11:58:15 [ main:4383 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 11:58:15 [ main:4386 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 11:58:15 [ main:4386 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:4386 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4386 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 11:58:15 [ main:4386 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@bb64549]
2017-03-16 11:58:15 [ main:4387 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4387 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 11:58:15 [ main:4387 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4387 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 11:58:15 [ main:4387 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4388 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4389 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 11:58:15 [ main:4390 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 11:58:15 [ main:4391 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 11:58:15 [ main:4392 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 11:58:15 [ main:4392 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 11:58:15 [ main:4392 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 11:58:15 [ main:4392 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 11:58:15 [ main:4403 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 11:58:15 [ main:4403 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 11:58:15 [ main:4403 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 11:58:15 [ main:4403 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 11:58:15 [ main:4403 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 11:58:15 [ main:4403 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 11:58:15 [ main:4403 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:15 [ main:4462 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4484 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3017aff3] for Hibernate transaction
2017-03-16 11:58:16 [ main:4485 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3017aff3]
2017-03-16 11:58:16 [ main:4499 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4606 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4606 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3017aff3]
2017-03-16 11:58:16 [ main:4607 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3017aff3] after transaction
2017-03-16 11:58:16 [ main:4608 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4609 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4609 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@14844bb8] for Hibernate transaction
2017-03-16 11:58:16 [ main:4609 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14844bb8]
2017-03-16 11:58:16 [ main:4609 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4622 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4622 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14844bb8]
2017-03-16 11:58:16 [ main:4622 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@14844bb8] after transaction
2017-03-16 11:58:16 [ main:4622 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4629 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:16 [ main:4636 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.getRoleByUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4636 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@222decc2] for Hibernate transaction
2017-03-16 11:58:16 [ main:4636 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@222decc2]
2017-03-16 11:58:16 [ main:4636 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4636 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:58:16 [ main:4636 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@222decc2] for Hibernate transaction
2017-03-16 11:58:16 [ main:4637 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:16 [ main:4657 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:16 [ main:4658 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@222decc2] for Hibernate transaction
2017-03-16 11:58:16 [ main:4658 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:16 [ main:4676 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@222decc2] for Hibernate transaction
2017-03-16 11:58:16 [ main:4676 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:16 [ main:4677 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4677 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@222decc2]
2017-03-16 11:58:16 [ main:4681 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@222decc2] after transaction
2017-03-16 11:58:16 [ main:4681 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4687 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:16 [ main:4693 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4693 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5554ca01] for Hibernate transaction
2017-03-16 11:58:16 [ main:4693 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5554ca01]
2017-03-16 11:58:16 [ main:4693 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4697 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4697 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5554ca01]
2017-03-16 11:58:16 [ main:4698 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5554ca01] after transaction
2017-03-16 11:58:16 [ main:4698 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4698 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4698 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@39facda] for Hibernate transaction
2017-03-16 11:58:16 [ main:4698 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@39facda]
2017-03-16 11:58:16 [ main:4699 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4699 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4699 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@39facda]
2017-03-16 11:58:16 [ main:4700 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@39facda] after transaction
2017-03-16 11:58:16 [ main:4700 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4705 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:16 [ main:4711 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4711 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@40fcf6c1] for Hibernate transaction
2017-03-16 11:58:16 [ main:4711 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@40fcf6c1]
2017-03-16 11:58:16 [ main:4712 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4712 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4713 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@40fcf6c1]
2017-03-16 11:58:16 [ main:4713 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@40fcf6c1] after transaction
2017-03-16 11:58:16 [ main:4713 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4720 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:16 [ main:4725 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4725 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1ac83687] for Hibernate transaction
2017-03-16 11:58:16 [ main:4725 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1ac83687]
2017-03-16 11:58:16 [ main:4726 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4730 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4730 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1ac83687]
2017-03-16 11:58:16 [ main:4731 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1ac83687] after transaction
2017-03-16 11:58:16 [ main:4731 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4731 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4731 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6312702b] for Hibernate transaction
2017-03-16 11:58:16 [ main:4731 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6312702b]
2017-03-16 11:58:16 [ main:4732 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4736 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4736 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6312702b]
2017-03-16 11:58:16 [ main:4737 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6312702b] after transaction
2017-03-16 11:58:16 [ main:4737 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4742 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:16 [ main:4748 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4748 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5d03575d] for Hibernate transaction
2017-03-16 11:58:16 [ main:4748 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5d03575d]
2017-03-16 11:58:16 [ main:4749 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4750 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4750 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5d03575d]
2017-03-16 11:58:16 [ main:4751 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5d03575d] after transaction
2017-03-16 11:58:16 [ main:4751 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4756 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:16 [ main:4763 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4763 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@518a2f90] for Hibernate transaction
2017-03-16 11:58:16 [ main:4763 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@518a2f90]
2017-03-16 11:58:16 [ main:4763 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4765 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4765 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@518a2f90]
2017-03-16 11:58:16 [ main:4766 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@518a2f90] after transaction
2017-03-16 11:58:16 [ main:4766 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4771 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:16 [ main:4774 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUsers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4774 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@62aa2ac9] for Hibernate transaction
2017-03-16 11:58:16 [ main:4774 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@62aa2ac9]
2017-03-16 11:58:16 [ main:4774 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4779 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4779 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@62aa2ac9]
2017-03-16 11:58:16 [ main:4784 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@62aa2ac9] after transaction
2017-03-16 11:58:16 [ main:4784 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4784 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4784 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1db770] for Hibernate transaction
2017-03-16 11:58:16 [ main:4784 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1db770]
2017-03-16 11:58:16 [ main:4785 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4786 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4786 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1db770]
2017-03-16 11:58:16 [ main:4787 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1db770] after transaction
2017-03-16 11:58:16 [ main:4787 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4792 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:16 [ main:4795 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4795 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7f0dd76d] for Hibernate transaction
2017-03-16 11:58:16 [ main:4795 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f0dd76d]
2017-03-16 11:58:16 [ main:4796 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4796 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4797 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f0dd76d]
2017-03-16 11:58:16 [ main:4798 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f0dd76d] after transaction
2017-03-16 11:58:16 [ main:4798 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4812 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:58:16 [ main:4830 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4830 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@420a3a77] for Hibernate transaction
2017-03-16 11:58:16 [ main:4831 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@420a3a77]
2017-03-16 11:58:16 [ main:4831 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4838 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4838 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@420a3a77]
2017-03-16 11:58:16 [ main:4839 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@420a3a77] after transaction
2017-03-16 11:58:16 [ main:4839 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4839 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4839 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@fcfd47f] for Hibernate transaction
2017-03-16 11:58:16 [ main:4839 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@fcfd47f]
2017-03-16 11:58:16 [ main:4840 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4841 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4841 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@fcfd47f]
2017-03-16 11:58:16 [ main:4842 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@fcfd47f] after transaction
2017-03-16 11:58:16 [ main:4842 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4856 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:58:16 [ main:4862 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4862 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@41bb5523] for Hibernate transaction
2017-03-16 11:58:16 [ main:4862 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@41bb5523]
2017-03-16 11:58:16 [ main:4863 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4867 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4867 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@41bb5523]
2017-03-16 11:58:16 [ main:4868 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@41bb5523] after transaction
2017-03-16 11:58:16 [ main:4868 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4868 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4868 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@40c4f347] for Hibernate transaction
2017-03-16 11:58:16 [ main:4869 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@40c4f347]
2017-03-16 11:58:16 [ main:4869 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4874 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4874 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@40c4f347]
2017-03-16 11:58:16 [ main:4875 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@40c4f347] after transaction
2017-03-16 11:58:16 [ main:4875 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4875 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4875 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6a2dbeb8] for Hibernate transaction
2017-03-16 11:58:16 [ main:4875 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6a2dbeb8]
2017-03-16 11:58:16 [ main:4876 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4877 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4877 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6a2dbeb8]
2017-03-16 11:58:16 [ main:4878 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6a2dbeb8] after transaction
2017-03-16 11:58:16 [ main:4878 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4885 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:58:16 [ main:4890 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4890 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@25a7ae12] for Hibernate transaction
2017-03-16 11:58:16 [ main:4890 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@25a7ae12]
2017-03-16 11:58:16 [ main:4890 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4891 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4891 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@25a7ae12]
2017-03-16 11:58:16 [ main:4894 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@25a7ae12] after transaction
2017-03-16 11:58:16 [ main:4894 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4894 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4894 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@128d857d] for Hibernate transaction
2017-03-16 11:58:16 [ main:4894 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@128d857d]
2017-03-16 11:58:16 [ main:4895 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4896 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4896 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@128d857d]
2017-03-16 11:58:16 [ main:4897 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@128d857d] after transaction
2017-03-16 11:58:16 [ main:4897 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4897 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4897 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@533aaf33] for Hibernate transaction
2017-03-16 11:58:16 [ main:4897 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@533aaf33]
2017-03-16 11:58:16 [ main:4898 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4898 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4898 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@533aaf33]
2017-03-16 11:58:16 [ main:4900 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@533aaf33] after transaction
2017-03-16 11:58:16 [ main:4900 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4900 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4900 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@689b7a6a] for Hibernate transaction
2017-03-16 11:58:16 [ main:4901 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@689b7a6a]
2017-03-16 11:58:16 [ main:4901 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4902 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4902 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@689b7a6a]
2017-03-16 11:58:16 [ main:4903 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@689b7a6a] after transaction
2017-03-16 11:58:16 [ main:4903 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4910 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:58:16 [ main:4916 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4916 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@690f268] for Hibernate transaction
2017-03-16 11:58:16 [ main:4916 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@690f268]
2017-03-16 11:58:16 [ main:4916 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4918 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4918 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@690f268]
2017-03-16 11:58:16 [ main:4918 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@690f268] after transaction
2017-03-16 11:58:16 [ main:4918 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4919 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4919 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1f8a004b] for Hibernate transaction
2017-03-16 11:58:16 [ main:4919 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1f8a004b]
2017-03-16 11:58:16 [ main:4919 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4926 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4926 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1f8a004b]
2017-03-16 11:58:16 [ main:4926 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1f8a004b] after transaction
2017-03-16 11:58:16 [ main:4926 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4927 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4927 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4f09f8b4] for Hibernate transaction
2017-03-16 11:58:16 [ main:4927 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f09f8b4]
2017-03-16 11:58:16 [ main:4927 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4929 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4929 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f09f8b4]
2017-03-16 11:58:16 [ main:4929 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f09f8b4] after transaction
2017-03-16 11:58:16 [ main:4929 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4930 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4930 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5319fe97] for Hibernate transaction
2017-03-16 11:58:16 [ main:4930 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5319fe97]
2017-03-16 11:58:16 [ main:4930 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4931 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4932 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5319fe97]
2017-03-16 11:58:16 [ main:4932 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5319fe97] after transaction
2017-03-16 11:58:16 [ main:4932 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4932 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4932 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@10026518] for Hibernate transaction
2017-03-16 11:58:16 [ main:4932 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10026518]
2017-03-16 11:58:16 [ main:4933 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4934 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4934 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10026518]
2017-03-16 11:58:16 [ main:4935 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@10026518] after transaction
2017-03-16 11:58:16 [ main:4935 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4935 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4935 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@e06cc57] for Hibernate transaction
2017-03-16 11:58:16 [ main:4935 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@e06cc57]
2017-03-16 11:58:16 [ main:4936 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4937 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4937 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@e06cc57]
2017-03-16 11:58:16 [ main:4937 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@e06cc57] after transaction
2017-03-16 11:58:16 [ main:4937 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4937 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4938 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@54a385cf] for Hibernate transaction
2017-03-16 11:58:16 [ main:4938 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@54a385cf]
2017-03-16 11:58:16 [ main:4938 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4939 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4939 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@54a385cf]
2017-03-16 11:58:16 [ main:4940 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@54a385cf] after transaction
2017-03-16 11:58:16 [ main:4940 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4948 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:58:16 [ main:4953 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4953 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6638fbe5] for Hibernate transaction
2017-03-16 11:58:16 [ main:4953 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6638fbe5]
2017-03-16 11:58:16 [ main:4954 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4955 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4955 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6638fbe5]
2017-03-16 11:58:16 [ main:4956 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6638fbe5] after transaction
2017-03-16 11:58:16 [ main:4956 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4956 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4956 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6cc5bd66] for Hibernate transaction
2017-03-16 11:58:16 [ main:4956 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6cc5bd66]
2017-03-16 11:58:16 [ main:4957 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4958 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4958 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6cc5bd66]
2017-03-16 11:58:16 [ main:4960 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6cc5bd66] after transaction
2017-03-16 11:58:16 [ main:4960 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4968 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:58:16 [ main:4973 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4973 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@10417813] for Hibernate transaction
2017-03-16 11:58:16 [ main:4973 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10417813]
2017-03-16 11:58:16 [ main:4973 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4975 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4975 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10417813]
2017-03-16 11:58:16 [ main:4976 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@10417813] after transaction
2017-03-16 11:58:16 [ main:4976 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4976 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4976 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4435e0ec] for Hibernate transaction
2017-03-16 11:58:16 [ main:4976 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4435e0ec]
2017-03-16 11:58:16 [ main:4977 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4980 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:16 [ main:4980 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4435e0ec] for Hibernate transaction
2017-03-16 11:58:16 [ main:4980 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:16 [ main:4980 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4980 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4435e0ec]
2017-03-16 11:58:16 [ main:4981 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4435e0ec] after transaction
2017-03-16 11:58:16 [ main:4981 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4981 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:4981 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@501820b0] for Hibernate transaction
2017-03-16 11:58:16 [ main:4981 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@501820b0]
2017-03-16 11:58:16 [ main:4982 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:4982 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:4982 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@501820b0]
2017-03-16 11:58:16 [ main:4983 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@501820b0] after transaction
2017-03-16 11:58:16 [ main:4983 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:4991 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 11:58:16 [ main:5019 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5019 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@615c027c] for Hibernate transaction
2017-03-16 11:58:16 [ main:5019 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@615c027c]
2017-03-16 11:58:16 [ main:5020 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5020 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5020 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@615c027c]
2017-03-16 11:58:16 [ main:5021 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@615c027c] after transaction
2017-03-16 11:58:16 [ main:5022 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5049 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5066 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5067 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@69353b38] for Hibernate transaction
2017-03-16 11:58:16 [ main:5067 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@69353b38]
2017-03-16 11:58:16 [ main:5067 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5094 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:16 [ main:5094 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@69353b38] for Hibernate transaction
2017-03-16 11:58:16 [ main:5094 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:16 [ main:5112 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5112 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@69353b38]
2017-03-16 11:58:16 [ main:5113 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@69353b38] after transaction
2017-03-16 11:58:16 [ main:5113 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5113 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5113 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7f180826] for Hibernate transaction
2017-03-16 11:58:16 [ main:5113 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f180826]
2017-03-16 11:58:16 [ main:5114 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5115 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5115 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f180826]
2017-03-16 11:58:16 [ main:5115 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f180826] after transaction
2017-03-16 11:58:16 [ main:5115 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5115 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:16 [ main:5115 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5115 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@23036f09] for Hibernate transaction
2017-03-16 11:58:16 [ main:5116 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@23036f09]
2017-03-16 11:58:16 [ main:5117 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5122 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5122 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@23036f09]
2017-03-16 11:58:16 [ main:5123 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@23036f09] after transaction
2017-03-16 11:58:16 [ main:5123 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5137 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5145 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5145 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@645a5d1c] for Hibernate transaction
2017-03-16 11:58:16 [ main:5145 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@645a5d1c]
2017-03-16 11:58:16 [ main:5145 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5147 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5147 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@645a5d1c]
2017-03-16 11:58:16 [ main:5148 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@645a5d1c] after transaction
2017-03-16 11:58:16 [ main:5148 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5157 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5164 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5164 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@486090fa] for Hibernate transaction
2017-03-16 11:58:16 [ main:5164 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@486090fa]
2017-03-16 11:58:16 [ main:5165 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5169 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5170 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@486090fa]
2017-03-16 11:58:16 [ main:5170 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@486090fa] after transaction
2017-03-16 11:58:16 [ main:5170 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5178 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5185 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getParentId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5185 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3a754386] for Hibernate transaction
2017-03-16 11:58:16 [ main:5185 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3a754386]
2017-03-16 11:58:16 [ main:5185 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5186 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5186 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3a754386]
2017-03-16 11:58:16 [ main:5187 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3a754386] after transaction
2017-03-16 11:58:16 [ main:5187 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5195 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5202 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5203 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@43327a92] for Hibernate transaction
2017-03-16 11:58:16 [ main:5203 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@43327a92]
2017-03-16 11:58:16 [ main:5204 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5206 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5206 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@43327a92]
2017-03-16 11:58:16 [ main:5208 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@43327a92] after transaction
2017-03-16 11:58:16 [ main:5208 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5209 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5209 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3bd24471] for Hibernate transaction
2017-03-16 11:58:16 [ main:5209 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3bd24471]
2017-03-16 11:58:16 [ main:5209 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5210 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5210 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3bd24471]
2017-03-16 11:58:16 [ main:5211 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3bd24471] after transaction
2017-03-16 11:58:16 [ main:5211 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5220 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5227 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5227 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@11ae8ae] for Hibernate transaction
2017-03-16 11:58:16 [ main:5227 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@11ae8ae]
2017-03-16 11:58:16 [ main:5227 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5232 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5233 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@11ae8ae] for Hibernate transaction
2017-03-16 11:58:16 [ main:5233 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:16 [ main:5234 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5234 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@11ae8ae] for Hibernate transaction
2017-03-16 11:58:16 [ main:5234 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:16 [ main:5235 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5235 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@11ae8ae]
2017-03-16 11:58:16 [ main:5236 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@11ae8ae] after transaction
2017-03-16 11:58:16 [ main:5236 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5244 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5249 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.addNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5249 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@8f2e2d0] for Hibernate transaction
2017-03-16 11:58:16 [ main:5249 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@8f2e2d0]
2017-03-16 11:58:16 [ main:5250 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5250 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5250 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@8f2e2d0]
2017-03-16 11:58:16 [ main:5253 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@8f2e2d0] after transaction
2017-03-16 11:58:16 [ main:5253 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5253 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5253 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@65bbeecb] for Hibernate transaction
2017-03-16 11:58:16 [ main:5253 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@65bbeecb]
2017-03-16 11:58:16 [ main:5254 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5255 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5255 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@65bbeecb]
2017-03-16 11:58:16 [ main:5256 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@65bbeecb] after transaction
2017-03-16 11:58:16 [ main:5256 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5272 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5283 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5284 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3ee25427] for Hibernate transaction
2017-03-16 11:58:16 [ main:5284 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3ee25427]
2017-03-16 11:58:16 [ main:5284 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5290 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5290 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3ee25427]
2017-03-16 11:58:16 [ main:5293 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3ee25427] after transaction
2017-03-16 11:58:16 [ main:5293 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5310 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5317 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5317 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@131d15b6] for Hibernate transaction
2017-03-16 11:58:16 [ main:5317 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@131d15b6]
2017-03-16 11:58:16 [ main:5317 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5318 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5318 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@131d15b6]
2017-03-16 11:58:16 [ main:5319 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@131d15b6] after transaction
2017-03-16 11:58:16 [ main:5319 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5319 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5319 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@21a954f8] for Hibernate transaction
2017-03-16 11:58:16 [ main:5319 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@21a954f8]
2017-03-16 11:58:16 [ main:5319 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5322 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5322 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@21a954f8]
2017-03-16 11:58:16 [ main:5322 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@21a954f8] after transaction
2017-03-16 11:58:16 [ main:5322 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5323 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5323 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@23d469cf] for Hibernate transaction
2017-03-16 11:58:16 [ main:5323 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@23d469cf]
2017-03-16 11:58:16 [ main:5323 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5324 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5324 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@23d469cf]
2017-03-16 11:58:16 [ main:5325 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@23d469cf] after transaction
2017-03-16 11:58:16 [ main:5325 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5325 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5325 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@59367702] for Hibernate transaction
2017-03-16 11:58:16 [ main:5325 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@59367702]
2017-03-16 11:58:16 [ main:5326 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5327 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5327 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@59367702]
2017-03-16 11:58:16 [ main:5327 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@59367702] after transaction
2017-03-16 11:58:16 [ main:5327 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5335 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5342 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5342 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6a6c0d49] for Hibernate transaction
2017-03-16 11:58:16 [ main:5342 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6a6c0d49]
2017-03-16 11:58:16 [ main:5342 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5346 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5346 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6a6c0d49]
2017-03-16 11:58:16 [ main:5347 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6a6c0d49] after transaction
2017-03-16 11:58:16 [ main:5347 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5358 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5364 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5365 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@788e80b6] for Hibernate transaction
2017-03-16 11:58:16 [ main:5365 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@788e80b6]
2017-03-16 11:58:16 [ main:5365 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5367 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5367 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@788e80b6] for Hibernate transaction
2017-03-16 11:58:16 [ main:5367 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:16 [ main:5368 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5368 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@788e80b6]
2017-03-16 11:58:16 [ main:5369 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@788e80b6] after transaction
2017-03-16 11:58:16 [ main:5369 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5377 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5383 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5383 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@753e481] for Hibernate transaction
2017-03-16 11:58:16 [ main:5383 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@753e481]
2017-03-16 11:58:16 [ main:5383 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5383 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5383 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@753e481]
2017-03-16 11:58:16 [ main:5385 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@753e481] after transaction
2017-03-16 11:58:16 [ main:5385 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5385 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5385 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@22c11d39] for Hibernate transaction
2017-03-16 11:58:16 [ main:5385 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@22c11d39]
2017-03-16 11:58:16 [ main:5385 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5387 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5387 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@22c11d39]
2017-03-16 11:58:16 [ main:5388 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@22c11d39] after transaction
2017-03-16 11:58:16 [ main:5388 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5396 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5401 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5402 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4a52b05c] for Hibernate transaction
2017-03-16 11:58:16 [ main:5402 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4a52b05c]
2017-03-16 11:58:16 [ main:5402 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5403 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5403 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4a52b05c]
2017-03-16 11:58:16 [ main:5405 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4a52b05c] after transaction
2017-03-16 11:58:16 [ main:5405 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5405 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5405 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3d36315d] for Hibernate transaction
2017-03-16 11:58:16 [ main:5405 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3d36315d]
2017-03-16 11:58:16 [ main:5405 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5406 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5406 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3d36315d]
2017-03-16 11:58:16 [ main:5407 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3d36315d] after transaction
2017-03-16 11:58:16 [ main:5407 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5414 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5420 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5420 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1ca408c6] for Hibernate transaction
2017-03-16 11:58:16 [ main:5420 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1ca408c6]
2017-03-16 11:58:16 [ main:5421 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5427 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5427 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1ca408c6]
2017-03-16 11:58:16 [ main:5427 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1ca408c6] after transaction
2017-03-16 11:58:16 [ main:5427 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5435 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5441 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5441 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@36296502] for Hibernate transaction
2017-03-16 11:58:16 [ main:5441 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@36296502]
2017-03-16 11:58:16 [ main:5442 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5446 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5446 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@36296502]
2017-03-16 11:58:16 [ main:5446 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@36296502] after transaction
2017-03-16 11:58:16 [ main:5446 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:16 [ main:5460 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:16 [ main:5468 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeTypes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:16 [ main:5468 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3e6bcce8] for Hibernate transaction
2017-03-16 11:58:16 [ main:5468 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3e6bcce8]
2017-03-16 11:58:16 [ main:5468 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:16 [ main:5469 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:16 [ main:5469 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3e6bcce8]
2017-03-16 11:58:16 [ main:5469 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3e6bcce8] after transaction
2017-03-16 11:58:16 [ main:5469 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5482 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5491 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5491 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@370a44f7] for Hibernate transaction
2017-03-16 11:58:17 [ main:5491 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@370a44f7]
2017-03-16 11:58:17 [ main:5492 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5493 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5493 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@370a44f7] for Hibernate transaction
2017-03-16 11:58:17 [ main:5493 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5494 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5494 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@370a44f7] for Hibernate transaction
2017-03-16 11:58:17 [ main:5494 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5495 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5495 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@370a44f7] for Hibernate transaction
2017-03-16 11:58:17 [ main:5495 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5496 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5496 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@370a44f7]
2017-03-16 11:58:17 [ main:5496 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@370a44f7] after transaction
2017-03-16 11:58:17 [ main:5496 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5506 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5512 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5512 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@71da4e28] for Hibernate transaction
2017-03-16 11:58:17 [ main:5512 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@71da4e28]
2017-03-16 11:58:17 [ main:5513 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5514 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5514 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@71da4e28]
2017-03-16 11:58:17 [ main:5515 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@71da4e28] after transaction
2017-03-16 11:58:17 [ main:5515 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5522 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5529 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5529 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7c8323a3] for Hibernate transaction
2017-03-16 11:58:17 [ main:5529 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7c8323a3]
2017-03-16 11:58:17 [ main:5529 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5531 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5531 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7c8323a3] for Hibernate transaction
2017-03-16 11:58:17 [ main:5531 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5532 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5532 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7c8323a3] for Hibernate transaction
2017-03-16 11:58:17 [ main:5532 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5533 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5533 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7c8323a3] for Hibernate transaction
2017-03-16 11:58:17 [ main:5533 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5534 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5534 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7c8323a3] for Hibernate transaction
2017-03-16 11:58:17 [ main:5534 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5535 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5535 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7c8323a3] for Hibernate transaction
2017-03-16 11:58:17 [ main:5535 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5536 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:5536 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7c8323a3] for Hibernate transaction
2017-03-16 11:58:17 [ main:5536 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5537 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5538 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7c8323a3]
2017-03-16 11:58:17 [ main:5539 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7c8323a3] after transaction
2017-03-16 11:58:17 [ main:5539 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5554 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5565 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRoleMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5565 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6c1d201c] for Hibernate transaction
2017-03-16 11:58:17 [ main:5565 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6c1d201c]
2017-03-16 11:58:17 [ main:5566 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5569 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5569 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6c1d201c]
2017-03-16 11:58:17 [ main:5570 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6c1d201c] after transaction
2017-03-16 11:58:17 [ main:5570 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5570 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5570 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2c6d170e] for Hibernate transaction
2017-03-16 11:58:17 [ main:5570 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2c6d170e]
2017-03-16 11:58:17 [ main:5570 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5571 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5571 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2c6d170e]
2017-03-16 11:58:17 [ main:5572 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2c6d170e] after transaction
2017-03-16 11:58:17 [ main:5572 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5590 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5594 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.addRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5594 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@517a475e] for Hibernate transaction
2017-03-16 11:58:17 [ main:5594 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@517a475e]
2017-03-16 11:58:17 [ main:5595 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5595 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5595 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@517a475e]
2017-03-16 11:58:17 [ main:5596 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@517a475e] after transaction
2017-03-16 11:58:17 [ main:5596 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5596 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5596 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4e58ea0b] for Hibernate transaction
2017-03-16 11:58:17 [ main:5596 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4e58ea0b]
2017-03-16 11:58:17 [ main:5597 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5598 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5598 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4e58ea0b]
2017-03-16 11:58:17 [ main:5598 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4e58ea0b] after transaction
2017-03-16 11:58:17 [ main:5598 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5608 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5614 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5614 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5d92135] for Hibernate transaction
2017-03-16 11:58:17 [ main:5614 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5d92135]
2017-03-16 11:58:17 [ main:5614 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5617 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5618 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5d92135]
2017-03-16 11:58:17 [ main:5618 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5d92135] after transaction
2017-03-16 11:58:17 [ main:5618 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5629 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5636 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5637 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5e7385ab] for Hibernate transaction
2017-03-16 11:58:17 [ main:5637 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5e7385ab]
2017-03-16 11:58:17 [ main:5638 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5638 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5638 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5e7385ab]
2017-03-16 11:58:17 [ main:5639 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5e7385ab] after transaction
2017-03-16 11:58:17 [ main:5639 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5639 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5640 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@14c45fb0] for Hibernate transaction
2017-03-16 11:58:17 [ main:5640 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14c45fb0]
2017-03-16 11:58:17 [ main:5640 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5641 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5641 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14c45fb0]
2017-03-16 11:58:17 [ main:5641 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@14c45fb0] after transaction
2017-03-16 11:58:17 [ main:5641 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5652 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5657 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5658 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@505dafbb] for Hibernate transaction
2017-03-16 11:58:17 [ main:5658 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@505dafbb]
2017-03-16 11:58:17 [ main:5658 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5662 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5662 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@505dafbb]
2017-03-16 11:58:17 [ main:5663 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@505dafbb] after transaction
2017-03-16 11:58:17 [ main:5663 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5674 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5680 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5680 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1146b156] for Hibernate transaction
2017-03-16 11:58:17 [ main:5680 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1146b156]
2017-03-16 11:58:17 [ main:5681 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5684 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5684 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1146b156] for Hibernate transaction
2017-03-16 11:58:17 [ main:5684 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5686 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5686 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1146b156] for Hibernate transaction
2017-03-16 11:58:17 [ main:5686 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5688 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5688 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1146b156]
2017-03-16 11:58:17 [ main:5688 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1146b156] after transaction
2017-03-16 11:58:17 [ main:5688 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5700 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5707 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateParent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5708 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1bc31f72] for Hibernate transaction
2017-03-16 11:58:17 [ main:5708 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1bc31f72]
2017-03-16 11:58:17 [ main:5709 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5712 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5712 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1bc31f72]
2017-03-16 11:58:17 [ main:5713 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1bc31f72] after transaction
2017-03-16 11:58:17 [ main:5713 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5714 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5714 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@702ce717] for Hibernate transaction
2017-03-16 11:58:17 [ main:5714 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@702ce717]
2017-03-16 11:58:17 [ main:5714 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5716 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5716 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@702ce717]
2017-03-16 11:58:17 [ main:5717 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@702ce717] after transaction
2017-03-16 11:58:17 [ main:5717 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5732 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5739 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5739 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2ed7c608] for Hibernate transaction
2017-03-16 11:58:17 [ main:5739 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2ed7c608]
2017-03-16 11:58:17 [ main:5739 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5740 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5740 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2ed7c608] for Hibernate transaction
2017-03-16 11:58:17 [ main:5741 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5743 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5743 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2ed7c608] for Hibernate transaction
2017-03-16 11:58:17 [ main:5743 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5744 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5744 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2ed7c608] for Hibernate transaction
2017-03-16 11:58:17 [ main:5744 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5745 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5745 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2ed7c608]
2017-03-16 11:58:17 [ main:5746 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2ed7c608] after transaction
2017-03-16 11:58:17 [ main:5746 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5757 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5763 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5763 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7b8538d7] for Hibernate transaction
2017-03-16 11:58:17 [ main:5763 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7b8538d7]
2017-03-16 11:58:17 [ main:5764 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5766 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5766 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7b8538d7]
2017-03-16 11:58:17 [ main:5767 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7b8538d7] after transaction
2017-03-16 11:58:17 [ main:5767 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5767 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5767 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@343e4e76] for Hibernate transaction
2017-03-16 11:58:17 [ main:5767 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@343e4e76]
2017-03-16 11:58:17 [ main:5767 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5768 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5768 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@343e4e76]
2017-03-16 11:58:17 [ main:5769 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@343e4e76] after transaction
2017-03-16 11:58:17 [ main:5769 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5779 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5785 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.deleteRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5785 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@20d9a99a] for Hibernate transaction
2017-03-16 11:58:17 [ main:5785 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@20d9a99a]
2017-03-16 11:58:17 [ main:5785 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5788 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:5788 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@20d9a99a] for Hibernate transaction
2017-03-16 11:58:17 [ main:5788 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5790 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:17 [ main:5791 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@20d9a99a] for Hibernate transaction
2017-03-16 11:58:17 [ main:5791 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5791 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5791 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@20d9a99a]
2017-03-16 11:58:17 [ main:5792 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@20d9a99a] after transaction
2017-03-16 11:58:17 [ main:5792 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5792 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5792 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@47fbb6b9] for Hibernate transaction
2017-03-16 11:58:17 [ main:5792 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@47fbb6b9]
2017-03-16 11:58:17 [ main:5793 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5793 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5793 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@47fbb6b9]
2017-03-16 11:58:17 [ main:5794 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@47fbb6b9] after transaction
2017-03-16 11:58:17 [ main:5794 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5794 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 11:58:17 [ main:5794 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5794 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4133b793] for Hibernate transaction
2017-03-16 11:58:17 [ main:5794 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4133b793]
2017-03-16 11:58:17 [ main:5794 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5795 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5795 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4133b793]
2017-03-16 11:58:17 [ main:5796 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4133b793] after transaction
2017-03-16 11:58:17 [ main:5796 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5796 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:5796 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5796 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@665d1a72] for Hibernate transaction
2017-03-16 11:58:17 [ main:5796 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@665d1a72]
2017-03-16 11:58:17 [ main:5796 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5798 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5798 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@665d1a72]
2017-03-16 11:58:17 [ main:5799 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@665d1a72] after transaction
2017-03-16 11:58:17 [ main:5799 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5809 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5814 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5814 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@22981654] for Hibernate transaction
2017-03-16 11:58:17 [ main:5815 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@22981654]
2017-03-16 11:58:17 [ main:5815 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5816 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5816 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@22981654]
2017-03-16 11:58:17 [ main:5816 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@22981654] after transaction
2017-03-16 11:58:17 [ main:5816 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5817 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5817 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@476018c4] for Hibernate transaction
2017-03-16 11:58:17 [ main:5817 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@476018c4]
2017-03-16 11:58:17 [ main:5817 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5818 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5818 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@476018c4]
2017-03-16 11:58:17 [ main:5818 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@476018c4] after transaction
2017-03-16 11:58:17 [ main:5818 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5828 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5833 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5833 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@529b9757] for Hibernate transaction
2017-03-16 11:58:17 [ main:5833 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@529b9757]
2017-03-16 11:58:17 [ main:5834 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5835 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5835 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@529b9757] for Hibernate transaction
2017-03-16 11:58:17 [ main:5835 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5836 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5836 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@529b9757] for Hibernate transaction
2017-03-16 11:58:17 [ main:5836 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5837 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5837 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@529b9757] for Hibernate transaction
2017-03-16 11:58:17 [ main:5837 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5837 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5837 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@529b9757] for Hibernate transaction
2017-03-16 11:58:17 [ main:5837 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5838 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5838 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@529b9757]
2017-03-16 11:58:17 [ main:5839 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@529b9757] after transaction
2017-03-16 11:58:17 [ main:5839 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5849 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5856 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5856 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@78ed841c] for Hibernate transaction
2017-03-16 11:58:17 [ main:5856 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@78ed841c]
2017-03-16 11:58:17 [ main:5857 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5858 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5858 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@78ed841c] for Hibernate transaction
2017-03-16 11:58:17 [ main:5858 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5859 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5859 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@78ed841c] for Hibernate transaction
2017-03-16 11:58:17 [ main:5859 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5860 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5860 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@78ed841c] for Hibernate transaction
2017-03-16 11:58:17 [ main:5860 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5860 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5860 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@78ed841c] for Hibernate transaction
2017-03-16 11:58:17 [ main:5860 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5861 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5861 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@78ed841c] for Hibernate transaction
2017-03-16 11:58:17 [ main:5861 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:5862 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5862 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@78ed841c]
2017-03-16 11:58:17 [ main:5863 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@78ed841c] after transaction
2017-03-16 11:58:17 [ main:5863 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5872 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:5878 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5878 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2c139787] for Hibernate transaction
2017-03-16 11:58:17 [ main:5878 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2c139787]
2017-03-16 11:58:17 [ main:5878 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5879 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5879 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2c139787]
2017-03-16 11:58:17 [ main:5880 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2c139787] after transaction
2017-03-16 11:58:17 [ main:5880 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5897 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:5907 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5907 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@35011e72] for Hibernate transaction
2017-03-16 11:58:17 [ main:5907 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@35011e72]
2017-03-16 11:58:17 [ main:5908 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5910 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5910 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@35011e72]
2017-03-16 11:58:17 [ main:5910 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@35011e72] after transaction
2017-03-16 11:58:17 [ main:5910 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5910 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5910 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6f64227b] for Hibernate transaction
2017-03-16 11:58:17 [ main:5911 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6f64227b]
2017-03-16 11:58:17 [ main:5911 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5911 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5912 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6f64227b]
2017-03-16 11:58:17 [ main:5912 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6f64227b] after transaction
2017-03-16 11:58:17 [ main:5912 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5921 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:5926 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.addRoleNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5926 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1a5c786a] for Hibernate transaction
2017-03-16 11:58:17 [ main:5926 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1a5c786a]
2017-03-16 11:58:17 [ main:5927 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5927 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5927 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1a5c786a]
2017-03-16 11:58:17 [ main:5929 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1a5c786a] after transaction
2017-03-16 11:58:17 [ main:5929 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5934 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:5941 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5941 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2a5c43ab] for Hibernate transaction
2017-03-16 11:58:17 [ main:5941 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2a5c43ab]
2017-03-16 11:58:17 [ main:5942 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5944 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5944 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2a5c43ab]
2017-03-16 11:58:17 [ main:5946 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2a5c43ab] after transaction
2017-03-16 11:58:17 [ main:5946 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5959 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:5966 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5966 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@ef99e17] for Hibernate transaction
2017-03-16 11:58:17 [ main:5966 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@ef99e17]
2017-03-16 11:58:17 [ main:5967 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5969 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5969 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@ef99e17]
2017-03-16 11:58:17 [ main:5970 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@ef99e17] after transaction
2017-03-16 11:58:17 [ main:5971 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5971 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5971 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2b7e4dce] for Hibernate transaction
2017-03-16 11:58:17 [ main:5971 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2b7e4dce]
2017-03-16 11:58:17 [ main:5972 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:5973 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:5973 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2b7e4dce]
2017-03-16 11:58:17 [ main:5974 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2b7e4dce] after transaction
2017-03-16 11:58:17 [ main:5974 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:5981 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:5990 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:5990 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2f0df46f] for Hibernate transaction
2017-03-16 11:58:17 [ main:5990 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f0df46f]
2017-03-16 11:58:17 [ main:5997 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:6000 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:6000 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f0df46f]
2017-03-16 11:58:17 [ main:6000 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f0df46f] after transaction
2017-03-16 11:58:17 [ main:6001 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:6006 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:6013 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:6013 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@62b1da82] for Hibernate transaction
2017-03-16 11:58:17 [ main:6013 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@62b1da82]
2017-03-16 11:58:17 [ main:6013 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:6014 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:6014 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@62b1da82]
2017-03-16 11:58:17 [ main:6015 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@62b1da82] after transaction
2017-03-16 11:58:17 [ main:6015 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:6021 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:6027 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:6027 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@72e99ba7] for Hibernate transaction
2017-03-16 11:58:17 [ main:6027 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@72e99ba7]
2017-03-16 11:58:17 [ main:6027 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:6028 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:6028 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@72e99ba7]
2017-03-16 11:58:17 [ main:6029 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@72e99ba7] after transaction
2017-03-16 11:58:17 [ main:6029 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:6029 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:6029 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6566c12f] for Hibernate transaction
2017-03-16 11:58:17 [ main:6029 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6566c12f]
2017-03-16 11:58:17 [ main:6029 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:6030 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:6030 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6566c12f]
2017-03-16 11:58:17 [ main:6030 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6566c12f] after transaction
2017-03-16 11:58:17 [ main:6030 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:6037 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:6043 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:6043 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@12234d3a] for Hibernate transaction
2017-03-16 11:58:17 [ main:6043 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@12234d3a]
2017-03-16 11:58:17 [ main:6044 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:6044 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:6045 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@12234d3a] for Hibernate transaction
2017-03-16 11:58:17 [ main:6045 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:6046 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@12234d3a] for Hibernate transaction
2017-03-16 11:58:17 [ main:6046 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:6046 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@12234d3a] for Hibernate transaction
2017-03-16 11:58:17 [ main:6046 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:6047 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:6048 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@12234d3a] for Hibernate transaction
2017-03-16 11:58:17 [ main:6048 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:6050 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@12234d3a] for Hibernate transaction
2017-03-16 11:58:17 [ main:6050 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:6050 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@12234d3a] for Hibernate transaction
2017-03-16 11:58:17 [ main:6050 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:6051 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@12234d3a] for Hibernate transaction
2017-03-16 11:58:17 [ main:6051 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:6051 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:6051 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@12234d3a]
2017-03-16 11:58:17 [ main:6052 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@12234d3a] after transaction
2017-03-16 11:58:17 [ main:6052 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:6057 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 11:58:17 [ main:6061 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 11:58:17 [ main:6061 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:6062 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@72cca1] for Hibernate transaction
2017-03-16 11:58:17 [ main:6062 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@72cca1]
2017-03-16 11:58:17 [ main:6062 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:6063 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:6063 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@72cca1]
2017-03-16 11:58:17 [ main:6063 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@72cca1] after transaction
2017-03-16 11:58:17 [ main:6063 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 11:58:17 [ main:6063 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 11:58:17 [ main:6063 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3d01ab1] for Hibernate transaction
2017-03-16 11:58:17 [ main:6063 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3d01ab1]
2017-03-16 11:58:17 [ main:6064 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 11:58:17 [ main:6064 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 11:58:17 [ main:6066 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d01ab1] for Hibernate transaction
2017-03-16 11:58:17 [ main:6066 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:6067 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d01ab1] for Hibernate transaction
2017-03-16 11:58:17 [ main:6067 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:6067 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d01ab1] for Hibernate transaction
2017-03-16 11:58:17 [ main:6067 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 11:58:17 [ main:6068 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 11:58:17 [ main:6068 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3d01ab1]
2017-03-16 11:58:17 [ main:6069 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3d01ab1] after transaction
2017-03-16 11:58:17 [ main:6069 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:02 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]; startup date [Thu Mar 16 14:56:02 CST 2017]; root of context hierarchy
2017-03-16 14:56:02 [ main:47 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 14:56:02 [ main:58 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 14:56:02 [ main:102 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 14:56:02 [ main:103 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 14:56:18 [ main:15840 ] - [ DEBUG ] Loading bean definitions
2017-03-16 14:56:18 [ main:15859 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 14:56:18 [ main:15883 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 14:56:18 [ main:15883 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]: org.springframework.beans.factory.support.DefaultListableBeanFactory@42845bde
2017-03-16 14:56:18 [ main:15883 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7: display name [org.springframework.context.support.ClassPathXmlApplicationContext@79e35c7]; startup date [Thu Mar 16 14:56:02 CST 2017]; root of context hierarchy
2017-03-16 14:56:18 [ main:15899 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 14:56:18 [ main:15900 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 14:56:18 [ main:15913 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 14:56:18 [ main:15922 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 14:56:18 [ main:15924 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6ef3b5d9]
2017-03-16 14:56:18 [ main:15925 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@70f8b1fc]
2017-03-16 14:56:18 [ main:15926 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@42845bde: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 14:56:18 [ main:15926 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 14:56:18 [ main:15926 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 14:56:18 [ main:15930 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 14:56:18 [ main:15941 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:18 [ main:15941 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:18 [ main:15942 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 14:56:18 [ main:15945 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 14:56:18 [ main:15945 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 14:56:18 [ main:15946 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 14:56:18 [ main:15949 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 14:56:18 [ main:15949 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:18 [ main:15952 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 14:56:18 [ main:15952 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 14:56:18 [ main:15952 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 14:56:18 [ main:15969 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 14:56:18 [ main:15981 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 14:56:18 [ main:15982 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 14:56:18 [ main:16385 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 14:56:19 [ main:16702 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:19 [ main:16704 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 14:56:19 [ main:16704 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 14:56:19 [ main:16705 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 14:56:19 [ main:16705 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 14:56:19 [ main:16707 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 14:56:19 [ main:16708 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:19 [ main:16713 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:19 [ main:16719 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16729 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 14:56:19 [ main:16736 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@53484e43]
2017-03-16 14:56:19 [ main:16789 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 14:56:19 [ main:16789 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 14:56:19 [ main:16789 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 14:56:19 [ main:16793 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 14:56:19 [ main:16793 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 14:56:19 [ main:16797 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 14:56:19 [ main:16800 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 14:56:19 [ main:16801 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 14:56:19 [ main:16805 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@cd35cb2] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 14:56:19 [ main:16806 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:19 [ main:16807 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 14:56:19 [ main:16807 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 14:56:19 [ main:16807 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 14:56:19 [ main:16807 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 14:56:19 [ main:16809 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 14:56:19 [ main:16809 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16811 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 14:56:19 [ main:16812 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 14:56:19 [ main:16813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 14:56:19 [ main:16830 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 14:56:19 [ main:16830 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 14:56:19 [ main:16830 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 14:56:19 [ main:16830 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 14:56:19 [ main:16833 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 14:56:19 [ main:16833 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:19 [ main:16833 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16833 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 14:56:19 [ main:16833 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@2649f120]
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 14:56:19 [ main:16835 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16836 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16837 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 14:56:19 [ main:16838 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 14:56:19 [ main:16839 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 14:56:19 [ main:16852 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 14:56:19 [ main:16852 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 14:56:19 [ main:16852 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 14:56:19 [ main:16852 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 14:56:19 [ main:16857 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 14:56:19 [ main:16857 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:19 [ main:16857 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16857 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 14:56:19 [ main:16857 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@a59cf7f]
2017-03-16 14:56:19 [ main:16858 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 14:56:19 [ main:16858 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16858 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16859 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16860 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16861 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 14:56:19 [ main:16862 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 14:56:19 [ main:16863 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 14:56:19 [ main:16876 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 14:56:19 [ main:16876 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:16876 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 14:56:19 [ main:16876 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 14:56:19 [ main:16878 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 14:56:19 [ main:16878 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:19 [ main:16878 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16878 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 14:56:19 [ main:16878 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@3cd4d8ac]
2017-03-16 14:56:19 [ main:16879 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16879 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 14:56:19 [ main:16879 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 14:56:19 [ main:16891 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 14:56:19 [ main:16891 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 14:56:19 [ main:16891 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 14:56:19 [ main:16891 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 14:56:19 [ main:16891 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16893 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 14:56:19 [ main:16894 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 14:56:19 [ main:16895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 14:56:19 [ main:16895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 14:56:19 [ main:16895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 14:56:19 [ main:16895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 14:56:19 [ main:16895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 14:56:19 [ main:16895 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 14:56:19 [ main:16906 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 14:56:19 [ main:16906 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:19 [ main:16906 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 14:56:19 [ main:16906 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 14:56:19 [ main:16909 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 14:56:19 [ main:16909 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:19 [ main:16909 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16910 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 14:56:19 [ main:16910 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@f88bafd]
2017-03-16 14:56:19 [ main:16910 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16911 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16912 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16913 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 14:56:19 [ main:16914 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 14:56:19 [ main:16915 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 14:56:19 [ main:16915 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 14:56:19 [ main:16915 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16915 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 14:56:19 [ main:16915 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 14:56:19 [ main:16915 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 14:56:19 [ main:16915 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 14:56:19 [ main:16915 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 14:56:19 [ main:16925 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 14:56:19 [ main:16925 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 14:56:19 [ main:16925 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 14:56:19 [ main:16925 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 14:56:19 [ main:16925 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 14:56:19 [ main:16925 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 14:56:19 [ main:16925 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:16982 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17002 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@33b51673] for Hibernate transaction
2017-03-16 14:56:19 [ main:17003 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@33b51673]
2017-03-16 14:56:19 [ main:17016 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17170 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17170 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@33b51673]
2017-03-16 14:56:19 [ main:17171 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@33b51673] after transaction
2017-03-16 14:56:19 [ main:17171 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17172 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17172 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1b7231b9] for Hibernate transaction
2017-03-16 14:56:19 [ main:17172 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1b7231b9]
2017-03-16 14:56:19 [ main:17173 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17186 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17186 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1b7231b9]
2017-03-16 14:56:19 [ main:17186 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1b7231b9] after transaction
2017-03-16 14:56:19 [ main:17186 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17192 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:17199 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.getRoleByUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17199 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@13a1be63] for Hibernate transaction
2017-03-16 14:56:19 [ main:17199 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@13a1be63]
2017-03-16 14:56:19 [ main:17200 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17200 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 14:56:19 [ main:17200 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@13a1be63] for Hibernate transaction
2017-03-16 14:56:19 [ main:17200 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:19 [ main:17221 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:19 [ main:17221 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@13a1be63] for Hibernate transaction
2017-03-16 14:56:19 [ main:17221 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:19 [ main:17240 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@13a1be63] for Hibernate transaction
2017-03-16 14:56:19 [ main:17240 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:19 [ main:17241 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17241 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@13a1be63]
2017-03-16 14:56:19 [ main:17244 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@13a1be63] after transaction
2017-03-16 14:56:19 [ main:17245 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17249 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:17255 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17255 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@680d1e11] for Hibernate transaction
2017-03-16 14:56:19 [ main:17255 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@680d1e11]
2017-03-16 14:56:19 [ main:17256 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17260 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17260 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@680d1e11]
2017-03-16 14:56:19 [ main:17260 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@680d1e11] after transaction
2017-03-16 14:56:19 [ main:17260 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17260 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17260 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@12f8ee62] for Hibernate transaction
2017-03-16 14:56:19 [ main:17260 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@12f8ee62]
2017-03-16 14:56:19 [ main:17261 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17262 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17262 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@12f8ee62]
2017-03-16 14:56:19 [ main:17263 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@12f8ee62] after transaction
2017-03-16 14:56:19 [ main:17263 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17268 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:17274 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17274 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1c6cdbec] for Hibernate transaction
2017-03-16 14:56:19 [ main:17274 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1c6cdbec]
2017-03-16 14:56:19 [ main:17275 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17276 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17276 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1c6cdbec]
2017-03-16 14:56:19 [ main:17276 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1c6cdbec] after transaction
2017-03-16 14:56:19 [ main:17276 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17283 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:17288 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17288 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4f8249dd] for Hibernate transaction
2017-03-16 14:56:19 [ main:17288 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f8249dd]
2017-03-16 14:56:19 [ main:17289 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17293 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17293 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f8249dd]
2017-03-16 14:56:19 [ main:17293 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f8249dd] after transaction
2017-03-16 14:56:19 [ main:17293 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17294 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17294 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7df577bf] for Hibernate transaction
2017-03-16 14:56:19 [ main:17294 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7df577bf]
2017-03-16 14:56:19 [ main:17294 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17298 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17298 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7df577bf]
2017-03-16 14:56:19 [ main:17299 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7df577bf] after transaction
2017-03-16 14:56:19 [ main:17299 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17304 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:17310 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17310 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@ab8a136] for Hibernate transaction
2017-03-16 14:56:19 [ main:17310 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@ab8a136]
2017-03-16 14:56:19 [ main:17310 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17311 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17311 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@ab8a136]
2017-03-16 14:56:19 [ main:17312 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@ab8a136] after transaction
2017-03-16 14:56:19 [ main:17312 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17317 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:17323 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17323 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@65f2006b] for Hibernate transaction
2017-03-16 14:56:19 [ main:17323 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@65f2006b]
2017-03-16 14:56:19 [ main:17323 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17324 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17325 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@65f2006b]
2017-03-16 14:56:19 [ main:17325 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@65f2006b] after transaction
2017-03-16 14:56:19 [ main:17325 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17330 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:17333 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUsers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17333 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6f1f6551] for Hibernate transaction
2017-03-16 14:56:19 [ main:17333 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6f1f6551]
2017-03-16 14:56:19 [ main:17334 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17338 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17338 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6f1f6551]
2017-03-16 14:56:19 [ main:17343 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6f1f6551] after transaction
2017-03-16 14:56:19 [ main:17343 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17343 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17343 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@60331d8b] for Hibernate transaction
2017-03-16 14:56:19 [ main:17343 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@60331d8b]
2017-03-16 14:56:19 [ main:17343 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17344 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17344 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@60331d8b]
2017-03-16 14:56:19 [ main:17346 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@60331d8b] after transaction
2017-03-16 14:56:19 [ main:17346 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17350 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:17353 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17353 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@35103892] for Hibernate transaction
2017-03-16 14:56:19 [ main:17353 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@35103892]
2017-03-16 14:56:19 [ main:17353 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17354 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17354 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@35103892]
2017-03-16 14:56:19 [ main:17355 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@35103892] after transaction
2017-03-16 14:56:19 [ main:17355 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17365 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 14:56:19 [ main:17382 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17382 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@557c3bce] for Hibernate transaction
2017-03-16 14:56:19 [ main:17382 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@557c3bce]
2017-03-16 14:56:19 [ main:17383 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17389 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17389 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@557c3bce]
2017-03-16 14:56:19 [ main:17390 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@557c3bce] after transaction
2017-03-16 14:56:19 [ main:17391 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17391 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17391 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@49043ad5] for Hibernate transaction
2017-03-16 14:56:19 [ main:17391 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@49043ad5]
2017-03-16 14:56:19 [ main:17392 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17395 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17395 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@49043ad5]
2017-03-16 14:56:19 [ main:17396 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@49043ad5] after transaction
2017-03-16 14:56:19 [ main:17396 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17414 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 14:56:19 [ main:17420 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17420 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5e0fe231] for Hibernate transaction
2017-03-16 14:56:19 [ main:17420 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5e0fe231]
2017-03-16 14:56:19 [ main:17421 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17425 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17425 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5e0fe231]
2017-03-16 14:56:19 [ main:17426 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5e0fe231] after transaction
2017-03-16 14:56:19 [ main:17426 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17426 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17426 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@528db148] for Hibernate transaction
2017-03-16 14:56:19 [ main:17426 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@528db148]
2017-03-16 14:56:19 [ main:17427 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17432 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17432 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@528db148]
2017-03-16 14:56:19 [ main:17432 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@528db148] after transaction
2017-03-16 14:56:19 [ main:17432 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17433 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17433 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4f9bc78] for Hibernate transaction
2017-03-16 14:56:19 [ main:17433 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f9bc78]
2017-03-16 14:56:19 [ main:17433 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17435 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17435 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f9bc78]
2017-03-16 14:56:19 [ main:17435 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f9bc78] after transaction
2017-03-16 14:56:19 [ main:17435 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17443 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 14:56:19 [ main:17447 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17447 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1c2859eb] for Hibernate transaction
2017-03-16 14:56:19 [ main:17447 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1c2859eb]
2017-03-16 14:56:19 [ main:17447 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17450 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17450 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1c2859eb]
2017-03-16 14:56:19 [ main:17452 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1c2859eb] after transaction
2017-03-16 14:56:19 [ main:17452 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17452 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17452 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@31c467f5] for Hibernate transaction
2017-03-16 14:56:19 [ main:17452 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@31c467f5]
2017-03-16 14:56:19 [ main:17453 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17454 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17454 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@31c467f5]
2017-03-16 14:56:19 [ main:17454 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@31c467f5] after transaction
2017-03-16 14:56:19 [ main:17454 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17455 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17455 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@689b7a6a] for Hibernate transaction
2017-03-16 14:56:19 [ main:17455 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@689b7a6a]
2017-03-16 14:56:19 [ main:17455 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17455 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17456 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@689b7a6a]
2017-03-16 14:56:19 [ main:17457 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@689b7a6a] after transaction
2017-03-16 14:56:19 [ main:17458 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17458 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17458 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6613e9fc] for Hibernate transaction
2017-03-16 14:56:19 [ main:17458 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6613e9fc]
2017-03-16 14:56:19 [ main:17458 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17459 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17459 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6613e9fc]
2017-03-16 14:56:19 [ main:17460 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6613e9fc] after transaction
2017-03-16 14:56:19 [ main:17460 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17467 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 14:56:19 [ main:17474 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17474 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1d194c1a] for Hibernate transaction
2017-03-16 14:56:19 [ main:17474 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1d194c1a]
2017-03-16 14:56:19 [ main:17475 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17476 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17476 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1d194c1a]
2017-03-16 14:56:19 [ main:17477 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1d194c1a] after transaction
2017-03-16 14:56:19 [ main:17477 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17477 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17478 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6d8cafe1] for Hibernate transaction
2017-03-16 14:56:19 [ main:17478 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6d8cafe1]
2017-03-16 14:56:19 [ main:17478 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17484 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17484 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6d8cafe1]
2017-03-16 14:56:19 [ main:17484 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6d8cafe1] after transaction
2017-03-16 14:56:19 [ main:17485 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17485 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17485 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4f999620] for Hibernate transaction
2017-03-16 14:56:19 [ main:17485 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f999620]
2017-03-16 14:56:19 [ main:17485 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17487 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17487 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f999620]
2017-03-16 14:56:19 [ main:17487 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f999620] after transaction
2017-03-16 14:56:19 [ main:17487 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17487 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17488 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@10026518] for Hibernate transaction
2017-03-16 14:56:19 [ main:17488 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10026518]
2017-03-16 14:56:19 [ main:17488 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17489 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17489 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10026518]
2017-03-16 14:56:19 [ main:17490 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@10026518] after transaction
2017-03-16 14:56:19 [ main:17490 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17490 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17490 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@60516af2] for Hibernate transaction
2017-03-16 14:56:19 [ main:17490 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@60516af2]
2017-03-16 14:56:19 [ main:17490 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17492 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17492 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@60516af2]
2017-03-16 14:56:19 [ main:17492 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@60516af2] after transaction
2017-03-16 14:56:19 [ main:17492 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17492 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17492 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@237098e7] for Hibernate transaction
2017-03-16 14:56:19 [ main:17493 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@237098e7]
2017-03-16 14:56:19 [ main:17493 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17494 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17494 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@237098e7]
2017-03-16 14:56:19 [ main:17494 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@237098e7] after transaction
2017-03-16 14:56:19 [ main:17494 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17494 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17494 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@19380fc5] for Hibernate transaction
2017-03-16 14:56:19 [ main:17495 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@19380fc5]
2017-03-16 14:56:19 [ main:17495 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17496 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17496 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@19380fc5]
2017-03-16 14:56:19 [ main:17497 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@19380fc5] after transaction
2017-03-16 14:56:19 [ main:17497 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17504 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 14:56:19 [ main:17510 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17511 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@74a32d61] for Hibernate transaction
2017-03-16 14:56:19 [ main:17511 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@74a32d61]
2017-03-16 14:56:19 [ main:17511 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17512 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17512 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@74a32d61]
2017-03-16 14:56:19 [ main:17513 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@74a32d61] after transaction
2017-03-16 14:56:19 [ main:17513 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17513 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17513 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@59effeb7] for Hibernate transaction
2017-03-16 14:56:19 [ main:17513 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@59effeb7]
2017-03-16 14:56:19 [ main:17514 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17515 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17515 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@59effeb7]
2017-03-16 14:56:19 [ main:17517 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@59effeb7] after transaction
2017-03-16 14:56:19 [ main:17517 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17524 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 14:56:19 [ main:17529 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17529 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4435e0ec] for Hibernate transaction
2017-03-16 14:56:19 [ main:17529 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4435e0ec]
2017-03-16 14:56:19 [ main:17529 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17530 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17530 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4435e0ec]
2017-03-16 14:56:19 [ main:17531 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4435e0ec] after transaction
2017-03-16 14:56:19 [ main:17531 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17532 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17532 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3bc7b6fe] for Hibernate transaction
2017-03-16 14:56:19 [ main:17532 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3bc7b6fe]
2017-03-16 14:56:19 [ main:17532 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17535 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:19 [ main:17535 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3bc7b6fe] for Hibernate transaction
2017-03-16 14:56:19 [ main:17535 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:19 [ main:17536 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17536 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3bc7b6fe]
2017-03-16 14:56:19 [ main:17536 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3bc7b6fe] after transaction
2017-03-16 14:56:19 [ main:17536 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17537 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17537 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@64e62601] for Hibernate transaction
2017-03-16 14:56:19 [ main:17537 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@64e62601]
2017-03-16 14:56:19 [ main:17537 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17538 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17538 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@64e62601]
2017-03-16 14:56:19 [ main:17538 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@64e62601] after transaction
2017-03-16 14:56:19 [ main:17538 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17545 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 14:56:19 [ main:17582 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:19 [ main:17582 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7864dae9] for Hibernate transaction
2017-03-16 14:56:19 [ main:17582 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7864dae9]
2017-03-16 14:56:19 [ main:17584 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:19 [ main:17584 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:19 [ main:17584 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7864dae9]
2017-03-16 14:56:19 [ main:17586 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7864dae9] after transaction
2017-03-16 14:56:19 [ main:17586 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:19 [ main:17622 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17645 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17645 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5269becc] for Hibernate transaction
2017-03-16 14:56:20 [ main:17645 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5269becc]
2017-03-16 14:56:20 [ main:17646 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17664 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:17665 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5269becc] for Hibernate transaction
2017-03-16 14:56:20 [ main:17665 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:17683 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17683 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5269becc]
2017-03-16 14:56:20 [ main:17684 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5269becc] after transaction
2017-03-16 14:56:20 [ main:17684 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17684 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17684 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3820e812] for Hibernate transaction
2017-03-16 14:56:20 [ main:17684 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3820e812]
2017-03-16 14:56:20 [ main:17684 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17685 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17685 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3820e812]
2017-03-16 14:56:20 [ main:17685 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3820e812] after transaction
2017-03-16 14:56:20 [ main:17685 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17686 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:17686 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17686 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@57f3ff7e] for Hibernate transaction
2017-03-16 14:56:20 [ main:17686 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@57f3ff7e]
2017-03-16 14:56:20 [ main:17686 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17689 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17690 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@57f3ff7e]
2017-03-16 14:56:20 [ main:17691 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@57f3ff7e] after transaction
2017-03-16 14:56:20 [ main:17691 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17704 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17713 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17713 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7cb1bd6c] for Hibernate transaction
2017-03-16 14:56:20 [ main:17713 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7cb1bd6c]
2017-03-16 14:56:20 [ main:17714 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17715 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17715 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7cb1bd6c]
2017-03-16 14:56:20 [ main:17716 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7cb1bd6c] after transaction
2017-03-16 14:56:20 [ main:17716 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17724 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17731 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17731 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@23f6898] for Hibernate transaction
2017-03-16 14:56:20 [ main:17731 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@23f6898]
2017-03-16 14:56:20 [ main:17732 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17736 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17736 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@23f6898]
2017-03-16 14:56:20 [ main:17737 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@23f6898] after transaction
2017-03-16 14:56:20 [ main:17737 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17745 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17752 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getParentId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17752 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3939365e] for Hibernate transaction
2017-03-16 14:56:20 [ main:17752 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3939365e]
2017-03-16 14:56:20 [ main:17752 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17753 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17753 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3939365e]
2017-03-16 14:56:20 [ main:17754 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3939365e] after transaction
2017-03-16 14:56:20 [ main:17754 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17763 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17769 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17769 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@69722b59] for Hibernate transaction
2017-03-16 14:56:20 [ main:17769 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@69722b59]
2017-03-16 14:56:20 [ main:17769 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17771 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17771 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@69722b59]
2017-03-16 14:56:20 [ main:17773 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@69722b59] after transaction
2017-03-16 14:56:20 [ main:17773 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17773 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17773 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@14296cf1] for Hibernate transaction
2017-03-16 14:56:20 [ main:17773 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14296cf1]
2017-03-16 14:56:20 [ main:17774 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17775 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17775 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14296cf1]
2017-03-16 14:56:20 [ main:17776 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@14296cf1] after transaction
2017-03-16 14:56:20 [ main:17776 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17784 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17790 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17791 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2fc545e1] for Hibernate transaction
2017-03-16 14:56:20 [ main:17791 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2fc545e1]
2017-03-16 14:56:20 [ main:17791 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17797 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17797 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2fc545e1] for Hibernate transaction
2017-03-16 14:56:20 [ main:17797 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:17799 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17799 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2fc545e1] for Hibernate transaction
2017-03-16 14:56:20 [ main:17799 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:17799 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17799 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2fc545e1]
2017-03-16 14:56:20 [ main:17800 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2fc545e1] after transaction
2017-03-16 14:56:20 [ main:17800 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17808 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17811 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.addNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17812 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5594773e] for Hibernate transaction
2017-03-16 14:56:20 [ main:17812 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5594773e]
2017-03-16 14:56:20 [ main:17812 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17812 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17812 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5594773e]
2017-03-16 14:56:20 [ main:17814 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5594773e] after transaction
2017-03-16 14:56:20 [ main:17814 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17814 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17814 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6fb903c1] for Hibernate transaction
2017-03-16 14:56:20 [ main:17814 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6fb903c1]
2017-03-16 14:56:20 [ main:17814 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17815 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17815 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6fb903c1]
2017-03-16 14:56:20 [ main:17816 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6fb903c1] after transaction
2017-03-16 14:56:20 [ main:17816 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17826 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17835 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17835 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3ae3f711] for Hibernate transaction
2017-03-16 14:56:20 [ main:17835 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3ae3f711]
2017-03-16 14:56:20 [ main:17836 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17846 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17846 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3ae3f711]
2017-03-16 14:56:20 [ main:17848 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3ae3f711] after transaction
2017-03-16 14:56:20 [ main:17848 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17859 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17868 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17868 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7bf12aa7] for Hibernate transaction
2017-03-16 14:56:20 [ main:17869 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7bf12aa7]
2017-03-16 14:56:20 [ main:17869 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17869 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17869 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7bf12aa7]
2017-03-16 14:56:20 [ main:17871 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7bf12aa7] after transaction
2017-03-16 14:56:20 [ main:17871 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17872 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17872 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@11c8ecf3] for Hibernate transaction
2017-03-16 14:56:20 [ main:17872 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@11c8ecf3]
2017-03-16 14:56:20 [ main:17872 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17874 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17874 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@11c8ecf3]
2017-03-16 14:56:20 [ main:17874 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@11c8ecf3] after transaction
2017-03-16 14:56:20 [ main:17875 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17875 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17876 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2456f37e] for Hibernate transaction
2017-03-16 14:56:20 [ main:17876 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2456f37e]
2017-03-16 14:56:20 [ main:17877 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17877 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17877 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2456f37e]
2017-03-16 14:56:20 [ main:17879 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2456f37e] after transaction
2017-03-16 14:56:20 [ main:17879 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17879 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17879 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@42b106b9] for Hibernate transaction
2017-03-16 14:56:20 [ main:17879 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@42b106b9]
2017-03-16 14:56:20 [ main:17880 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17881 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17881 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@42b106b9]
2017-03-16 14:56:20 [ main:17882 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@42b106b9] after transaction
2017-03-16 14:56:20 [ main:17882 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17890 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17897 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17897 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@66e35ba7] for Hibernate transaction
2017-03-16 14:56:20 [ main:17897 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@66e35ba7]
2017-03-16 14:56:20 [ main:17898 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17901 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17901 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@66e35ba7]
2017-03-16 14:56:20 [ main:17902 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@66e35ba7] after transaction
2017-03-16 14:56:20 [ main:17902 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17911 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17917 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17917 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@41e701b0] for Hibernate transaction
2017-03-16 14:56:20 [ main:17917 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@41e701b0]
2017-03-16 14:56:20 [ main:17917 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17919 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17920 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@41e701b0] for Hibernate transaction
2017-03-16 14:56:20 [ main:17920 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:17920 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17921 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@41e701b0]
2017-03-16 14:56:20 [ main:17921 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@41e701b0] after transaction
2017-03-16 14:56:20 [ main:17921 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17929 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17935 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17935 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@61ae508a] for Hibernate transaction
2017-03-16 14:56:20 [ main:17935 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@61ae508a]
2017-03-16 14:56:20 [ main:17936 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17936 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17936 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@61ae508a]
2017-03-16 14:56:20 [ main:17937 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@61ae508a] after transaction
2017-03-16 14:56:20 [ main:17937 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17937 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17937 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5163cc8f] for Hibernate transaction
2017-03-16 14:56:20 [ main:17937 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5163cc8f]
2017-03-16 14:56:20 [ main:17938 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17940 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17940 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5163cc8f]
2017-03-16 14:56:20 [ main:17940 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5163cc8f] after transaction
2017-03-16 14:56:20 [ main:17940 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17949 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17955 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17955 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1454a16a] for Hibernate transaction
2017-03-16 14:56:20 [ main:17955 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1454a16a]
2017-03-16 14:56:20 [ main:17956 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17956 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17956 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1454a16a]
2017-03-16 14:56:20 [ main:17957 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1454a16a] after transaction
2017-03-16 14:56:20 [ main:17957 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17957 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17957 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5881f8d6] for Hibernate transaction
2017-03-16 14:56:20 [ main:17957 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5881f8d6]
2017-03-16 14:56:20 [ main:17958 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17960 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17960 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5881f8d6]
2017-03-16 14:56:20 [ main:17960 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5881f8d6] after transaction
2017-03-16 14:56:20 [ main:17960 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17968 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17974 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17974 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@323909b7] for Hibernate transaction
2017-03-16 14:56:20 [ main:17974 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@323909b7]
2017-03-16 14:56:20 [ main:17976 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17979 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17980 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@323909b7]
2017-03-16 14:56:20 [ main:17980 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@323909b7] after transaction
2017-03-16 14:56:20 [ main:17980 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:17987 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:17995 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:17995 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3a71522b] for Hibernate transaction
2017-03-16 14:56:20 [ main:17995 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3a71522b]
2017-03-16 14:56:20 [ main:17995 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:17999 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:17999 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3a71522b]
2017-03-16 14:56:20 [ main:18000 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3a71522b] after transaction
2017-03-16 14:56:20 [ main:18000 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18008 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18014 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeTypes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18014 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@c9a8f1d] for Hibernate transaction
2017-03-16 14:56:20 [ main:18014 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@c9a8f1d]
2017-03-16 14:56:20 [ main:18014 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18015 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18015 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@c9a8f1d]
2017-03-16 14:56:20 [ main:18015 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@c9a8f1d] after transaction
2017-03-16 14:56:20 [ main:18015 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18023 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18029 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18029 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1752b8b] for Hibernate transaction
2017-03-16 14:56:20 [ main:18029 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1752b8b]
2017-03-16 14:56:20 [ main:18030 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18031 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18031 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1752b8b] for Hibernate transaction
2017-03-16 14:56:20 [ main:18031 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18031 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18032 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1752b8b] for Hibernate transaction
2017-03-16 14:56:20 [ main:18032 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18032 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18032 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1752b8b] for Hibernate transaction
2017-03-16 14:56:20 [ main:18032 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18033 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18033 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1752b8b]
2017-03-16 14:56:20 [ main:18034 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1752b8b] after transaction
2017-03-16 14:56:20 [ main:18034 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18041 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18048 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18048 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@10647742] for Hibernate transaction
2017-03-16 14:56:20 [ main:18048 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10647742]
2017-03-16 14:56:20 [ main:18049 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18050 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18051 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10647742]
2017-03-16 14:56:20 [ main:18052 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@10647742] after transaction
2017-03-16 14:56:20 [ main:18052 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18065 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18073 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18074 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@397a443] for Hibernate transaction
2017-03-16 14:56:20 [ main:18074 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@397a443]
2017-03-16 14:56:20 [ main:18075 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18079 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18079 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@397a443] for Hibernate transaction
2017-03-16 14:56:20 [ main:18079 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18080 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18081 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@397a443] for Hibernate transaction
2017-03-16 14:56:20 [ main:18081 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18082 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18082 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@397a443] for Hibernate transaction
2017-03-16 14:56:20 [ main:18082 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18084 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18084 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@397a443] for Hibernate transaction
2017-03-16 14:56:20 [ main:18084 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18085 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18085 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@397a443] for Hibernate transaction
2017-03-16 14:56:20 [ main:18085 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18085 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18086 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@397a443] for Hibernate transaction
2017-03-16 14:56:20 [ main:18086 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18086 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18086 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@397a443]
2017-03-16 14:56:20 [ main:18087 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@397a443] after transaction
2017-03-16 14:56:20 [ main:18087 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18103 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18119 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRoleMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18119 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@275eb403] for Hibernate transaction
2017-03-16 14:56:20 [ main:18119 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@275eb403]
2017-03-16 14:56:20 [ main:18119 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18123 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18123 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@275eb403]
2017-03-16 14:56:20 [ main:18124 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@275eb403] after transaction
2017-03-16 14:56:20 [ main:18124 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18124 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18124 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7bf80373] for Hibernate transaction
2017-03-16 14:56:20 [ main:18124 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7bf80373]
2017-03-16 14:56:20 [ main:18125 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18126 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18126 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7bf80373]
2017-03-16 14:56:20 [ main:18126 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7bf80373] after transaction
2017-03-16 14:56:20 [ main:18126 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18144 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18147 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.addRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18147 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1e58fa31] for Hibernate transaction
2017-03-16 14:56:20 [ main:18148 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1e58fa31]
2017-03-16 14:56:20 [ main:18148 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18148 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18148 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1e58fa31]
2017-03-16 14:56:20 [ main:18149 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1e58fa31] after transaction
2017-03-16 14:56:20 [ main:18149 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18149 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18149 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3a5c470d] for Hibernate transaction
2017-03-16 14:56:20 [ main:18149 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3a5c470d]
2017-03-16 14:56:20 [ main:18150 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18151 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18151 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3a5c470d]
2017-03-16 14:56:20 [ main:18151 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3a5c470d] after transaction
2017-03-16 14:56:20 [ main:18151 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18161 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18167 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18167 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@500f1537] for Hibernate transaction
2017-03-16 14:56:20 [ main:18167 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@500f1537]
2017-03-16 14:56:20 [ main:18167 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18170 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18170 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@500f1537]
2017-03-16 14:56:20 [ main:18171 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@500f1537] after transaction
2017-03-16 14:56:20 [ main:18171 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18182 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18187 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18187 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@75a407a7] for Hibernate transaction
2017-03-16 14:56:20 [ main:18187 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@75a407a7]
2017-03-16 14:56:20 [ main:18188 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18188 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18188 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@75a407a7]
2017-03-16 14:56:20 [ main:18189 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@75a407a7] after transaction
2017-03-16 14:56:20 [ main:18189 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18189 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18189 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@22565ee8] for Hibernate transaction
2017-03-16 14:56:20 [ main:18189 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@22565ee8]
2017-03-16 14:56:20 [ main:18189 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18190 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18190 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@22565ee8]
2017-03-16 14:56:20 [ main:18191 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@22565ee8] after transaction
2017-03-16 14:56:20 [ main:18191 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18201 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18206 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18206 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6961fdd9] for Hibernate transaction
2017-03-16 14:56:20 [ main:18206 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6961fdd9]
2017-03-16 14:56:20 [ main:18207 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18210 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18210 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6961fdd9]
2017-03-16 14:56:20 [ main:18211 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6961fdd9] after transaction
2017-03-16 14:56:20 [ main:18211 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18220 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18226 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18226 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4f42f8b1] for Hibernate transaction
2017-03-16 14:56:20 [ main:18226 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f42f8b1]
2017-03-16 14:56:20 [ main:18227 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18232 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18233 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4f42f8b1] for Hibernate transaction
2017-03-16 14:56:20 [ main:18233 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18234 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18234 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4f42f8b1] for Hibernate transaction
2017-03-16 14:56:20 [ main:18234 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18235 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18235 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f42f8b1]
2017-03-16 14:56:20 [ main:18236 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f42f8b1] after transaction
2017-03-16 14:56:20 [ main:18236 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18246 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18251 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateParent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18251 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5c52b341] for Hibernate transaction
2017-03-16 14:56:20 [ main:18251 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5c52b341]
2017-03-16 14:56:20 [ main:18252 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18255 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18255 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5c52b341]
2017-03-16 14:56:20 [ main:18256 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5c52b341] after transaction
2017-03-16 14:56:20 [ main:18256 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18257 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18257 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@44c34941] for Hibernate transaction
2017-03-16 14:56:20 [ main:18257 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@44c34941]
2017-03-16 14:56:20 [ main:18257 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18258 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18258 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@44c34941]
2017-03-16 14:56:20 [ main:18259 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@44c34941] after transaction
2017-03-16 14:56:20 [ main:18259 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18280 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18288 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18288 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5955c4d1] for Hibernate transaction
2017-03-16 14:56:20 [ main:18289 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5955c4d1]
2017-03-16 14:56:20 [ main:18289 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18290 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18290 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5955c4d1] for Hibernate transaction
2017-03-16 14:56:20 [ main:18290 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18292 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18292 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5955c4d1] for Hibernate transaction
2017-03-16 14:56:20 [ main:18293 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18296 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18296 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5955c4d1] for Hibernate transaction
2017-03-16 14:56:20 [ main:18296 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18298 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18298 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5955c4d1]
2017-03-16 14:56:20 [ main:18299 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5955c4d1] after transaction
2017-03-16 14:56:20 [ main:18299 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18319 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18328 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18328 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@309fadf0] for Hibernate transaction
2017-03-16 14:56:20 [ main:18328 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@309fadf0]
2017-03-16 14:56:20 [ main:18329 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18331 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18331 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@309fadf0]
2017-03-16 14:56:20 [ main:18332 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@309fadf0] after transaction
2017-03-16 14:56:20 [ main:18332 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18332 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18332 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7b449b1d] for Hibernate transaction
2017-03-16 14:56:20 [ main:18332 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7b449b1d]
2017-03-16 14:56:20 [ main:18332 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18333 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18333 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7b449b1d]
2017-03-16 14:56:20 [ main:18334 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7b449b1d] after transaction
2017-03-16 14:56:20 [ main:18334 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18344 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18349 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.deleteRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18349 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@45d14aaa] for Hibernate transaction
2017-03-16 14:56:20 [ main:18349 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@45d14aaa]
2017-03-16 14:56:20 [ main:18350 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18352 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18352 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@45d14aaa] for Hibernate transaction
2017-03-16 14:56:20 [ main:18352 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18354 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:20 [ main:18354 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@45d14aaa] for Hibernate transaction
2017-03-16 14:56:20 [ main:18354 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18354 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18354 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@45d14aaa]
2017-03-16 14:56:20 [ main:18355 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@45d14aaa] after transaction
2017-03-16 14:56:20 [ main:18355 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18355 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18355 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@36bf9ab9] for Hibernate transaction
2017-03-16 14:56:20 [ main:18355 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@36bf9ab9]
2017-03-16 14:56:20 [ main:18355 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18356 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18356 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@36bf9ab9]
2017-03-16 14:56:20 [ main:18356 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@36bf9ab9] after transaction
2017-03-16 14:56:20 [ main:18356 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18356 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 14:56:20 [ main:18356 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18357 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@237adefb] for Hibernate transaction
2017-03-16 14:56:20 [ main:18357 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@237adefb]
2017-03-16 14:56:20 [ main:18357 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18357 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18357 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@237adefb]
2017-03-16 14:56:20 [ main:18358 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@237adefb] after transaction
2017-03-16 14:56:20 [ main:18358 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18358 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18358 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18358 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@46bcb6d2] for Hibernate transaction
2017-03-16 14:56:20 [ main:18358 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@46bcb6d2]
2017-03-16 14:56:20 [ main:18358 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18360 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18360 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@46bcb6d2]
2017-03-16 14:56:20 [ main:18361 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@46bcb6d2] after transaction
2017-03-16 14:56:20 [ main:18361 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18370 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18375 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18376 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6a659aeb] for Hibernate transaction
2017-03-16 14:56:20 [ main:18376 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6a659aeb]
2017-03-16 14:56:20 [ main:18376 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18377 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18377 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6a659aeb]
2017-03-16 14:56:20 [ main:18377 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6a659aeb] after transaction
2017-03-16 14:56:20 [ main:18377 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18377 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18377 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@121b121a] for Hibernate transaction
2017-03-16 14:56:20 [ main:18378 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@121b121a]
2017-03-16 14:56:20 [ main:18378 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18379 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18379 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@121b121a]
2017-03-16 14:56:20 [ main:18379 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@121b121a] after transaction
2017-03-16 14:56:20 [ main:18379 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18388 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18394 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18394 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4dca1399] for Hibernate transaction
2017-03-16 14:56:20 [ main:18395 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4dca1399]
2017-03-16 14:56:20 [ main:18395 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18396 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18396 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4dca1399] for Hibernate transaction
2017-03-16 14:56:20 [ main:18396 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18397 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18397 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4dca1399] for Hibernate transaction
2017-03-16 14:56:20 [ main:18397 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18398 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18398 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4dca1399] for Hibernate transaction
2017-03-16 14:56:20 [ main:18398 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18398 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18399 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4dca1399] for Hibernate transaction
2017-03-16 14:56:20 [ main:18399 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18399 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18399 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4dca1399]
2017-03-16 14:56:20 [ main:18400 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4dca1399] after transaction
2017-03-16 14:56:20 [ main:18400 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18410 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18415 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18415 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@140457d2] for Hibernate transaction
2017-03-16 14:56:20 [ main:18415 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@140457d2]
2017-03-16 14:56:20 [ main:18415 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18416 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18416 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@140457d2] for Hibernate transaction
2017-03-16 14:56:20 [ main:18416 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18417 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18417 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@140457d2] for Hibernate transaction
2017-03-16 14:56:20 [ main:18417 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18418 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18418 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@140457d2] for Hibernate transaction
2017-03-16 14:56:20 [ main:18418 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18419 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18419 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@140457d2] for Hibernate transaction
2017-03-16 14:56:20 [ main:18419 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18419 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18419 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@140457d2] for Hibernate transaction
2017-03-16 14:56:20 [ main:18419 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18420 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18420 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@140457d2]
2017-03-16 14:56:20 [ main:18421 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@140457d2] after transaction
2017-03-16 14:56:20 [ main:18421 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18431 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18436 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18436 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2f544ca0] for Hibernate transaction
2017-03-16 14:56:20 [ main:18436 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f544ca0]
2017-03-16 14:56:20 [ main:18437 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18438 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18438 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f544ca0]
2017-03-16 14:56:20 [ main:18438 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f544ca0] after transaction
2017-03-16 14:56:20 [ main:18438 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18452 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18463 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18463 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2009e632] for Hibernate transaction
2017-03-16 14:56:20 [ main:18463 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2009e632]
2017-03-16 14:56:20 [ main:18464 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18467 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18467 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2009e632]
2017-03-16 14:56:20 [ main:18468 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2009e632] after transaction
2017-03-16 14:56:20 [ main:18468 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18468 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18468 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@41385767] for Hibernate transaction
2017-03-16 14:56:20 [ main:18468 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@41385767]
2017-03-16 14:56:20 [ main:18469 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18470 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18470 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@41385767]
2017-03-16 14:56:20 [ main:18475 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@41385767] after transaction
2017-03-16 14:56:20 [ main:18475 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18492 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18497 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.addRoleNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18498 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2ee71220] for Hibernate transaction
2017-03-16 14:56:20 [ main:18498 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2ee71220]
2017-03-16 14:56:20 [ main:18498 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18498 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18498 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2ee71220]
2017-03-16 14:56:20 [ main:18499 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2ee71220] after transaction
2017-03-16 14:56:20 [ main:18499 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18505 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18513 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18513 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@57525d9f] for Hibernate transaction
2017-03-16 14:56:20 [ main:18514 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@57525d9f]
2017-03-16 14:56:20 [ main:18514 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18515 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18515 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@57525d9f]
2017-03-16 14:56:20 [ main:18516 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@57525d9f] after transaction
2017-03-16 14:56:20 [ main:18516 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18520 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18527 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18527 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2225be1e] for Hibernate transaction
2017-03-16 14:56:20 [ main:18527 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2225be1e]
2017-03-16 14:56:20 [ main:18528 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18530 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18530 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2225be1e]
2017-03-16 14:56:20 [ main:18531 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2225be1e] after transaction
2017-03-16 14:56:20 [ main:18531 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18531 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18531 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@25f9ffaf] for Hibernate transaction
2017-03-16 14:56:20 [ main:18531 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@25f9ffaf]
2017-03-16 14:56:20 [ main:18531 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18532 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18532 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@25f9ffaf]
2017-03-16 14:56:20 [ main:18533 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@25f9ffaf] after transaction
2017-03-16 14:56:20 [ main:18533 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18538 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18546 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18547 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@19878659] for Hibernate transaction
2017-03-16 14:56:20 [ main:18547 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@19878659]
2017-03-16 14:56:20 [ main:18547 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18549 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18549 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@19878659]
2017-03-16 14:56:20 [ main:18550 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@19878659] after transaction
2017-03-16 14:56:20 [ main:18550 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18556 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18561 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18561 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@31ed8ffd] for Hibernate transaction
2017-03-16 14:56:20 [ main:18561 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@31ed8ffd]
2017-03-16 14:56:20 [ main:18561 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18563 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18563 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@31ed8ffd]
2017-03-16 14:56:20 [ main:18564 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@31ed8ffd] after transaction
2017-03-16 14:56:20 [ main:18564 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18572 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18582 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18583 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@741b173d] for Hibernate transaction
2017-03-16 14:56:20 [ main:18583 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@741b173d]
2017-03-16 14:56:20 [ main:18583 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18584 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18584 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@741b173d]
2017-03-16 14:56:20 [ main:18584 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@741b173d] after transaction
2017-03-16 14:56:20 [ main:18584 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18584 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18584 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@46ea2be1] for Hibernate transaction
2017-03-16 14:56:20 [ main:18584 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@46ea2be1]
2017-03-16 14:56:20 [ main:18585 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18585 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18585 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@46ea2be1]
2017-03-16 14:56:20 [ main:18586 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@46ea2be1] after transaction
2017-03-16 14:56:20 [ main:18586 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18591 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18599 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18600 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5ac062e] for Hibernate transaction
2017-03-16 14:56:20 [ main:18600 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5ac062e]
2017-03-16 14:56:20 [ main:18600 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18600 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18601 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5ac062e] for Hibernate transaction
2017-03-16 14:56:20 [ main:18601 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18602 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5ac062e] for Hibernate transaction
2017-03-16 14:56:20 [ main:18602 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18603 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5ac062e] for Hibernate transaction
2017-03-16 14:56:20 [ main:18603 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18604 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18606 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5ac062e] for Hibernate transaction
2017-03-16 14:56:20 [ main:18606 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18607 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5ac062e] for Hibernate transaction
2017-03-16 14:56:20 [ main:18607 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18607 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5ac062e] for Hibernate transaction
2017-03-16 14:56:20 [ main:18607 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18608 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5ac062e] for Hibernate transaction
2017-03-16 14:56:20 [ main:18608 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18608 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18608 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5ac062e]
2017-03-16 14:56:20 [ main:18609 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5ac062e] after transaction
2017-03-16 14:56:20 [ main:18609 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18622 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 14:56:20 [ main:18626 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 14:56:20 [ main:18627 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18627 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@372726a7] for Hibernate transaction
2017-03-16 14:56:20 [ main:18627 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@372726a7]
2017-03-16 14:56:20 [ main:18627 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18628 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18628 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@372726a7]
2017-03-16 14:56:20 [ main:18629 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@372726a7] after transaction
2017-03-16 14:56:20 [ main:18629 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 14:56:20 [ main:18629 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 14:56:20 [ main:18629 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@257ded07] for Hibernate transaction
2017-03-16 14:56:20 [ main:18629 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@257ded07]
2017-03-16 14:56:20 [ main:18629 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 14:56:20 [ main:18629 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 14:56:20 [ main:18631 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@257ded07] for Hibernate transaction
2017-03-16 14:56:20 [ main:18631 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18632 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@257ded07] for Hibernate transaction
2017-03-16 14:56:20 [ main:18632 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18633 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@257ded07] for Hibernate transaction
2017-03-16 14:56:20 [ main:18633 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 14:56:20 [ main:18633 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 14:56:20 [ main:18633 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@257ded07]
2017-03-16 14:56:20 [ main:18634 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@257ded07] after transaction
2017-03-16 14:56:20 [ main:18634 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:29 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@67852f24: display name [org.springframework.context.support.ClassPathXmlApplicationContext@67852f24]; startup date [Thu Mar 16 15:07:29 CST 2017]; root of context hierarchy
2017-03-16 15:07:29 [ main:77 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 15:07:29 [ main:91 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 15:07:29 [ main:114 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 15:07:29 [ main:115 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 15:07:32 [ main:2640 ] - [ DEBUG ] Loading bean definitions
2017-03-16 15:07:32 [ main:2661 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 15:07:32 [ main:2684 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 15:07:32 [ main:2684 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@67852f24]: org.springframework.beans.factory.support.DefaultListableBeanFactory@ea80631
2017-03-16 15:07:32 [ main:2685 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@67852f24: display name [org.springframework.context.support.ClassPathXmlApplicationContext@67852f24]; startup date [Thu Mar 16 15:07:29 CST 2017]; root of context hierarchy
2017-03-16 15:07:32 [ main:2699 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:07:32 [ main:2699 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:07:32 [ main:2713 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 15:07:32 [ main:2725 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:07:32 [ main:2726 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@371f6747]
2017-03-16 15:07:32 [ main:2728 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@149b1d7f]
2017-03-16 15:07:32 [ main:2729 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@ea80631: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 15:07:32 [ main:2730 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 15:07:32 [ main:2730 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 15:07:32 [ main:2734 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 15:07:32 [ main:2749 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:32 [ main:2749 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:32 [ main:2750 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 15:07:32 [ main:2754 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:07:32 [ main:2754 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:07:32 [ main:2756 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 15:07:32 [ main:2760 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:07:32 [ main:2760 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:32 [ main:2763 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 15:07:32 [ main:2763 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 15:07:32 [ main:2763 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 15:07:32 [ main:2776 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 15:07:32 [ main:2783 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 15:07:32 [ main:2784 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 15:07:32 [ main:3073 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 15:07:33 [ main:3350 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:33 [ main:3352 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 15:07:33 [ main:3352 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 15:07:33 [ main:3353 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 15:07:33 [ main:3353 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 15:07:33 [ main:3355 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:07:33 [ main:3356 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:33 [ main:3363 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:33 [ main:3369 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3375 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:07:33 [ main:3379 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@38eebf4a]
2017-03-16 15:07:33 [ main:3423 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:07:33 [ main:3423 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:07:33 [ main:3423 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 15:07:33 [ main:3425 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 15:07:33 [ main:3425 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 15:07:33 [ main:3429 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 15:07:33 [ main:3432 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:07:33 [ main:3432 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 15:07:33 [ main:3436 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@245e7588] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 15:07:33 [ main:3437 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:33 [ main:3438 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 15:07:33 [ main:3438 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:07:33 [ main:3438 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:07:33 [ main:3438 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:07:33 [ main:3441 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3442 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 15:07:33 [ main:3442 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3442 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 15:07:33 [ main:3442 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3442 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3443 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3444 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:07:33 [ main:3445 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:07:33 [ main:3446 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:07:33 [ main:3464 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 15:07:33 [ main:3464 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 15:07:33 [ main:3464 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 15:07:33 [ main:3464 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 15:07:33 [ main:3467 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:07:33 [ main:3467 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:33 [ main:3467 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3467 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:07:33 [ main:3467 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@17d8ace]
2017-03-16 15:07:33 [ main:3469 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 15:07:33 [ main:3469 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3469 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 15:07:33 [ main:3469 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3469 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 15:07:33 [ main:3469 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3469 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 15:07:33 [ main:3469 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3469 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 15:07:33 [ main:3469 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3470 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3471 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:07:33 [ main:3472 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:07:33 [ main:3473 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:07:33 [ main:3487 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 15:07:33 [ main:3487 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 15:07:33 [ main:3487 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 15:07:33 [ main:3487 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 15:07:33 [ main:3491 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:07:33 [ main:3491 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:33 [ main:3491 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3491 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:07:33 [ main:3491 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@6d348a50]
2017-03-16 15:07:33 [ main:3492 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3492 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 15:07:33 [ main:3492 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3492 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 15:07:33 [ main:3492 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3493 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 15:07:33 [ main:3494 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3495 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:07:33 [ main:3496 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:07:33 [ main:3497 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:07:33 [ main:3510 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 15:07:33 [ main:3510 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3510 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3510 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 15:07:33 [ main:3513 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:07:33 [ main:3513 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:33 [ main:3513 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3513 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:07:33 [ main:3513 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@2fbcf350]
2017-03-16 15:07:33 [ main:3514 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 15:07:33 [ main:3514 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3514 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:07:33 [ main:3514 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 15:07:33 [ main:3515 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:07:33 [ main:3516 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:07:33 [ main:3517 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:07:33 [ main:3518 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:07:33 [ main:3540 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3540 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:33 [ main:3540 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 15:07:33 [ main:3540 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 15:07:33 [ main:3543 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:07:33 [ main:3543 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:33 [ main:3544 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3544 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:07:33 [ main:3544 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@15e46de6]
2017-03-16 15:07:33 [ main:3545 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3545 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 15:07:33 [ main:3545 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3545 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:07:33 [ main:3545 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3545 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 15:07:33 [ main:3545 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3545 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 15:07:33 [ main:3545 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3545 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3546 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3547 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:07:33 [ main:3548 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:07:33 [ main:3549 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:07:33 [ main:3561 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 15:07:33 [ main:3561 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 15:07:33 [ main:3561 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:07:33 [ main:3561 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:07:33 [ main:3561 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:07:33 [ main:3561 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:07:33 [ main:3561 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3618 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3636 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1aeb4421] for Hibernate transaction
2017-03-16 15:07:33 [ main:3637 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1aeb4421]
2017-03-16 15:07:33 [ main:3651 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3756 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3756 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1aeb4421]
2017-03-16 15:07:33 [ main:3757 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1aeb4421] after transaction
2017-03-16 15:07:33 [ main:3757 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3758 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3758 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@264b8122] for Hibernate transaction
2017-03-16 15:07:33 [ main:3758 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@264b8122]
2017-03-16 15:07:33 [ main:3759 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3771 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3771 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@264b8122]
2017-03-16 15:07:33 [ main:3772 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@264b8122] after transaction
2017-03-16 15:07:33 [ main:3772 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3779 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3785 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.getRoleByUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3785 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@bc0ce09] for Hibernate transaction
2017-03-16 15:07:33 [ main:3785 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@bc0ce09]
2017-03-16 15:07:33 [ main:3786 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3786 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:07:33 [ main:3786 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@bc0ce09] for Hibernate transaction
2017-03-16 15:07:33 [ main:3786 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:33 [ main:3806 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:33 [ main:3806 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@bc0ce09] for Hibernate transaction
2017-03-16 15:07:33 [ main:3806 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:33 [ main:3823 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@bc0ce09] for Hibernate transaction
2017-03-16 15:07:33 [ main:3823 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:33 [ main:3824 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3825 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@bc0ce09]
2017-03-16 15:07:33 [ main:3828 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@bc0ce09] after transaction
2017-03-16 15:07:33 [ main:3828 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3833 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3839 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3839 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@b04deb7] for Hibernate transaction
2017-03-16 15:07:33 [ main:3839 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@b04deb7]
2017-03-16 15:07:33 [ main:3839 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3843 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3843 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@b04deb7]
2017-03-16 15:07:33 [ main:3844 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@b04deb7] after transaction
2017-03-16 15:07:33 [ main:3844 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3844 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3844 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@23bd2155] for Hibernate transaction
2017-03-16 15:07:33 [ main:3844 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@23bd2155]
2017-03-16 15:07:33 [ main:3844 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3845 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3845 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@23bd2155]
2017-03-16 15:07:33 [ main:3845 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@23bd2155] after transaction
2017-03-16 15:07:33 [ main:3845 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3850 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3856 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3856 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7cfec020] for Hibernate transaction
2017-03-16 15:07:33 [ main:3856 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7cfec020]
2017-03-16 15:07:33 [ main:3857 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3858 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3858 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7cfec020]
2017-03-16 15:07:33 [ main:3858 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7cfec020] after transaction
2017-03-16 15:07:33 [ main:3858 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3865 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3870 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3870 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3efdd25e] for Hibernate transaction
2017-03-16 15:07:33 [ main:3870 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3efdd25e]
2017-03-16 15:07:33 [ main:3871 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3875 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3875 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3efdd25e]
2017-03-16 15:07:33 [ main:3875 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3efdd25e] after transaction
2017-03-16 15:07:33 [ main:3875 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3875 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3875 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@43a64562] for Hibernate transaction
2017-03-16 15:07:33 [ main:3876 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@43a64562]
2017-03-16 15:07:33 [ main:3876 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3880 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3880 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@43a64562]
2017-03-16 15:07:33 [ main:3880 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@43a64562] after transaction
2017-03-16 15:07:33 [ main:3880 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3885 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3891 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3892 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1d086852] for Hibernate transaction
2017-03-16 15:07:33 [ main:3892 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1d086852]
2017-03-16 15:07:33 [ main:3892 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3893 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3893 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1d086852]
2017-03-16 15:07:33 [ main:3894 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1d086852] after transaction
2017-03-16 15:07:33 [ main:3894 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3899 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3905 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3905 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2eda7188] for Hibernate transaction
2017-03-16 15:07:33 [ main:3905 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2eda7188]
2017-03-16 15:07:33 [ main:3905 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3907 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3907 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2eda7188]
2017-03-16 15:07:33 [ main:3907 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2eda7188] after transaction
2017-03-16 15:07:33 [ main:3907 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3913 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3916 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUsers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3916 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@900d6e4] for Hibernate transaction
2017-03-16 15:07:33 [ main:3916 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@900d6e4]
2017-03-16 15:07:33 [ main:3916 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3921 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3921 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@900d6e4]
2017-03-16 15:07:33 [ main:3925 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@900d6e4] after transaction
2017-03-16 15:07:33 [ main:3925 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3926 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3926 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7ee4acd9] for Hibernate transaction
2017-03-16 15:07:33 [ main:3926 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7ee4acd9]
2017-03-16 15:07:33 [ main:3926 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3927 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3927 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7ee4acd9]
2017-03-16 15:07:33 [ main:3929 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7ee4acd9] after transaction
2017-03-16 15:07:33 [ main:3929 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3933 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:3936 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3936 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@26560acc] for Hibernate transaction
2017-03-16 15:07:33 [ main:3936 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@26560acc]
2017-03-16 15:07:33 [ main:3937 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3937 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3938 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@26560acc]
2017-03-16 15:07:33 [ main:3939 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@26560acc] after transaction
2017-03-16 15:07:33 [ main:3939 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3949 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:07:33 [ main:3962 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3963 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7384843c] for Hibernate transaction
2017-03-16 15:07:33 [ main:3963 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7384843c]
2017-03-16 15:07:33 [ main:3963 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3969 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3970 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7384843c]
2017-03-16 15:07:33 [ main:3972 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7384843c] after transaction
2017-03-16 15:07:33 [ main:3973 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3974 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:3974 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3f8e4557] for Hibernate transaction
2017-03-16 15:07:33 [ main:3975 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3f8e4557]
2017-03-16 15:07:33 [ main:3975 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:3977 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:3977 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3f8e4557]
2017-03-16 15:07:33 [ main:3978 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3f8e4557] after transaction
2017-03-16 15:07:33 [ main:3978 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:3995 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:07:33 [ main:4002 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4002 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2f165f4a] for Hibernate transaction
2017-03-16 15:07:33 [ main:4002 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f165f4a]
2017-03-16 15:07:33 [ main:4003 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4007 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4008 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f165f4a]
2017-03-16 15:07:33 [ main:4009 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f165f4a] after transaction
2017-03-16 15:07:33 [ main:4009 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4010 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4010 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3bf21475] for Hibernate transaction
2017-03-16 15:07:33 [ main:4010 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3bf21475]
2017-03-16 15:07:33 [ main:4010 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4016 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4016 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3bf21475]
2017-03-16 15:07:33 [ main:4016 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3bf21475] after transaction
2017-03-16 15:07:33 [ main:4017 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4017 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4017 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@52ac9eff] for Hibernate transaction
2017-03-16 15:07:33 [ main:4017 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@52ac9eff]
2017-03-16 15:07:33 [ main:4017 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4019 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4019 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@52ac9eff]
2017-03-16 15:07:33 [ main:4019 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@52ac9eff] after transaction
2017-03-16 15:07:33 [ main:4019 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4029 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:07:33 [ main:4033 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4033 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@d0a42de] for Hibernate transaction
2017-03-16 15:07:33 [ main:4033 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@d0a42de]
2017-03-16 15:07:33 [ main:4034 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4035 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4035 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@d0a42de]
2017-03-16 15:07:33 [ main:4037 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@d0a42de] after transaction
2017-03-16 15:07:33 [ main:4037 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4037 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4037 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@203fdcfb] for Hibernate transaction
2017-03-16 15:07:33 [ main:4037 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@203fdcfb]
2017-03-16 15:07:33 [ main:4038 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4039 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4039 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@203fdcfb]
2017-03-16 15:07:33 [ main:4040 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@203fdcfb] after transaction
2017-03-16 15:07:33 [ main:4040 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4041 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4041 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@56e1129f] for Hibernate transaction
2017-03-16 15:07:33 [ main:4041 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@56e1129f]
2017-03-16 15:07:33 [ main:4041 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4041 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4041 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@56e1129f]
2017-03-16 15:07:33 [ main:4044 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@56e1129f] after transaction
2017-03-16 15:07:33 [ main:4044 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4044 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4044 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@416d3ac6] for Hibernate transaction
2017-03-16 15:07:33 [ main:4044 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@416d3ac6]
2017-03-16 15:07:33 [ main:4044 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4045 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4045 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@416d3ac6]
2017-03-16 15:07:33 [ main:4046 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@416d3ac6] after transaction
2017-03-16 15:07:33 [ main:4046 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4053 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:07:33 [ main:4059 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4059 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2395330e] for Hibernate transaction
2017-03-16 15:07:33 [ main:4059 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2395330e]
2017-03-16 15:07:33 [ main:4059 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4061 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4061 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2395330e]
2017-03-16 15:07:33 [ main:4061 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2395330e] after transaction
2017-03-16 15:07:33 [ main:4061 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4062 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4062 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1c2859eb] for Hibernate transaction
2017-03-16 15:07:33 [ main:4062 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1c2859eb]
2017-03-16 15:07:33 [ main:4062 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4068 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4068 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1c2859eb]
2017-03-16 15:07:33 [ main:4069 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1c2859eb] after transaction
2017-03-16 15:07:33 [ main:4069 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4069 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4069 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@b684fed] for Hibernate transaction
2017-03-16 15:07:33 [ main:4069 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@b684fed]
2017-03-16 15:07:33 [ main:4069 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4071 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4071 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@b684fed]
2017-03-16 15:07:33 [ main:4071 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@b684fed] after transaction
2017-03-16 15:07:33 [ main:4071 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4071 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4072 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@b9bb107] for Hibernate transaction
2017-03-16 15:07:33 [ main:4072 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@b9bb107]
2017-03-16 15:07:33 [ main:4072 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4073 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4073 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@b9bb107]
2017-03-16 15:07:33 [ main:4074 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@b9bb107] after transaction
2017-03-16 15:07:33 [ main:4074 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4074 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4074 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@473e0d3d] for Hibernate transaction
2017-03-16 15:07:33 [ main:4074 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@473e0d3d]
2017-03-16 15:07:33 [ main:4075 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4077 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4077 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@473e0d3d]
2017-03-16 15:07:33 [ main:4078 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@473e0d3d] after transaction
2017-03-16 15:07:33 [ main:4078 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4078 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4078 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@ac7ad3b] for Hibernate transaction
2017-03-16 15:07:33 [ main:4078 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@ac7ad3b]
2017-03-16 15:07:33 [ main:4079 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4080 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4080 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@ac7ad3b]
2017-03-16 15:07:33 [ main:4080 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@ac7ad3b] after transaction
2017-03-16 15:07:33 [ main:4081 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4081 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4081 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7e89e98d] for Hibernate transaction
2017-03-16 15:07:33 [ main:4081 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7e89e98d]
2017-03-16 15:07:33 [ main:4081 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4082 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4082 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7e89e98d]
2017-03-16 15:07:33 [ main:4083 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7e89e98d] after transaction
2017-03-16 15:07:33 [ main:4083 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4091 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:07:33 [ main:4096 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4096 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@342b76a8] for Hibernate transaction
2017-03-16 15:07:33 [ main:4096 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@342b76a8]
2017-03-16 15:07:33 [ main:4097 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4098 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4098 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@342b76a8]
2017-03-16 15:07:33 [ main:4099 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@342b76a8] after transaction
2017-03-16 15:07:33 [ main:4099 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4099 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4099 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@785c1069] for Hibernate transaction
2017-03-16 15:07:33 [ main:4099 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@785c1069]
2017-03-16 15:07:33 [ main:4099 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4101 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4101 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@785c1069]
2017-03-16 15:07:33 [ main:4103 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@785c1069] after transaction
2017-03-16 15:07:33 [ main:4103 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4110 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:07:33 [ main:4115 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4115 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6c4f37b3] for Hibernate transaction
2017-03-16 15:07:33 [ main:4115 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6c4f37b3]
2017-03-16 15:07:33 [ main:4115 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4116 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4116 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6c4f37b3]
2017-03-16 15:07:33 [ main:4117 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6c4f37b3] after transaction
2017-03-16 15:07:33 [ main:4117 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4117 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4118 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7e349634] for Hibernate transaction
2017-03-16 15:07:33 [ main:4118 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7e349634]
2017-03-16 15:07:33 [ main:4118 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4121 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:33 [ main:4121 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7e349634] for Hibernate transaction
2017-03-16 15:07:33 [ main:4121 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:33 [ main:4121 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4121 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7e349634]
2017-03-16 15:07:33 [ main:4122 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7e349634] after transaction
2017-03-16 15:07:33 [ main:4122 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4122 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4122 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@31d7e3a9] for Hibernate transaction
2017-03-16 15:07:33 [ main:4122 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@31d7e3a9]
2017-03-16 15:07:33 [ main:4123 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4123 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4123 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@31d7e3a9]
2017-03-16 15:07:33 [ main:4124 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@31d7e3a9] after transaction
2017-03-16 15:07:33 [ main:4124 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4131 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:07:33 [ main:4158 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4158 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1796c6dd] for Hibernate transaction
2017-03-16 15:07:33 [ main:4159 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1796c6dd]
2017-03-16 15:07:33 [ main:4160 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4161 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4161 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1796c6dd]
2017-03-16 15:07:33 [ main:4162 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1796c6dd] after transaction
2017-03-16 15:07:33 [ main:4163 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4210 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:33 [ main:4231 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4231 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@46956438] for Hibernate transaction
2017-03-16 15:07:33 [ main:4231 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@46956438]
2017-03-16 15:07:33 [ main:4232 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4252 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:33 [ main:4252 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@46956438] for Hibernate transaction
2017-03-16 15:07:33 [ main:4252 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:33 [ main:4271 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4271 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@46956438]
2017-03-16 15:07:33 [ main:4272 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@46956438] after transaction
2017-03-16 15:07:33 [ main:4272 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4272 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4272 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1f03ce40] for Hibernate transaction
2017-03-16 15:07:33 [ main:4272 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1f03ce40]
2017-03-16 15:07:33 [ main:4273 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4273 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4273 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1f03ce40]
2017-03-16 15:07:33 [ main:4274 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1f03ce40] after transaction
2017-03-16 15:07:33 [ main:4274 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:33 [ main:4274 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:33 [ main:4274 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:33 [ main:4274 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3248dfe] for Hibernate transaction
2017-03-16 15:07:33 [ main:4274 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3248dfe]
2017-03-16 15:07:33 [ main:4275 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:33 [ main:4279 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:33 [ main:4279 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3248dfe]
2017-03-16 15:07:33 [ main:4280 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3248dfe] after transaction
2017-03-16 15:07:33 [ main:4280 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4292 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4300 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4300 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@67ceb991] for Hibernate transaction
2017-03-16 15:07:34 [ main:4300 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@67ceb991]
2017-03-16 15:07:34 [ main:4300 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4302 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4302 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@67ceb991]
2017-03-16 15:07:34 [ main:4302 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@67ceb991] after transaction
2017-03-16 15:07:34 [ main:4302 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4311 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4318 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4318 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@221cf05] for Hibernate transaction
2017-03-16 15:07:34 [ main:4318 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@221cf05]
2017-03-16 15:07:34 [ main:4318 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4323 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4323 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@221cf05]
2017-03-16 15:07:34 [ main:4323 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@221cf05] after transaction
2017-03-16 15:07:34 [ main:4323 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4332 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4339 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getParentId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4339 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@591f22c2] for Hibernate transaction
2017-03-16 15:07:34 [ main:4339 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@591f22c2]
2017-03-16 15:07:34 [ main:4339 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4340 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4340 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@591f22c2]
2017-03-16 15:07:34 [ main:4342 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@591f22c2] after transaction
2017-03-16 15:07:34 [ main:4342 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4350 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4357 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4357 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@20b55243] for Hibernate transaction
2017-03-16 15:07:34 [ main:4357 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@20b55243]
2017-03-16 15:07:34 [ main:4357 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4359 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4359 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@20b55243]
2017-03-16 15:07:34 [ main:4361 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@20b55243] after transaction
2017-03-16 15:07:34 [ main:4361 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4361 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4362 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@19d2e66e] for Hibernate transaction
2017-03-16 15:07:34 [ main:4362 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@19d2e66e]
2017-03-16 15:07:34 [ main:4362 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4363 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4363 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@19d2e66e]
2017-03-16 15:07:34 [ main:4364 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@19d2e66e] after transaction
2017-03-16 15:07:34 [ main:4364 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4371 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4378 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4378 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@175bb1df] for Hibernate transaction
2017-03-16 15:07:34 [ main:4378 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@175bb1df]
2017-03-16 15:07:34 [ main:4379 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4384 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4384 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@175bb1df] for Hibernate transaction
2017-03-16 15:07:34 [ main:4384 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4385 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4385 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@175bb1df] for Hibernate transaction
2017-03-16 15:07:34 [ main:4385 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4386 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4386 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@175bb1df]
2017-03-16 15:07:34 [ main:4387 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@175bb1df] after transaction
2017-03-16 15:07:34 [ main:4387 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4395 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4399 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.addNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4399 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@26a9a0b8] for Hibernate transaction
2017-03-16 15:07:34 [ main:4399 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@26a9a0b8]
2017-03-16 15:07:34 [ main:4400 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4400 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4400 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@26a9a0b8]
2017-03-16 15:07:34 [ main:4402 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@26a9a0b8] after transaction
2017-03-16 15:07:34 [ main:4402 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4402 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4403 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@14296cf1] for Hibernate transaction
2017-03-16 15:07:34 [ main:4403 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14296cf1]
2017-03-16 15:07:34 [ main:4403 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4404 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4404 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14296cf1]
2017-03-16 15:07:34 [ main:4405 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@14296cf1] after transaction
2017-03-16 15:07:34 [ main:4405 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4420 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4430 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4430 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2fc545e1] for Hibernate transaction
2017-03-16 15:07:34 [ main:4430 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2fc545e1]
2017-03-16 15:07:34 [ main:4431 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4438 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4439 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2fc545e1]
2017-03-16 15:07:34 [ main:4442 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2fc545e1] after transaction
2017-03-16 15:07:34 [ main:4442 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4455 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4462 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4462 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4cde17e5] for Hibernate transaction
2017-03-16 15:07:34 [ main:4462 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4cde17e5]
2017-03-16 15:07:34 [ main:4462 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4463 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4463 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4cde17e5]
2017-03-16 15:07:34 [ main:4464 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4cde17e5] after transaction
2017-03-16 15:07:34 [ main:4464 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4464 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4464 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5a0e5fed] for Hibernate transaction
2017-03-16 15:07:34 [ main:4464 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5a0e5fed]
2017-03-16 15:07:34 [ main:4464 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4465 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4465 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5a0e5fed]
2017-03-16 15:07:34 [ main:4466 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5a0e5fed] after transaction
2017-03-16 15:07:34 [ main:4466 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4466 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4466 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5830babd] for Hibernate transaction
2017-03-16 15:07:34 [ main:4466 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5830babd]
2017-03-16 15:07:34 [ main:4467 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4467 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4467 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5830babd]
2017-03-16 15:07:34 [ main:4468 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5830babd] after transaction
2017-03-16 15:07:34 [ main:4468 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4468 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4468 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3f651345] for Hibernate transaction
2017-03-16 15:07:34 [ main:4468 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3f651345]
2017-03-16 15:07:34 [ main:4469 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4470 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4470 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3f651345]
2017-03-16 15:07:34 [ main:4470 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3f651345] after transaction
2017-03-16 15:07:34 [ main:4470 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4479 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4485 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4485 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3826ea10] for Hibernate transaction
2017-03-16 15:07:34 [ main:4485 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3826ea10]
2017-03-16 15:07:34 [ main:4486 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4489 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4489 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3826ea10]
2017-03-16 15:07:34 [ main:4490 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3826ea10] after transaction
2017-03-16 15:07:34 [ main:4490 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4498 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4504 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4504 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3fbd1406] for Hibernate transaction
2017-03-16 15:07:34 [ main:4504 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3fbd1406]
2017-03-16 15:07:34 [ main:4504 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4506 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4506 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3fbd1406] for Hibernate transaction
2017-03-16 15:07:34 [ main:4506 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4507 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4507 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3fbd1406]
2017-03-16 15:07:34 [ main:4508 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3fbd1406] after transaction
2017-03-16 15:07:34 [ main:4508 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4515 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4521 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4521 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7387f99a] for Hibernate transaction
2017-03-16 15:07:34 [ main:4521 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7387f99a]
2017-03-16 15:07:34 [ main:4522 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4522 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4522 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7387f99a]
2017-03-16 15:07:34 [ main:4523 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7387f99a] after transaction
2017-03-16 15:07:34 [ main:4523 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4523 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4523 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@57b012c1] for Hibernate transaction
2017-03-16 15:07:34 [ main:4523 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@57b012c1]
2017-03-16 15:07:34 [ main:4524 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4526 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4526 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@57b012c1]
2017-03-16 15:07:34 [ main:4526 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@57b012c1] after transaction
2017-03-16 15:07:34 [ main:4526 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4535 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4542 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4542 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1b32deb7] for Hibernate transaction
2017-03-16 15:07:34 [ main:4542 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1b32deb7]
2017-03-16 15:07:34 [ main:4542 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4543 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4543 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1b32deb7]
2017-03-16 15:07:34 [ main:4544 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1b32deb7] after transaction
2017-03-16 15:07:34 [ main:4544 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4544 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4544 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@53a46a8f] for Hibernate transaction
2017-03-16 15:07:34 [ main:4544 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@53a46a8f]
2017-03-16 15:07:34 [ main:4544 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4545 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4545 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@53a46a8f]
2017-03-16 15:07:34 [ main:4546 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@53a46a8f] after transaction
2017-03-16 15:07:34 [ main:4546 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4553 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4559 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4559 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2943ebbf] for Hibernate transaction
2017-03-16 15:07:34 [ main:4559 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2943ebbf]
2017-03-16 15:07:34 [ main:4559 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4564 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4564 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2943ebbf]
2017-03-16 15:07:34 [ main:4565 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2943ebbf] after transaction
2017-03-16 15:07:34 [ main:4565 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4572 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4578 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4578 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@498028b0] for Hibernate transaction
2017-03-16 15:07:34 [ main:4578 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@498028b0]
2017-03-16 15:07:34 [ main:4578 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4582 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4582 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@498028b0]
2017-03-16 15:07:34 [ main:4583 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@498028b0] after transaction
2017-03-16 15:07:34 [ main:4583 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4590 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4597 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeTypes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4597 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2f6be385] for Hibernate transaction
2017-03-16 15:07:34 [ main:4597 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f6be385]
2017-03-16 15:07:34 [ main:4597 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4597 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4598 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f6be385]
2017-03-16 15:07:34 [ main:4598 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f6be385] after transaction
2017-03-16 15:07:34 [ main:4598 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4607 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4616 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4616 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@760d62e0] for Hibernate transaction
2017-03-16 15:07:34 [ main:4616 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@760d62e0]
2017-03-16 15:07:34 [ main:4617 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4618 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4618 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@760d62e0] for Hibernate transaction
2017-03-16 15:07:34 [ main:4619 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4620 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4620 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@760d62e0] for Hibernate transaction
2017-03-16 15:07:34 [ main:4620 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4624 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4624 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@760d62e0] for Hibernate transaction
2017-03-16 15:07:34 [ main:4624 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4626 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4626 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@760d62e0]
2017-03-16 15:07:34 [ main:4627 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@760d62e0] after transaction
2017-03-16 15:07:34 [ main:4627 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4637 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4644 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4645 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@266eb4c3] for Hibernate transaction
2017-03-16 15:07:34 [ main:4645 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@266eb4c3]
2017-03-16 15:07:34 [ main:4645 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4647 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4647 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@266eb4c3]
2017-03-16 15:07:34 [ main:4648 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@266eb4c3] after transaction
2017-03-16 15:07:34 [ main:4648 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4660 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4666 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4666 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@677dd166] for Hibernate transaction
2017-03-16 15:07:34 [ main:4666 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@677dd166]
2017-03-16 15:07:34 [ main:4666 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4668 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4668 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@677dd166] for Hibernate transaction
2017-03-16 15:07:34 [ main:4668 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4669 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4669 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@677dd166] for Hibernate transaction
2017-03-16 15:07:34 [ main:4669 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4670 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4670 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@677dd166] for Hibernate transaction
2017-03-16 15:07:34 [ main:4670 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4672 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4672 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@677dd166] for Hibernate transaction
2017-03-16 15:07:34 [ main:4672 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4673 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4674 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@677dd166] for Hibernate transaction
2017-03-16 15:07:34 [ main:4674 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4674 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:4674 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@677dd166] for Hibernate transaction
2017-03-16 15:07:34 [ main:4674 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4675 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4675 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@677dd166]
2017-03-16 15:07:34 [ main:4676 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@677dd166] after transaction
2017-03-16 15:07:34 [ main:4676 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4688 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4699 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRoleMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4699 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@71da4e28] for Hibernate transaction
2017-03-16 15:07:34 [ main:4699 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@71da4e28]
2017-03-16 15:07:34 [ main:4700 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4703 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4703 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@71da4e28]
2017-03-16 15:07:34 [ main:4703 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@71da4e28] after transaction
2017-03-16 15:07:34 [ main:4703 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4704 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4704 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@26f8f92e] for Hibernate transaction
2017-03-16 15:07:34 [ main:4704 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@26f8f92e]
2017-03-16 15:07:34 [ main:4704 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4705 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4705 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@26f8f92e]
2017-03-16 15:07:34 [ main:4705 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@26f8f92e] after transaction
2017-03-16 15:07:34 [ main:4705 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4721 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4726 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.addRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4726 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@76c6415a] for Hibernate transaction
2017-03-16 15:07:34 [ main:4726 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@76c6415a]
2017-03-16 15:07:34 [ main:4727 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4727 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4727 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@76c6415a]
2017-03-16 15:07:34 [ main:4728 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@76c6415a] after transaction
2017-03-16 15:07:34 [ main:4728 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4728 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4728 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@18a76cea] for Hibernate transaction
2017-03-16 15:07:34 [ main:4728 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@18a76cea]
2017-03-16 15:07:34 [ main:4728 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4729 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4729 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@18a76cea]
2017-03-16 15:07:34 [ main:4730 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@18a76cea] after transaction
2017-03-16 15:07:34 [ main:4730 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4740 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4746 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4746 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7440b539] for Hibernate transaction
2017-03-16 15:07:34 [ main:4746 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7440b539]
2017-03-16 15:07:34 [ main:4746 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4749 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4749 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7440b539]
2017-03-16 15:07:34 [ main:4750 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7440b539] after transaction
2017-03-16 15:07:34 [ main:4750 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4760 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4766 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4766 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3cc46a] for Hibernate transaction
2017-03-16 15:07:34 [ main:4766 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3cc46a]
2017-03-16 15:07:34 [ main:4766 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4767 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4767 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3cc46a]
2017-03-16 15:07:34 [ main:4767 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3cc46a] after transaction
2017-03-16 15:07:34 [ main:4768 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4768 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4768 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@21450508] for Hibernate transaction
2017-03-16 15:07:34 [ main:4768 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@21450508]
2017-03-16 15:07:34 [ main:4768 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4769 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4769 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@21450508]
2017-03-16 15:07:34 [ main:4769 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@21450508] after transaction
2017-03-16 15:07:34 [ main:4769 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4779 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4784 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4784 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@22559755] for Hibernate transaction
2017-03-16 15:07:34 [ main:4784 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@22559755]
2017-03-16 15:07:34 [ main:4785 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4787 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4788 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@22559755]
2017-03-16 15:07:34 [ main:4788 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@22559755] after transaction
2017-03-16 15:07:34 [ main:4788 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4798 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4803 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4803 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5470e2f4] for Hibernate transaction
2017-03-16 15:07:34 [ main:4803 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5470e2f4]
2017-03-16 15:07:34 [ main:4803 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4807 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4807 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5470e2f4] for Hibernate transaction
2017-03-16 15:07:34 [ main:4807 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4810 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4810 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@5470e2f4] for Hibernate transaction
2017-03-16 15:07:34 [ main:4810 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4812 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4812 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5470e2f4]
2017-03-16 15:07:34 [ main:4813 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5470e2f4] after transaction
2017-03-16 15:07:34 [ main:4813 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4824 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4832 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateParent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4832 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1c8987b7] for Hibernate transaction
2017-03-16 15:07:34 [ main:4832 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1c8987b7]
2017-03-16 15:07:34 [ main:4832 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4836 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4836 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1c8987b7]
2017-03-16 15:07:34 [ main:4837 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1c8987b7] after transaction
2017-03-16 15:07:34 [ main:4837 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4838 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4838 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7315e196] for Hibernate transaction
2017-03-16 15:07:34 [ main:4839 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7315e196]
2017-03-16 15:07:34 [ main:4839 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4840 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4840 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7315e196]
2017-03-16 15:07:34 [ main:4842 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7315e196] after transaction
2017-03-16 15:07:34 [ main:4842 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4857 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4864 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4864 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4aae6c4e] for Hibernate transaction
2017-03-16 15:07:34 [ main:4864 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4aae6c4e]
2017-03-16 15:07:34 [ main:4865 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4866 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4866 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4aae6c4e] for Hibernate transaction
2017-03-16 15:07:34 [ main:4866 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4868 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4868 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4aae6c4e] for Hibernate transaction
2017-03-16 15:07:34 [ main:4868 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4869 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4869 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@4aae6c4e] for Hibernate transaction
2017-03-16 15:07:34 [ main:4870 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4870 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4870 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4aae6c4e]
2017-03-16 15:07:34 [ main:4871 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4aae6c4e] after transaction
2017-03-16 15:07:34 [ main:4871 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4882 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4888 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4888 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@552940f3] for Hibernate transaction
2017-03-16 15:07:34 [ main:4888 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@552940f3]
2017-03-16 15:07:34 [ main:4888 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4890 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4890 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@552940f3]
2017-03-16 15:07:34 [ main:4891 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@552940f3] after transaction
2017-03-16 15:07:34 [ main:4891 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4891 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4891 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6442aec9] for Hibernate transaction
2017-03-16 15:07:34 [ main:4891 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6442aec9]
2017-03-16 15:07:34 [ main:4892 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4893 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4893 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6442aec9]
2017-03-16 15:07:34 [ main:4893 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6442aec9] after transaction
2017-03-16 15:07:34 [ main:4893 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4903 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4908 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.deleteRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4908 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@32a55f49] for Hibernate transaction
2017-03-16 15:07:34 [ main:4908 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@32a55f49]
2017-03-16 15:07:34 [ main:4908 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4910 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:4910 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@32a55f49] for Hibernate transaction
2017-03-16 15:07:34 [ main:4910 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4912 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:34 [ main:4912 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@32a55f49] for Hibernate transaction
2017-03-16 15:07:34 [ main:4912 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4913 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4913 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@32a55f49]
2017-03-16 15:07:34 [ main:4913 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@32a55f49] after transaction
2017-03-16 15:07:34 [ main:4913 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4913 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4913 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@751cd743] for Hibernate transaction
2017-03-16 15:07:34 [ main:4914 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@751cd743]
2017-03-16 15:07:34 [ main:4914 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4914 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4914 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@751cd743]
2017-03-16 15:07:34 [ main:4915 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@751cd743] after transaction
2017-03-16 15:07:34 [ main:4915 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4915 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:07:34 [ main:4915 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4915 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@54be0452] for Hibernate transaction
2017-03-16 15:07:34 [ main:4915 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@54be0452]
2017-03-16 15:07:34 [ main:4915 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4916 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4916 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@54be0452]
2017-03-16 15:07:34 [ main:4916 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@54be0452] after transaction
2017-03-16 15:07:34 [ main:4916 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4917 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:4917 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4917 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@266cac2b] for Hibernate transaction
2017-03-16 15:07:34 [ main:4917 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@266cac2b]
2017-03-16 15:07:34 [ main:4917 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4919 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4919 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@266cac2b]
2017-03-16 15:07:34 [ main:4920 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@266cac2b] after transaction
2017-03-16 15:07:34 [ main:4920 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4929 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4934 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4934 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5fb696f0] for Hibernate transaction
2017-03-16 15:07:34 [ main:4935 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5fb696f0]
2017-03-16 15:07:34 [ main:4935 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4936 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4936 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5fb696f0]
2017-03-16 15:07:34 [ main:4936 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5fb696f0] after transaction
2017-03-16 15:07:34 [ main:4936 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4936 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4936 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@21c35cac] for Hibernate transaction
2017-03-16 15:07:34 [ main:4936 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@21c35cac]
2017-03-16 15:07:34 [ main:4937 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4937 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4937 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@21c35cac]
2017-03-16 15:07:34 [ main:4938 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@21c35cac] after transaction
2017-03-16 15:07:34 [ main:4938 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4949 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4954 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4954 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3e66af6b] for Hibernate transaction
2017-03-16 15:07:34 [ main:4954 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3e66af6b]
2017-03-16 15:07:34 [ main:4954 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4955 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4955 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3e66af6b] for Hibernate transaction
2017-03-16 15:07:34 [ main:4955 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4956 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4956 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3e66af6b] for Hibernate transaction
2017-03-16 15:07:34 [ main:4956 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4957 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4957 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3e66af6b] for Hibernate transaction
2017-03-16 15:07:34 [ main:4957 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4957 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4957 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3e66af6b] for Hibernate transaction
2017-03-16 15:07:34 [ main:4958 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4958 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4959 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3e66af6b]
2017-03-16 15:07:34 [ main:4959 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3e66af6b] after transaction
2017-03-16 15:07:34 [ main:4959 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4968 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4974 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4974 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1e0137f1] for Hibernate transaction
2017-03-16 15:07:34 [ main:4974 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1e0137f1]
2017-03-16 15:07:34 [ main:4974 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4975 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4975 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1e0137f1] for Hibernate transaction
2017-03-16 15:07:34 [ main:4975 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4976 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4976 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1e0137f1] for Hibernate transaction
2017-03-16 15:07:34 [ main:4976 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4977 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4977 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1e0137f1] for Hibernate transaction
2017-03-16 15:07:34 [ main:4977 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4978 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4978 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1e0137f1] for Hibernate transaction
2017-03-16 15:07:34 [ main:4978 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4978 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4978 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@1e0137f1] for Hibernate transaction
2017-03-16 15:07:34 [ main:4979 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:4979 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4979 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1e0137f1]
2017-03-16 15:07:34 [ main:4980 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1e0137f1] after transaction
2017-03-16 15:07:34 [ main:4980 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:4990 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:4995 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:4995 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7b4f3d95] for Hibernate transaction
2017-03-16 15:07:34 [ main:4995 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7b4f3d95]
2017-03-16 15:07:34 [ main:4995 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:4996 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:4996 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7b4f3d95]
2017-03-16 15:07:34 [ main:4996 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7b4f3d95] after transaction
2017-03-16 15:07:34 [ main:4997 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5009 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:5019 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5019 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@62cf32f0] for Hibernate transaction
2017-03-16 15:07:34 [ main:5019 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@62cf32f0]
2017-03-16 15:07:34 [ main:5019 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5021 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5022 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@62cf32f0]
2017-03-16 15:07:34 [ main:5022 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@62cf32f0] after transaction
2017-03-16 15:07:34 [ main:5022 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5022 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5022 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7f35e1e9] for Hibernate transaction
2017-03-16 15:07:34 [ main:5022 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f35e1e9]
2017-03-16 15:07:34 [ main:5023 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5023 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5023 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f35e1e9]
2017-03-16 15:07:34 [ main:5024 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f35e1e9] after transaction
2017-03-16 15:07:34 [ main:5024 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5028 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:5030 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.addRoleNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5030 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3ad85839] for Hibernate transaction
2017-03-16 15:07:34 [ main:5030 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3ad85839]
2017-03-16 15:07:34 [ main:5031 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5031 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5031 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3ad85839]
2017-03-16 15:07:34 [ main:5032 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3ad85839] after transaction
2017-03-16 15:07:34 [ main:5032 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5037 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:5044 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5044 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6f08589b] for Hibernate transaction
2017-03-16 15:07:34 [ main:5044 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6f08589b]
2017-03-16 15:07:34 [ main:5046 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5047 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5047 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6f08589b]
2017-03-16 15:07:34 [ main:5048 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6f08589b] after transaction
2017-03-16 15:07:34 [ main:5048 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5053 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:5060 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5060 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4cac5d94] for Hibernate transaction
2017-03-16 15:07:34 [ main:5060 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4cac5d94]
2017-03-16 15:07:34 [ main:5060 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5061 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5061 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4cac5d94]
2017-03-16 15:07:34 [ main:5062 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4cac5d94] after transaction
2017-03-16 15:07:34 [ main:5062 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5062 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5062 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7d78d7b4] for Hibernate transaction
2017-03-16 15:07:34 [ main:5063 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7d78d7b4]
2017-03-16 15:07:34 [ main:5063 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5064 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5064 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7d78d7b4]
2017-03-16 15:07:34 [ main:5065 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7d78d7b4] after transaction
2017-03-16 15:07:34 [ main:5065 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5070 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:5076 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5076 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@61f58396] for Hibernate transaction
2017-03-16 15:07:34 [ main:5076 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@61f58396]
2017-03-16 15:07:34 [ main:5077 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5078 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5078 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@61f58396]
2017-03-16 15:07:34 [ main:5079 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@61f58396] after transaction
2017-03-16 15:07:34 [ main:5079 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5087 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:5092 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5092 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1ffe8bbe] for Hibernate transaction
2017-03-16 15:07:34 [ main:5092 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1ffe8bbe]
2017-03-16 15:07:34 [ main:5093 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5094 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5094 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1ffe8bbe]
2017-03-16 15:07:34 [ main:5095 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1ffe8bbe] after transaction
2017-03-16 15:07:34 [ main:5095 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5102 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:5107 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5107 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5ef21bc4] for Hibernate transaction
2017-03-16 15:07:34 [ main:5108 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5ef21bc4]
2017-03-16 15:07:34 [ main:5108 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5109 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5109 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5ef21bc4]
2017-03-16 15:07:34 [ main:5110 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5ef21bc4] after transaction
2017-03-16 15:07:34 [ main:5110 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5110 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5110 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2225be1e] for Hibernate transaction
2017-03-16 15:07:34 [ main:5110 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2225be1e]
2017-03-16 15:07:34 [ main:5111 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5113 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5113 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2225be1e]
2017-03-16 15:07:34 [ main:5114 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2225be1e] after transaction
2017-03-16 15:07:34 [ main:5114 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5120 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:5127 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5127 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3d03811f] for Hibernate transaction
2017-03-16 15:07:34 [ main:5127 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3d03811f]
2017-03-16 15:07:34 [ main:5128 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5128 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:5131 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d03811f] for Hibernate transaction
2017-03-16 15:07:34 [ main:5131 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:5132 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d03811f] for Hibernate transaction
2017-03-16 15:07:34 [ main:5132 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:5133 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d03811f] for Hibernate transaction
2017-03-16 15:07:34 [ main:5133 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:5134 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:5135 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d03811f] for Hibernate transaction
2017-03-16 15:07:34 [ main:5135 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:5137 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d03811f] for Hibernate transaction
2017-03-16 15:07:34 [ main:5137 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:5138 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d03811f] for Hibernate transaction
2017-03-16 15:07:34 [ main:5138 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:5138 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d03811f] for Hibernate transaction
2017-03-16 15:07:34 [ main:5138 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:5138 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5138 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3d03811f]
2017-03-16 15:07:34 [ main:5140 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3d03811f] after transaction
2017-03-16 15:07:34 [ main:5140 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5148 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:07:34 [ main:5155 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:07:34 [ main:5155 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5155 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@645f9828] for Hibernate transaction
2017-03-16 15:07:34 [ main:5155 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@645f9828]
2017-03-16 15:07:34 [ main:5156 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5157 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5157 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@645f9828]
2017-03-16 15:07:34 [ main:5158 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@645f9828] after transaction
2017-03-16 15:07:34 [ main:5158 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:07:34 [ main:5158 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:07:34 [ main:5158 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@592b3893] for Hibernate transaction
2017-03-16 15:07:34 [ main:5158 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@592b3893]
2017-03-16 15:07:34 [ main:5160 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:07:34 [ main:5160 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:07:34 [ main:5189 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@592b3893] for Hibernate transaction
2017-03-16 15:07:34 [ main:5189 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:5190 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@592b3893] for Hibernate transaction
2017-03-16 15:07:34 [ main:5190 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:5191 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@592b3893] for Hibernate transaction
2017-03-16 15:07:34 [ main:5191 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:07:34 [ main:5193 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:07:34 [ main:5193 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@592b3893]
2017-03-16 15:07:34 [ main:5194 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@592b3893] after transaction
2017-03-16 15:07:34 [ main:5194 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:19:57 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@56c5711e: display name [org.springframework.context.support.ClassPathXmlApplicationContext@56c5711e]; startup date [Thu Mar 16 15:19:57 CST 2017]; root of context hierarchy
2017-03-16 15:19:57 [ main:60 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 15:19:57 [ main:83 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 15:19:57 [ main:109 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 15:19:57 [ main:110 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 15:19:59 [ main:1759 ] - [ DEBUG ] Loading bean definitions
2017-03-16 15:19:59 [ main:1786 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 15:19:59 [ main:1809 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 15:19:59 [ main:1809 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@56c5711e]: org.springframework.beans.factory.support.DefaultListableBeanFactory@1c787691
2017-03-16 15:19:59 [ main:1810 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@56c5711e: display name [org.springframework.context.support.ClassPathXmlApplicationContext@56c5711e]; startup date [Thu Mar 16 15:19:57 CST 2017]; root of context hierarchy
2017-03-16 15:19:59 [ main:1825 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:19:59 [ main:1825 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:19:59 [ main:1841 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:1852 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:19:59 [ main:1853 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@4e907ea2]
2017-03-16 15:19:59 [ main:1854 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@25956b11]
2017-03-16 15:19:59 [ main:1856 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@1c787691: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 15:19:59 [ main:1856 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 15:19:59 [ main:1856 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 15:19:59 [ main:1859 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:1872 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:19:59 [ main:1872 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:19:59 [ main:1873 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:1877 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:19:59 [ main:1877 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:19:59 [ main:1878 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:1881 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:19:59 [ main:1881 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:19:59 [ main:1884 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 15:19:59 [ main:1884 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 15:19:59 [ main:1884 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 15:19:59 [ main:1896 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:1903 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 15:19:59 [ main:1904 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 15:19:59 [ main:2192 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 15:19:59 [ main:2503 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:19:59 [ main:2505 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 15:19:59 [ main:2505 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 15:19:59 [ main:2505 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 15:19:59 [ main:2506 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:2509 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:19:59 [ main:2510 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:19:59 [ main:2516 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:19:59 [ main:2524 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2530 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:19:59 [ main:2535 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@3f71f9f2]
2017-03-16 15:19:59 [ main:2585 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:19:59 [ main:2585 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:19:59 [ main:2586 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:2588 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 15:19:59 [ main:2588 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 15:19:59 [ main:2592 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:2596 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:19:59 [ main:2596 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 15:19:59 [ main:2601 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@68062264] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 15:19:59 [ main:2602 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:19:59 [ main:2602 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 15:19:59 [ main:2603 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:19:59 [ main:2603 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:19:59 [ main:2603 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:19:59 [ main:2605 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 15:19:59 [ main:2605 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2605 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 15:19:59 [ main:2605 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2605 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 15:19:59 [ main:2605 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2606 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2607 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:19:59 [ main:2608 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:19:59 [ main:2609 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:19:59 [ main:2629 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 15:19:59 [ main:2629 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 15:19:59 [ main:2629 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 15:19:59 [ main:2629 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:2632 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:19:59 [ main:2632 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:19:59 [ main:2632 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2632 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:19:59 [ main:2632 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@410887db]
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2634 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 15:19:59 [ main:2635 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2636 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2637 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:19:59 [ main:2638 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:19:59 [ main:2653 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 15:19:59 [ main:2653 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 15:19:59 [ main:2653 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 15:19:59 [ main:2653 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:2656 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:19:59 [ main:2657 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:19:59 [ main:2657 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2657 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:19:59 [ main:2657 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@6309acba]
2017-03-16 15:19:59 [ main:2658 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2658 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 15:19:59 [ main:2658 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2658 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 15:19:59 [ main:2658 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2658 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 15:19:59 [ main:2660 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:19:59 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:19:59 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:19:59 [ main:2678 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 15:19:59 [ main:2679 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 15:19:59 [ main:2679 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 15:19:59 [ main:2679 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 15:19:59 [ main:2681 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:19:59 [ main:2681 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:19:59 [ main:2682 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2682 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:19:59 [ main:2682 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@2b28b29c]
2017-03-16 15:19:59 [ main:2683 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2683 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 15:19:59 [ main:2683 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2683 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 15:19:59 [ main:2683 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2683 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 15:19:59 [ main:2683 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2683 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 15:19:59 [ main:2683 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2683 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2684 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:19:59 [ main:2685 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:20:00 [ main:2686 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:20:00 [ main:2687 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:20:00 [ main:2707 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 15:20:00 [ main:2707 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:00 [ main:2707 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 15:20:00 [ main:2707 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 15:20:00 [ main:2710 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:20:00 [ main:2710 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:00 [ main:2711 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2711 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:20:00 [ main:2711 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@3837f691]
2017-03-16 15:20:00 [ main:2712 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 15:20:00 [ main:2712 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2712 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 15:20:00 [ main:2712 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2712 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 15:20:00 [ main:2712 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2712 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:20:00 [ main:2712 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:20:00 [ main:2715 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:20:00 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:20:00 [ main:2717 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:20:00 [ main:2717 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:20:00 [ main:2717 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:20:00 [ main:2717 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:20:00 [ main:2728 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 15:20:00 [ main:2728 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 15:20:00 [ main:2728 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:20:00 [ main:2728 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:20:00 [ main:2728 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:20:00 [ main:2728 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:00 [ main:2728 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:00 [ main:2791 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:2814 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5b21399a] for Hibernate transaction
2017-03-16 15:20:00 [ main:2815 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5b21399a]
2017-03-16 15:20:00 [ main:2829 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:2941 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:2941 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5b21399a]
2017-03-16 15:20:00 [ main:2942 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5b21399a] after transaction
2017-03-16 15:20:00 [ main:2942 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:2943 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:2943 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5e4da34e] for Hibernate transaction
2017-03-16 15:20:00 [ main:2943 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5e4da34e]
2017-03-16 15:20:00 [ main:2944 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:2958 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:2958 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5e4da34e]
2017-03-16 15:20:00 [ main:2958 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5e4da34e] after transaction
2017-03-16 15:20:00 [ main:2958 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:2965 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:00 [ main:2973 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.getRoleByUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:2973 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@43f66bae] for Hibernate transaction
2017-03-16 15:20:00 [ main:2973 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@43f66bae]
2017-03-16 15:20:00 [ main:2973 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:2973 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:00 [ main:2974 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@43f66bae] for Hibernate transaction
2017-03-16 15:20:00 [ main:2974 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:00 [ main:2996 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:00 [ main:2996 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@43f66bae] for Hibernate transaction
2017-03-16 15:20:00 [ main:2996 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:00 [ main:3016 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@43f66bae] for Hibernate transaction
2017-03-16 15:20:00 [ main:3016 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:00 [ main:3017 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3017 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@43f66bae]
2017-03-16 15:20:00 [ main:3021 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@43f66bae] after transaction
2017-03-16 15:20:00 [ main:3021 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3026 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:00 [ main:3032 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3032 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2c7a7eb5] for Hibernate transaction
2017-03-16 15:20:00 [ main:3032 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2c7a7eb5]
2017-03-16 15:20:00 [ main:3033 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3037 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3037 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2c7a7eb5]
2017-03-16 15:20:00 [ main:3038 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2c7a7eb5] after transaction
2017-03-16 15:20:00 [ main:3038 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3038 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3038 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3343fb14] for Hibernate transaction
2017-03-16 15:20:00 [ main:3038 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3343fb14]
2017-03-16 15:20:00 [ main:3038 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3039 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3039 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3343fb14]
2017-03-16 15:20:00 [ main:3040 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3343fb14] after transaction
2017-03-16 15:20:00 [ main:3040 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3045 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:00 [ main:3051 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3051 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7cf54ad7] for Hibernate transaction
2017-03-16 15:20:00 [ main:3051 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7cf54ad7]
2017-03-16 15:20:00 [ main:3051 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3052 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3052 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7cf54ad7]
2017-03-16 15:20:00 [ main:3053 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7cf54ad7] after transaction
2017-03-16 15:20:00 [ main:3053 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3059 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:00 [ main:3065 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3065 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1aba6f2d] for Hibernate transaction
2017-03-16 15:20:00 [ main:3065 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1aba6f2d]
2017-03-16 15:20:00 [ main:3066 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3070 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3070 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1aba6f2d]
2017-03-16 15:20:00 [ main:3071 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1aba6f2d] after transaction
2017-03-16 15:20:00 [ main:3071 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3071 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3071 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@321baa4a] for Hibernate transaction
2017-03-16 15:20:00 [ main:3071 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@321baa4a]
2017-03-16 15:20:00 [ main:3072 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3076 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3076 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@321baa4a]
2017-03-16 15:20:00 [ main:3076 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@321baa4a] after transaction
2017-03-16 15:20:00 [ main:3076 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3082 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:00 [ main:3088 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3088 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6ad3ad65] for Hibernate transaction
2017-03-16 15:20:00 [ main:3088 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6ad3ad65]
2017-03-16 15:20:00 [ main:3089 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3090 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3090 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6ad3ad65]
2017-03-16 15:20:00 [ main:3091 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6ad3ad65] after transaction
2017-03-16 15:20:00 [ main:3091 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3096 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:00 [ main:3102 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3102 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@206564e9] for Hibernate transaction
2017-03-16 15:20:00 [ main:3103 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@206564e9]
2017-03-16 15:20:00 [ main:3103 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3104 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3104 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@206564e9]
2017-03-16 15:20:00 [ main:3105 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@206564e9] after transaction
2017-03-16 15:20:00 [ main:3105 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3110 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:00 [ main:3113 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUsers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3113 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@671683bc] for Hibernate transaction
2017-03-16 15:20:00 [ main:3113 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@671683bc]
2017-03-16 15:20:00 [ main:3114 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3119 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3119 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@671683bc]
2017-03-16 15:20:00 [ main:3123 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@671683bc] after transaction
2017-03-16 15:20:00 [ main:3123 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3124 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3124 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4e1a9338] for Hibernate transaction
2017-03-16 15:20:00 [ main:3124 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4e1a9338]
2017-03-16 15:20:00 [ main:3124 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3125 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3125 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4e1a9338]
2017-03-16 15:20:00 [ main:3127 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4e1a9338] after transaction
2017-03-16 15:20:00 [ main:3127 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3132 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:00 [ main:3135 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3135 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@42918ced] for Hibernate transaction
2017-03-16 15:20:00 [ main:3135 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@42918ced]
2017-03-16 15:20:00 [ main:3136 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3136 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3136 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@42918ced]
2017-03-16 15:20:00 [ main:3138 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@42918ced] after transaction
2017-03-16 15:20:00 [ main:3138 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3149 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:00 [ main:3162 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3163 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5755eea7] for Hibernate transaction
2017-03-16 15:20:00 [ main:3163 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5755eea7]
2017-03-16 15:20:00 [ main:3163 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3168 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3168 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5755eea7]
2017-03-16 15:20:00 [ main:3169 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5755eea7] after transaction
2017-03-16 15:20:00 [ main:3169 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3169 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3170 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6f03ec0d] for Hibernate transaction
2017-03-16 15:20:00 [ main:3170 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6f03ec0d]
2017-03-16 15:20:00 [ main:3170 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3171 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3171 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6f03ec0d]
2017-03-16 15:20:00 [ main:3172 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6f03ec0d] after transaction
2017-03-16 15:20:00 [ main:3172 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3185 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:00 [ main:3191 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3191 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@20a2f418] for Hibernate transaction
2017-03-16 15:20:00 [ main:3191 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@20a2f418]
2017-03-16 15:20:00 [ main:3192 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3196 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3196 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@20a2f418]
2017-03-16 15:20:00 [ main:3197 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@20a2f418] after transaction
2017-03-16 15:20:00 [ main:3197 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3198 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3198 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@61dda64] for Hibernate transaction
2017-03-16 15:20:00 [ main:3198 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@61dda64]
2017-03-16 15:20:00 [ main:3198 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3204 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3204 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@61dda64]
2017-03-16 15:20:00 [ main:3205 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@61dda64] after transaction
2017-03-16 15:20:00 [ main:3205 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3205 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3205 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@22947acd] for Hibernate transaction
2017-03-16 15:20:00 [ main:3205 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@22947acd]
2017-03-16 15:20:00 [ main:3206 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3207 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3207 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@22947acd]
2017-03-16 15:20:00 [ main:3208 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@22947acd] after transaction
2017-03-16 15:20:00 [ main:3208 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3217 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:00 [ main:3221 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3222 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@618bed52] for Hibernate transaction
2017-03-16 15:20:00 [ main:3222 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@618bed52]
2017-03-16 15:20:00 [ main:3222 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3223 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3223 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@618bed52]
2017-03-16 15:20:00 [ main:3225 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@618bed52] after transaction
2017-03-16 15:20:00 [ main:3225 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3226 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3226 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5472184f] for Hibernate transaction
2017-03-16 15:20:00 [ main:3226 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5472184f]
2017-03-16 15:20:00 [ main:3226 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3227 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3228 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5472184f]
2017-03-16 15:20:00 [ main:3228 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5472184f] after transaction
2017-03-16 15:20:00 [ main:3228 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3229 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3229 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6a2dbeb8] for Hibernate transaction
2017-03-16 15:20:00 [ main:3229 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6a2dbeb8]
2017-03-16 15:20:00 [ main:3229 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3230 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3230 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6a2dbeb8]
2017-03-16 15:20:00 [ main:3232 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6a2dbeb8] after transaction
2017-03-16 15:20:00 [ main:3232 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3232 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3232 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4f9bc78] for Hibernate transaction
2017-03-16 15:20:00 [ main:3232 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f9bc78]
2017-03-16 15:20:00 [ main:3232 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3233 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3233 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f9bc78]
2017-03-16 15:20:00 [ main:3234 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f9bc78] after transaction
2017-03-16 15:20:00 [ main:3234 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3243 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:00 [ main:3249 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3249 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4820fe6] for Hibernate transaction
2017-03-16 15:20:00 [ main:3249 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4820fe6]
2017-03-16 15:20:00 [ main:3249 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3251 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3251 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4820fe6]
2017-03-16 15:20:00 [ main:3252 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4820fe6] after transaction
2017-03-16 15:20:00 [ main:3252 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3252 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3252 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4f86f8f7] for Hibernate transaction
2017-03-16 15:20:00 [ main:3252 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f86f8f7]
2017-03-16 15:20:00 [ main:3253 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3258 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3258 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f86f8f7]
2017-03-16 15:20:00 [ main:3259 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f86f8f7] after transaction
2017-03-16 15:20:00 [ main:3259 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3259 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3259 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@210e215c] for Hibernate transaction
2017-03-16 15:20:00 [ main:3259 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@210e215c]
2017-03-16 15:20:00 [ main:3260 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3261 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3261 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@210e215c]
2017-03-16 15:20:00 [ main:3262 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@210e215c] after transaction
2017-03-16 15:20:00 [ main:3262 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3262 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3262 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3ad74455] for Hibernate transaction
2017-03-16 15:20:00 [ main:3262 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3ad74455]
2017-03-16 15:20:00 [ main:3262 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3264 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3264 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3ad74455]
2017-03-16 15:20:00 [ main:3264 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3ad74455] after transaction
2017-03-16 15:20:00 [ main:3264 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3264 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3264 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@63f672fe] for Hibernate transaction
2017-03-16 15:20:00 [ main:3264 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@63f672fe]
2017-03-16 15:20:00 [ main:3265 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3266 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3266 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@63f672fe]
2017-03-16 15:20:00 [ main:3267 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@63f672fe] after transaction
2017-03-16 15:20:00 [ main:3267 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3267 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3267 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@64d6601] for Hibernate transaction
2017-03-16 15:20:00 [ main:3267 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@64d6601]
2017-03-16 15:20:00 [ main:3267 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3268 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3268 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@64d6601]
2017-03-16 15:20:00 [ main:3269 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@64d6601] after transaction
2017-03-16 15:20:00 [ main:3269 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3269 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3269 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@513c46e] for Hibernate transaction
2017-03-16 15:20:00 [ main:3269 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@513c46e]
2017-03-16 15:20:00 [ main:3270 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3271 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3271 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@513c46e]
2017-03-16 15:20:00 [ main:3271 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@513c46e] after transaction
2017-03-16 15:20:00 [ main:3271 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3279 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:00 [ main:3286 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3286 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@64399b3a] for Hibernate transaction
2017-03-16 15:20:00 [ main:3286 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@64399b3a]
2017-03-16 15:20:00 [ main:3286 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3288 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3288 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@64399b3a]
2017-03-16 15:20:00 [ main:3289 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@64399b3a] after transaction
2017-03-16 15:20:00 [ main:3289 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3289 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3289 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6c7ea146] for Hibernate transaction
2017-03-16 15:20:00 [ main:3289 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6c7ea146]
2017-03-16 15:20:00 [ main:3289 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3290 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3290 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6c7ea146]
2017-03-16 15:20:00 [ main:3292 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6c7ea146] after transaction
2017-03-16 15:20:00 [ main:3292 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3300 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:00 [ main:3305 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3305 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2153b39b] for Hibernate transaction
2017-03-16 15:20:00 [ main:3305 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2153b39b]
2017-03-16 15:20:00 [ main:3305 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3307 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3307 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2153b39b]
2017-03-16 15:20:00 [ main:3308 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2153b39b] after transaction
2017-03-16 15:20:00 [ main:3308 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3308 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3308 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@54a385cf] for Hibernate transaction
2017-03-16 15:20:00 [ main:3308 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@54a385cf]
2017-03-16 15:20:00 [ main:3308 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3311 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:00 [ main:3311 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@54a385cf] for Hibernate transaction
2017-03-16 15:20:00 [ main:3311 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:00 [ main:3312 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3312 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@54a385cf]
2017-03-16 15:20:00 [ main:3312 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@54a385cf] after transaction
2017-03-16 15:20:00 [ main:3312 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3312 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3313 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@39151d52] for Hibernate transaction
2017-03-16 15:20:00 [ main:3313 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@39151d52]
2017-03-16 15:20:00 [ main:3313 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3314 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3314 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@39151d52]
2017-03-16 15:20:00 [ main:3314 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@39151d52] after transaction
2017-03-16 15:20:00 [ main:3314 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3322 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:00 [ main:3346 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3346 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1af37801] for Hibernate transaction
2017-03-16 15:20:00 [ main:3346 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1af37801]
2017-03-16 15:20:00 [ main:3346 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3347 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3347 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1af37801]
2017-03-16 15:20:00 [ main:3347 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1af37801] after transaction
2017-03-16 15:20:00 [ main:3347 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3362 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3377 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3377 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@340db08d] for Hibernate transaction
2017-03-16 15:20:00 [ main:3377 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@340db08d]
2017-03-16 15:20:00 [ main:3377 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3394 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:00 [ main:3394 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@340db08d] for Hibernate transaction
2017-03-16 15:20:00 [ main:3394 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:00 [ main:3412 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3412 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@340db08d]
2017-03-16 15:20:00 [ main:3413 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@340db08d] after transaction
2017-03-16 15:20:00 [ main:3413 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3413 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3413 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7c54f14d] for Hibernate transaction
2017-03-16 15:20:00 [ main:3413 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7c54f14d]
2017-03-16 15:20:00 [ main:3413 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3414 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3414 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7c54f14d]
2017-03-16 15:20:00 [ main:3414 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7c54f14d] after transaction
2017-03-16 15:20:00 [ main:3415 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3415 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:00 [ main:3415 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3415 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@419aff0f] for Hibernate transaction
2017-03-16 15:20:00 [ main:3415 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@419aff0f]
2017-03-16 15:20:00 [ main:3415 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3418 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3418 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@419aff0f]
2017-03-16 15:20:00 [ main:3419 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@419aff0f] after transaction
2017-03-16 15:20:00 [ main:3419 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3431 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3439 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3440 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3ecfdb7e] for Hibernate transaction
2017-03-16 15:20:00 [ main:3440 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3ecfdb7e]
2017-03-16 15:20:00 [ main:3440 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3442 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3442 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3ecfdb7e]
2017-03-16 15:20:00 [ main:3442 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3ecfdb7e] after transaction
2017-03-16 15:20:00 [ main:3442 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3451 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3458 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3458 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2cbe1bb4] for Hibernate transaction
2017-03-16 15:20:00 [ main:3459 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2cbe1bb4]
2017-03-16 15:20:00 [ main:3459 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3463 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3463 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2cbe1bb4]
2017-03-16 15:20:00 [ main:3464 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2cbe1bb4] after transaction
2017-03-16 15:20:00 [ main:3464 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3474 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3480 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getParentId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3480 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@358843fd] for Hibernate transaction
2017-03-16 15:20:00 [ main:3481 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@358843fd]
2017-03-16 15:20:00 [ main:3481 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3482 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3482 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@358843fd]
2017-03-16 15:20:00 [ main:3483 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@358843fd] after transaction
2017-03-16 15:20:00 [ main:3483 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3492 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3499 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3499 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1ef53b2] for Hibernate transaction
2017-03-16 15:20:00 [ main:3499 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1ef53b2]
2017-03-16 15:20:00 [ main:3499 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3501 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3501 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1ef53b2]
2017-03-16 15:20:00 [ main:3503 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1ef53b2] after transaction
2017-03-16 15:20:00 [ main:3503 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3504 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3504 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2f48674a] for Hibernate transaction
2017-03-16 15:20:00 [ main:3504 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f48674a]
2017-03-16 15:20:00 [ main:3504 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3505 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3505 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f48674a]
2017-03-16 15:20:00 [ main:3506 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f48674a] after transaction
2017-03-16 15:20:00 [ main:3506 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3514 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3521 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3521 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7c91b9a2] for Hibernate transaction
2017-03-16 15:20:00 [ main:3521 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7c91b9a2]
2017-03-16 15:20:00 [ main:3522 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3527 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3527 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7c91b9a2] for Hibernate transaction
2017-03-16 15:20:00 [ main:3527 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:00 [ main:3528 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3528 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7c91b9a2] for Hibernate transaction
2017-03-16 15:20:00 [ main:3529 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:00 [ main:3529 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3529 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7c91b9a2]
2017-03-16 15:20:00 [ main:3530 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7c91b9a2] after transaction
2017-03-16 15:20:00 [ main:3530 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3540 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3544 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.addNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3544 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1cb150a] for Hibernate transaction
2017-03-16 15:20:00 [ main:3544 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1cb150a]
2017-03-16 15:20:00 [ main:3545 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3545 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3545 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1cb150a]
2017-03-16 15:20:00 [ main:3547 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1cb150a] after transaction
2017-03-16 15:20:00 [ main:3547 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3547 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3547 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6d3378ff] for Hibernate transaction
2017-03-16 15:20:00 [ main:3547 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6d3378ff]
2017-03-16 15:20:00 [ main:3548 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3549 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3549 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6d3378ff]
2017-03-16 15:20:00 [ main:3550 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6d3378ff] after transaction
2017-03-16 15:20:00 [ main:3550 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3560 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3570 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3570 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@de343db] for Hibernate transaction
2017-03-16 15:20:00 [ main:3570 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@de343db]
2017-03-16 15:20:00 [ main:3571 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3577 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3578 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@de343db]
2017-03-16 15:20:00 [ main:3582 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@de343db] after transaction
2017-03-16 15:20:00 [ main:3582 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3595 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3602 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3602 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@153a859b] for Hibernate transaction
2017-03-16 15:20:00 [ main:3603 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@153a859b]
2017-03-16 15:20:00 [ main:3604 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3605 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3605 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@153a859b]
2017-03-16 15:20:00 [ main:3606 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@153a859b] after transaction
2017-03-16 15:20:00 [ main:3606 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3607 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3607 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5c64f59] for Hibernate transaction
2017-03-16 15:20:00 [ main:3607 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5c64f59]
2017-03-16 15:20:00 [ main:3607 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3608 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3608 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5c64f59]
2017-03-16 15:20:00 [ main:3609 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5c64f59] after transaction
2017-03-16 15:20:00 [ main:3609 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3609 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3609 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7bd9780d] for Hibernate transaction
2017-03-16 15:20:00 [ main:3609 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7bd9780d]
2017-03-16 15:20:00 [ main:3609 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3610 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3610 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7bd9780d]
2017-03-16 15:20:00 [ main:3611 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7bd9780d] after transaction
2017-03-16 15:20:00 [ main:3611 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3611 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3611 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@9b8e430] for Hibernate transaction
2017-03-16 15:20:00 [ main:3611 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@9b8e430]
2017-03-16 15:20:00 [ main:3612 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3613 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3613 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@9b8e430]
2017-03-16 15:20:00 [ main:3613 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@9b8e430] after transaction
2017-03-16 15:20:00 [ main:3613 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3623 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3629 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3629 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7b456b23] for Hibernate transaction
2017-03-16 15:20:00 [ main:3630 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7b456b23]
2017-03-16 15:20:00 [ main:3630 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3634 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3634 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7b456b23]
2017-03-16 15:20:00 [ main:3634 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7b456b23] after transaction
2017-03-16 15:20:00 [ main:3634 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3644 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3651 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3651 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7bf12aa7] for Hibernate transaction
2017-03-16 15:20:00 [ main:3651 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7bf12aa7]
2017-03-16 15:20:00 [ main:3652 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3654 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3654 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7bf12aa7] for Hibernate transaction
2017-03-16 15:20:00 [ main:3654 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:00 [ main:3655 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3655 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7bf12aa7]
2017-03-16 15:20:00 [ main:3656 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7bf12aa7] after transaction
2017-03-16 15:20:00 [ main:3656 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3664 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:00 [ main:3671 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3671 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@689f69e0] for Hibernate transaction
2017-03-16 15:20:00 [ main:3671 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@689f69e0]
2017-03-16 15:20:00 [ main:3672 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3672 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3672 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@689f69e0]
2017-03-16 15:20:00 [ main:3673 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@689f69e0] after transaction
2017-03-16 15:20:00 [ main:3673 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3673 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:00 [ main:3673 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@edbf075] for Hibernate transaction
2017-03-16 15:20:00 [ main:3673 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@edbf075]
2017-03-16 15:20:00 [ main:3674 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:00 [ main:3676 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:00 [ main:3676 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@edbf075]
2017-03-16 15:20:00 [ main:3676 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@edbf075] after transaction
2017-03-16 15:20:00 [ main:3676 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:00 [ main:3685 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3693 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3693 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4f4ffd2f] for Hibernate transaction
2017-03-16 15:20:01 [ main:3693 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4f4ffd2f]
2017-03-16 15:20:01 [ main:3694 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3694 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3694 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4f4ffd2f]
2017-03-16 15:20:01 [ main:3695 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4f4ffd2f] after transaction
2017-03-16 15:20:01 [ main:3695 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3695 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3695 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@388f916a] for Hibernate transaction
2017-03-16 15:20:01 [ main:3695 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@388f916a]
2017-03-16 15:20:01 [ main:3696 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3697 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3697 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@388f916a]
2017-03-16 15:20:01 [ main:3697 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@388f916a] after transaction
2017-03-16 15:20:01 [ main:3697 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3707 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3713 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3713 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@14bed4e9] for Hibernate transaction
2017-03-16 15:20:01 [ main:3713 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14bed4e9]
2017-03-16 15:20:01 [ main:3713 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3719 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3719 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14bed4e9]
2017-03-16 15:20:01 [ main:3720 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@14bed4e9] after transaction
2017-03-16 15:20:01 [ main:3720 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3727 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3733 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3733 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@9992770] for Hibernate transaction
2017-03-16 15:20:01 [ main:3733 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@9992770]
2017-03-16 15:20:01 [ main:3734 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3738 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3738 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@9992770]
2017-03-16 15:20:01 [ main:3739 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@9992770] after transaction
2017-03-16 15:20:01 [ main:3739 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3747 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3755 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeTypes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3755 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6d0fdc04] for Hibernate transaction
2017-03-16 15:20:01 [ main:3755 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6d0fdc04]
2017-03-16 15:20:01 [ main:3756 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3756 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3756 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6d0fdc04]
2017-03-16 15:20:01 [ main:3756 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6d0fdc04] after transaction
2017-03-16 15:20:01 [ main:3756 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3764 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3770 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3770 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3c116de6] for Hibernate transaction
2017-03-16 15:20:01 [ main:3770 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3c116de6]
2017-03-16 15:20:01 [ main:3771 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3772 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3772 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3c116de6] for Hibernate transaction
2017-03-16 15:20:01 [ main:3772 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3773 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3773 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3c116de6] for Hibernate transaction
2017-03-16 15:20:01 [ main:3773 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3774 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3774 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3c116de6] for Hibernate transaction
2017-03-16 15:20:01 [ main:3774 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3774 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3774 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3c116de6]
2017-03-16 15:20:01 [ main:3775 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3c116de6] after transaction
2017-03-16 15:20:01 [ main:3775 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3785 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3793 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3793 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@54b85afc] for Hibernate transaction
2017-03-16 15:20:01 [ main:3793 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@54b85afc]
2017-03-16 15:20:01 [ main:3793 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3794 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3794 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@54b85afc]
2017-03-16 15:20:01 [ main:3795 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@54b85afc] after transaction
2017-03-16 15:20:01 [ main:3795 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3802 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3808 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3808 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7d7eaf74] for Hibernate transaction
2017-03-16 15:20:01 [ main:3808 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7d7eaf74]
2017-03-16 15:20:01 [ main:3809 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3810 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3811 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7d7eaf74] for Hibernate transaction
2017-03-16 15:20:01 [ main:3811 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3812 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3812 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7d7eaf74] for Hibernate transaction
2017-03-16 15:20:01 [ main:3812 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3813 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3813 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7d7eaf74] for Hibernate transaction
2017-03-16 15:20:01 [ main:3813 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3814 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3814 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7d7eaf74] for Hibernate transaction
2017-03-16 15:20:01 [ main:3814 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3815 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3815 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7d7eaf74] for Hibernate transaction
2017-03-16 15:20:01 [ main:3815 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3816 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:3816 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7d7eaf74] for Hibernate transaction
2017-03-16 15:20:01 [ main:3816 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3817 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3817 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7d7eaf74]
2017-03-16 15:20:01 [ main:3817 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7d7eaf74] after transaction
2017-03-16 15:20:01 [ main:3818 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3830 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:3841 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRoleMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3841 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4dcac775] for Hibernate transaction
2017-03-16 15:20:01 [ main:3841 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4dcac775]
2017-03-16 15:20:01 [ main:3842 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3845 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3845 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4dcac775]
2017-03-16 15:20:01 [ main:3845 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4dcac775] after transaction
2017-03-16 15:20:01 [ main:3846 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3846 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3846 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7e0bfb81] for Hibernate transaction
2017-03-16 15:20:01 [ main:3846 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7e0bfb81]
2017-03-16 15:20:01 [ main:3846 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3847 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3847 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7e0bfb81]
2017-03-16 15:20:01 [ main:3848 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7e0bfb81] after transaction
2017-03-16 15:20:01 [ main:3848 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3865 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:3869 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.addRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3869 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@10ff7cb2] for Hibernate transaction
2017-03-16 15:20:01 [ main:3869 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10ff7cb2]
2017-03-16 15:20:01 [ main:3869 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3870 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3870 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10ff7cb2]
2017-03-16 15:20:01 [ main:3871 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@10ff7cb2] after transaction
2017-03-16 15:20:01 [ main:3871 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3871 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3871 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3fadcb5e] for Hibernate transaction
2017-03-16 15:20:01 [ main:3871 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3fadcb5e]
2017-03-16 15:20:01 [ main:3871 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3872 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3872 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3fadcb5e]
2017-03-16 15:20:01 [ main:3873 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3fadcb5e] after transaction
2017-03-16 15:20:01 [ main:3873 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3883 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:3889 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3889 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@48483c72] for Hibernate transaction
2017-03-16 15:20:01 [ main:3889 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@48483c72]
2017-03-16 15:20:01 [ main:3890 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3893 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3893 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@48483c72]
2017-03-16 15:20:01 [ main:3894 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@48483c72] after transaction
2017-03-16 15:20:01 [ main:3894 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3904 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:3910 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3910 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@44be2528] for Hibernate transaction
2017-03-16 15:20:01 [ main:3910 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@44be2528]
2017-03-16 15:20:01 [ main:3910 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3910 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3910 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@44be2528]
2017-03-16 15:20:01 [ main:3911 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@44be2528] after transaction
2017-03-16 15:20:01 [ main:3911 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3912 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3912 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6e2e5dc9] for Hibernate transaction
2017-03-16 15:20:01 [ main:3912 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6e2e5dc9]
2017-03-16 15:20:01 [ main:3912 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3913 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3913 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6e2e5dc9]
2017-03-16 15:20:01 [ main:3913 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6e2e5dc9] after transaction
2017-03-16 15:20:01 [ main:3913 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3924 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:3930 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3930 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7e30f316] for Hibernate transaction
2017-03-16 15:20:01 [ main:3930 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7e30f316]
2017-03-16 15:20:01 [ main:3930 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3933 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3933 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7e30f316]
2017-03-16 15:20:01 [ main:3934 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7e30f316] after transaction
2017-03-16 15:20:01 [ main:3934 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3945 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:3950 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3950 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@722e77d4] for Hibernate transaction
2017-03-16 15:20:01 [ main:3950 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@722e77d4]
2017-03-16 15:20:01 [ main:3951 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3955 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:3955 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@722e77d4] for Hibernate transaction
2017-03-16 15:20:01 [ main:3955 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3956 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:3956 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@722e77d4] for Hibernate transaction
2017-03-16 15:20:01 [ main:3956 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:3958 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3958 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@722e77d4]
2017-03-16 15:20:01 [ main:3958 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@722e77d4] after transaction
2017-03-16 15:20:01 [ main:3958 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3969 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:3975 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateParent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3975 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1800bcb5] for Hibernate transaction
2017-03-16 15:20:01 [ main:3975 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1800bcb5]
2017-03-16 15:20:01 [ main:3975 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3978 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3978 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1800bcb5]
2017-03-16 15:20:01 [ main:3978 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1800bcb5] after transaction
2017-03-16 15:20:01 [ main:3978 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3978 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3978 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@76b3eddb] for Hibernate transaction
2017-03-16 15:20:01 [ main:3978 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@76b3eddb]
2017-03-16 15:20:01 [ main:3979 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3980 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:3980 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@76b3eddb]
2017-03-16 15:20:01 [ main:3981 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@76b3eddb] after transaction
2017-03-16 15:20:01 [ main:3981 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:3991 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:3997 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:3998 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@464dbde3] for Hibernate transaction
2017-03-16 15:20:01 [ main:3998 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@464dbde3]
2017-03-16 15:20:01 [ main:3998 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:3999 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4000 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@464dbde3] for Hibernate transaction
2017-03-16 15:20:01 [ main:4000 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4002 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4002 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@464dbde3] for Hibernate transaction
2017-03-16 15:20:01 [ main:4002 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4004 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4004 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@464dbde3] for Hibernate transaction
2017-03-16 15:20:01 [ main:4004 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4005 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4005 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@464dbde3]
2017-03-16 15:20:01 [ main:4005 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@464dbde3] after transaction
2017-03-16 15:20:01 [ main:4005 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4016 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4022 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4022 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@22b1cf31] for Hibernate transaction
2017-03-16 15:20:01 [ main:4022 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@22b1cf31]
2017-03-16 15:20:01 [ main:4023 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4025 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4025 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@22b1cf31]
2017-03-16 15:20:01 [ main:4026 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@22b1cf31] after transaction
2017-03-16 15:20:01 [ main:4026 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4026 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4026 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@78442dc2] for Hibernate transaction
2017-03-16 15:20:01 [ main:4026 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@78442dc2]
2017-03-16 15:20:01 [ main:4026 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4027 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4027 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@78442dc2]
2017-03-16 15:20:01 [ main:4028 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@78442dc2] after transaction
2017-03-16 15:20:01 [ main:4028 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4045 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4051 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.deleteRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4051 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7a557120] for Hibernate transaction
2017-03-16 15:20:01 [ main:4051 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7a557120]
2017-03-16 15:20:01 [ main:4051 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4054 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4054 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7a557120] for Hibernate transaction
2017-03-16 15:20:01 [ main:4054 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4056 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:01 [ main:4056 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7a557120] for Hibernate transaction
2017-03-16 15:20:01 [ main:4056 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4056 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4057 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7a557120]
2017-03-16 15:20:01 [ main:4057 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7a557120] after transaction
2017-03-16 15:20:01 [ main:4057 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4057 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4057 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@266cac2b] for Hibernate transaction
2017-03-16 15:20:01 [ main:4057 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@266cac2b]
2017-03-16 15:20:01 [ main:4058 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4058 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4058 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@266cac2b]
2017-03-16 15:20:01 [ main:4059 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@266cac2b] after transaction
2017-03-16 15:20:01 [ main:4059 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4059 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:01 [ main:4059 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4059 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@26f5d2fd] for Hibernate transaction
2017-03-16 15:20:01 [ main:4059 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@26f5d2fd]
2017-03-16 15:20:01 [ main:4059 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4060 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4060 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@26f5d2fd]
2017-03-16 15:20:01 [ main:4060 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@26f5d2fd] after transaction
2017-03-16 15:20:01 [ main:4060 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4061 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4061 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4061 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2dd6b986] for Hibernate transaction
2017-03-16 15:20:01 [ main:4061 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2dd6b986]
2017-03-16 15:20:01 [ main:4062 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4064 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4064 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2dd6b986]
2017-03-16 15:20:01 [ main:4064 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2dd6b986] after transaction
2017-03-16 15:20:01 [ main:4064 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4073 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4079 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4079 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4b5ce9c4] for Hibernate transaction
2017-03-16 15:20:01 [ main:4079 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4b5ce9c4]
2017-03-16 15:20:01 [ main:4079 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4080 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4080 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4b5ce9c4]
2017-03-16 15:20:01 [ main:4081 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4b5ce9c4] after transaction
2017-03-16 15:20:01 [ main:4081 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4081 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4081 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7abfe56d] for Hibernate transaction
2017-03-16 15:20:01 [ main:4081 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7abfe56d]
2017-03-16 15:20:01 [ main:4081 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4082 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4082 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7abfe56d]
2017-03-16 15:20:01 [ main:4082 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7abfe56d] after transaction
2017-03-16 15:20:01 [ main:4082 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4092 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4097 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4097 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2b4002b9] for Hibernate transaction
2017-03-16 15:20:01 [ main:4097 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2b4002b9]
2017-03-16 15:20:01 [ main:4097 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4098 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4098 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2b4002b9] for Hibernate transaction
2017-03-16 15:20:01 [ main:4098 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4099 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4099 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2b4002b9] for Hibernate transaction
2017-03-16 15:20:01 [ main:4100 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4100 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4100 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2b4002b9] for Hibernate transaction
2017-03-16 15:20:01 [ main:4100 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4101 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4101 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2b4002b9] for Hibernate transaction
2017-03-16 15:20:01 [ main:4101 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4102 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4102 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2b4002b9]
2017-03-16 15:20:01 [ main:4102 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2b4002b9] after transaction
2017-03-16 15:20:01 [ main:4102 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4111 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4117 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4117 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@528127d] for Hibernate transaction
2017-03-16 15:20:01 [ main:4117 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@528127d]
2017-03-16 15:20:01 [ main:4117 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4119 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4119 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@528127d] for Hibernate transaction
2017-03-16 15:20:01 [ main:4119 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4120 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4120 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@528127d] for Hibernate transaction
2017-03-16 15:20:01 [ main:4120 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4121 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4121 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@528127d] for Hibernate transaction
2017-03-16 15:20:01 [ main:4121 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4122 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4122 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@528127d] for Hibernate transaction
2017-03-16 15:20:01 [ main:4122 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4123 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4123 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@528127d] for Hibernate transaction
2017-03-16 15:20:01 [ main:4123 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4123 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4123 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@528127d]
2017-03-16 15:20:01 [ main:4124 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@528127d] after transaction
2017-03-16 15:20:01 [ main:4124 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4135 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4140 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4141 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@42b522aa] for Hibernate transaction
2017-03-16 15:20:01 [ main:4141 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@42b522aa]
2017-03-16 15:20:01 [ main:4141 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4142 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4142 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@42b522aa]
2017-03-16 15:20:01 [ main:4142 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@42b522aa] after transaction
2017-03-16 15:20:01 [ main:4142 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4156 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4164 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4165 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@27c98168] for Hibernate transaction
2017-03-16 15:20:01 [ main:4165 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@27c98168]
2017-03-16 15:20:01 [ main:4165 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4167 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4167 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@27c98168]
2017-03-16 15:20:01 [ main:4168 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@27c98168] after transaction
2017-03-16 15:20:01 [ main:4168 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4168 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4168 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@39ef8fbd] for Hibernate transaction
2017-03-16 15:20:01 [ main:4168 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@39ef8fbd]
2017-03-16 15:20:01 [ main:4169 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4170 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4170 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@39ef8fbd]
2017-03-16 15:20:01 [ main:4170 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@39ef8fbd] after transaction
2017-03-16 15:20:01 [ main:4170 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4174 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4177 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.addRoleNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4177 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@794d6ef3] for Hibernate transaction
2017-03-16 15:20:01 [ main:4177 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@794d6ef3]
2017-03-16 15:20:01 [ main:4177 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4177 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4178 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@794d6ef3]
2017-03-16 15:20:01 [ main:4179 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@794d6ef3] after transaction
2017-03-16 15:20:01 [ main:4179 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4183 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4188 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4189 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@54776fc0] for Hibernate transaction
2017-03-16 15:20:01 [ main:4189 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@54776fc0]
2017-03-16 15:20:01 [ main:4189 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4190 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4190 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@54776fc0]
2017-03-16 15:20:01 [ main:4190 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@54776fc0] after transaction
2017-03-16 15:20:01 [ main:4190 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4195 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4199 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4200 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5a06f4ba] for Hibernate transaction
2017-03-16 15:20:01 [ main:4200 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5a06f4ba]
2017-03-16 15:20:01 [ main:4200 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4200 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4200 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5a06f4ba]
2017-03-16 15:20:01 [ main:4201 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5a06f4ba] after transaction
2017-03-16 15:20:01 [ main:4201 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4201 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4201 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6d695bcc] for Hibernate transaction
2017-03-16 15:20:01 [ main:4201 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6d695bcc]
2017-03-16 15:20:01 [ main:4202 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4203 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4203 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6d695bcc]
2017-03-16 15:20:01 [ main:4204 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6d695bcc] after transaction
2017-03-16 15:20:01 [ main:4204 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4209 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4213 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4213 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1a5c786a] for Hibernate transaction
2017-03-16 15:20:01 [ main:4214 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1a5c786a]
2017-03-16 15:20:01 [ main:4214 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4215 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4215 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1a5c786a]
2017-03-16 15:20:01 [ main:4215 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1a5c786a] after transaction
2017-03-16 15:20:01 [ main:4215 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4221 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4226 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4226 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@eb4e033] for Hibernate transaction
2017-03-16 15:20:01 [ main:4226 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@eb4e033]
2017-03-16 15:20:01 [ main:4226 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4227 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4227 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@eb4e033]
2017-03-16 15:20:01 [ main:4228 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@eb4e033] after transaction
2017-03-16 15:20:01 [ main:4228 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4232 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4237 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4237 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2b7e4dce] for Hibernate transaction
2017-03-16 15:20:01 [ main:4237 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2b7e4dce]
2017-03-16 15:20:01 [ main:4237 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4238 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4238 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2b7e4dce]
2017-03-16 15:20:01 [ main:4238 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2b7e4dce] after transaction
2017-03-16 15:20:01 [ main:4238 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4238 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4238 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@50f72bc9] for Hibernate transaction
2017-03-16 15:20:01 [ main:4239 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@50f72bc9]
2017-03-16 15:20:01 [ main:4239 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4239 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4239 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@50f72bc9]
2017-03-16 15:20:01 [ main:4240 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@50f72bc9] after transaction
2017-03-16 15:20:01 [ main:4240 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4244 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4248 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4248 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6dcf2f2c] for Hibernate transaction
2017-03-16 15:20:01 [ main:4248 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6dcf2f2c]
2017-03-16 15:20:01 [ main:4249 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4249 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:4250 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@6dcf2f2c] for Hibernate transaction
2017-03-16 15:20:01 [ main:4250 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4251 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@6dcf2f2c] for Hibernate transaction
2017-03-16 15:20:01 [ main:4251 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4252 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@6dcf2f2c] for Hibernate transaction
2017-03-16 15:20:01 [ main:4252 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4252 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:4254 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@6dcf2f2c] for Hibernate transaction
2017-03-16 15:20:01 [ main:4254 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4254 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@6dcf2f2c] for Hibernate transaction
2017-03-16 15:20:01 [ main:4254 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4255 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@6dcf2f2c] for Hibernate transaction
2017-03-16 15:20:01 [ main:4255 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4255 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@6dcf2f2c] for Hibernate transaction
2017-03-16 15:20:01 [ main:4255 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4256 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4256 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6dcf2f2c]
2017-03-16 15:20:01 [ main:4257 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6dcf2f2c] after transaction
2017-03-16 15:20:01 [ main:4257 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4261 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:01 [ main:4266 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:01 [ main:4266 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4266 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3d086816] for Hibernate transaction
2017-03-16 15:20:01 [ main:4267 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3d086816]
2017-03-16 15:20:01 [ main:4267 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4268 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4268 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3d086816]
2017-03-16 15:20:01 [ main:4268 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3d086816] after transaction
2017-03-16 15:20:01 [ main:4268 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:01 [ main:4269 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:01 [ main:4269 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3d1528ab] for Hibernate transaction
2017-03-16 15:20:01 [ main:4269 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3d1528ab]
2017-03-16 15:20:01 [ main:4269 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:01 [ main:4269 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:01 [ main:4280 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d1528ab] for Hibernate transaction
2017-03-16 15:20:01 [ main:4280 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4281 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d1528ab] for Hibernate transaction
2017-03-16 15:20:01 [ main:4282 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4282 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3d1528ab] for Hibernate transaction
2017-03-16 15:20:01 [ main:4283 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:01 [ main:4284 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:01 [ main:4284 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3d1528ab]
2017-03-16 15:20:01 [ main:4284 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3d1528ab] after transaction
2017-03-16 15:20:01 [ main:4284 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:53 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@65cad579: display name [org.springframework.context.support.ClassPathXmlApplicationContext@65cad579]; startup date [Thu Mar 16 15:20:53 CST 2017]; root of context hierarchy
2017-03-16 15:20:53 [ main:49 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-03-16 15:20:53 [ main:62 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-03-16 15:20:53 [ main:86 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-03-16 15:20:53 [ main:87 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-03-16 15:20:55 [ main:1848 ] - [ DEBUG ] Loading bean definitions
2017-03-16 15:20:55 [ main:1874 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-03-16 15:20:55 [ main:1896 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-03-16 15:20:55 [ main:1896 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@65cad579]: org.springframework.beans.factory.support.DefaultListableBeanFactory@3fdfa916
2017-03-16 15:20:55 [ main:1897 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@65cad579: display name [org.springframework.context.support.ClassPathXmlApplicationContext@65cad579]; startup date [Thu Mar 16 15:20:53 CST 2017]; root of context hierarchy
2017-03-16 15:20:55 [ main:1911 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:20:55 [ main:1911 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:20:55 [ main:1925 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-03-16 15:20:55 [ main:1936 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:20:55 [ main:1937 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1ac4d48]
2017-03-16 15:20:55 [ main:1939 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@41d1d49d]
2017-03-16 15:20:55 [ main:1940 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@3fdfa916: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-03-16 15:20:55 [ main:1940 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-03-16 15:20:55 [ main:1940 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-03-16 15:20:55 [ main:1944 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-03-16 15:20:55 [ main:1958 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:55 [ main:1958 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:55 [ main:1959 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-03-16 15:20:55 [ main:1963 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:20:55 [ main:1963 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:20:55 [ main:1964 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-03-16 15:20:55 [ main:1967 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:20:55 [ main:1968 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:55 [ main:1970 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-03-16 15:20:55 [ main:1970 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-03-16 15:20:55 [ main:1971 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-03-16 15:20:55 [ main:1982 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-03-16 15:20:55 [ main:1989 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-03-16 15:20:55 [ main:1990 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-03-16 15:20:55 [ main:2277 ] - [ INFO ] Building new Hibernate SessionFactory
2017-03-16 15:20:56 [ main:2563 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:56 [ main:2565 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-03-16 15:20:56 [ main:2565 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-03-16 15:20:56 [ main:2565 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-03-16 15:20:56 [ main:2566 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-03-16 15:20:56 [ main:2568 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:20:56 [ main:2569 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:56 [ main:2575 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:56 [ main:2582 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2588 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:20:56 [ main:2592 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@5b68b32]
2017-03-16 15:20:56 [ main:2639 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:20:56 [ main:2639 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:20:56 [ main:2639 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-03-16 15:20:56 [ main:2642 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-03-16 15:20:56 [ main:2642 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-03-16 15:20:56 [ main:2646 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-03-16 15:20:56 [ main:2649 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:20:56 [ main:2649 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-03-16 15:20:56 [ main:2655 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@43ba7d46] of Hibernate SessionFactory for HibernateTransactionManager
2017-03-16 15:20:56 [ main:2655 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:56 [ main:2656 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-03-16 15:20:56 [ main:2656 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:20:56 [ main:2656 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:20:56 [ main:2656 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:20:56 [ main:2659 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-03-16 15:20:56 [ main:2659 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-03-16 15:20:56 [ main:2659 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-03-16 15:20:56 [ main:2659 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2659 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(java.lang.String)
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(java.lang.String)
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2660 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:20:56 [ main:2662 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:20:56 [ main:2663 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:20:56 [ main:2682 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-03-16 15:20:56 [ main:2682 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-03-16 15:20:56 [ main:2682 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-03-16 15:20:56 [ main:2682 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-03-16 15:20:56 [ main:2685 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:20:56 [ main:2685 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:56 [ main:2685 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2685 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:20:56 [ main:2685 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@3ff0dbfd]
2017-03-16 15:20:56 [ main:2686 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-03-16 15:20:56 [ main:2687 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2687 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-03-16 15:20:56 [ main:2687 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2687 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-03-16 15:20:56 [ main:2687 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2687 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-03-16 15:20:56 [ main:2687 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2687 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-03-16 15:20:56 [ main:2687 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2687 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2688 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(java.lang.String)
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2689 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2690 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:20:56 [ main:2691 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:20:56 [ main:2705 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-03-16 15:20:56 [ main:2706 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-03-16 15:20:56 [ main:2706 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-03-16 15:20:56 [ main:2706 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-03-16 15:20:56 [ main:2710 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:20:56 [ main:2710 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:56 [ main:2710 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2710 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:20:56 [ main:2710 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@7c491585]
2017-03-16 15:20:56 [ main:2711 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-03-16 15:20:56 [ main:2711 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2711 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-03-16 15:20:56 [ main:2712 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Adding transactional method [getParentId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.getParentId(java.lang.String)
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2713 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(java.lang.String)
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.delete(dtx.oa.rbac.model.Node)
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2714 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:20:56 [ main:2715 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:20:56 [ main:2716 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:20:56 [ main:2730 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-03-16 15:20:56 [ main:2730 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:2730 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-03-16 15:20:56 [ main:2731 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-03-16 15:20:56 [ main:2733 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:20:56 [ main:2733 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:56 [ main:2733 ] - [ DEBUG ] Adding transactional method [queryByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2733 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:20:56 [ main:2733 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@3f3eb56c]
2017-03-16 15:20:56 [ main:2734 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUserId(java.lang.String)
2017-03-16 15:20:56 [ main:2734 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2734 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRoleId(java.lang.String)
2017-03-16 15:20:56 [ main:2734 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2734 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(java.lang.String)
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Adding transactional method [deleteByUserId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUserId(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId(java.lang.String)
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2735 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(java.lang.String,java.lang.String)
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(java.lang.String,java.lang.String[])
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(java.lang.String)
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.delete(dtx.oa.rbac.model.RoleUser)
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:20:56 [ main:2737 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2737 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:20:56 [ main:2737 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:20:56 [ main:2737 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:20:56 [ main:2737 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2738 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:20:56 [ main:2739 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:20:56 [ main:2739 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:20:56 [ main:2739 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:20:56 [ main:2758 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-03-16 15:20:56 [ main:2758 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:56 [ main:2758 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-03-16 15:20:56 [ main:2759 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-03-16 15:20:56 [ main:2761 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-03-16 15:20:56 [ main:2762 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:56 [ main:2762 ] - [ DEBUG ] Adding transactional method [queryByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2762 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-03-16 15:20:56 [ main:2762 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@686c6c87]
2017-03-16 15:20:56 [ main:2763 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId(java.lang.String)
2017-03-16 15:20:56 [ main:2763 ] - [ DEBUG ] Adding transactional method [queryByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2763 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId(java.lang.String)
2017-03-16 15:20:56 [ main:2763 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2763 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(java.lang.String)
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Adding transactional method [deleteByRoleId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.lang.String)
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(java.lang.String)
2017-03-16 15:20:56 [ main:2764 ] - [ DEBUG ] Adding transactional method [deleteByNodeId] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(java.lang.String,java.lang.String)
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(dtx.oa.rbac.model.RoleNode)
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.delete(java.lang.String)
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2765 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-03-16 15:20:56 [ main:2766 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2767 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-03-16 15:20:56 [ main:2768 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-03-16 15:20:56 [ main:2768 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-03-16 15:20:56 [ main:2768 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-03-16 15:20:56 [ main:2768 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-03-16 15:20:56 [ main:2778 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-03-16 15:20:56 [ main:2778 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-03-16 15:20:56 [ main:2778 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-03-16 15:20:56 [ main:2778 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-03-16 15:20:56 [ main:2778 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-03-16 15:20:56 [ main:2778 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-03-16 15:20:56 [ main:2779 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:2838 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:2859 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@b20ffc7] for Hibernate transaction
2017-03-16 15:20:56 [ main:2860 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@b20ffc7]
2017-03-16 15:20:56 [ main:2873 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:2979 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:2979 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@b20ffc7]
2017-03-16 15:20:56 [ main:2980 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@b20ffc7] after transaction
2017-03-16 15:20:56 [ main:2980 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:2981 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:2981 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5d00e254] for Hibernate transaction
2017-03-16 15:20:56 [ main:2981 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5d00e254]
2017-03-16 15:20:56 [ main:2982 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:2995 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:2995 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5d00e254]
2017-03-16 15:20:56 [ main:2995 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5d00e254] after transaction
2017-03-16 15:20:56 [ main:2995 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3002 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:3010 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.getRoleByUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3010 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@322d29ad] for Hibernate transaction
2017-03-16 15:20:56 [ main:3010 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@322d29ad]
2017-03-16 15:20:56 [ main:3010 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3010 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:56 [ main:3010 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@322d29ad] for Hibernate transaction
2017-03-16 15:20:56 [ main:3011 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:56 [ main:3033 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:56 [ main:3033 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@322d29ad] for Hibernate transaction
2017-03-16 15:20:56 [ main:3033 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:56 [ main:3052 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@322d29ad] for Hibernate transaction
2017-03-16 15:20:56 [ main:3052 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:56 [ main:3053 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3053 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@322d29ad]
2017-03-16 15:20:56 [ main:3056 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@322d29ad] after transaction
2017-03-16 15:20:56 [ main:3056 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3061 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:3067 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3067 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@79e833ff] for Hibernate transaction
2017-03-16 15:20:56 [ main:3067 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@79e833ff]
2017-03-16 15:20:56 [ main:3067 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3071 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3071 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@79e833ff]
2017-03-16 15:20:56 [ main:3072 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@79e833ff] after transaction
2017-03-16 15:20:56 [ main:3072 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3072 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3072 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2c7a7eb5] for Hibernate transaction
2017-03-16 15:20:56 [ main:3072 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2c7a7eb5]
2017-03-16 15:20:56 [ main:3073 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3074 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3074 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2c7a7eb5]
2017-03-16 15:20:56 [ main:3074 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2c7a7eb5] after transaction
2017-03-16 15:20:56 [ main:3074 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3080 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:3085 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3085 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5258c839] for Hibernate transaction
2017-03-16 15:20:56 [ main:3085 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5258c839]
2017-03-16 15:20:56 [ main:3086 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3087 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3087 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5258c839]
2017-03-16 15:20:56 [ main:3088 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5258c839] after transaction
2017-03-16 15:20:56 [ main:3088 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3095 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:3100 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3101 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3f493b67] for Hibernate transaction
2017-03-16 15:20:56 [ main:3101 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3f493b67]
2017-03-16 15:20:56 [ main:3101 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3105 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3105 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3f493b67]
2017-03-16 15:20:56 [ main:3106 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3f493b67] after transaction
2017-03-16 15:20:56 [ main:3106 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3106 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3106 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1aba6f2d] for Hibernate transaction
2017-03-16 15:20:56 [ main:3106 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1aba6f2d]
2017-03-16 15:20:56 [ main:3107 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3111 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3111 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1aba6f2d]
2017-03-16 15:20:56 [ main:3111 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1aba6f2d] after transaction
2017-03-16 15:20:56 [ main:3111 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3117 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:3125 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3125 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2ac57cf9] for Hibernate transaction
2017-03-16 15:20:56 [ main:3125 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2ac57cf9]
2017-03-16 15:20:56 [ main:3126 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3127 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3127 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2ac57cf9]
2017-03-16 15:20:56 [ main:3128 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2ac57cf9] after transaction
2017-03-16 15:20:56 [ main:3128 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3133 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:3140 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3140 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4710ad01] for Hibernate transaction
2017-03-16 15:20:56 [ main:3140 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4710ad01]
2017-03-16 15:20:56 [ main:3140 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3142 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3142 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4710ad01]
2017-03-16 15:20:56 [ main:3142 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4710ad01] after transaction
2017-03-16 15:20:56 [ main:3142 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3148 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:3151 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUsers]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3151 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@55e0e3ca] for Hibernate transaction
2017-03-16 15:20:56 [ main:3151 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@55e0e3ca]
2017-03-16 15:20:56 [ main:3152 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3157 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3157 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@55e0e3ca]
2017-03-16 15:20:56 [ main:3161 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@55e0e3ca] after transaction
2017-03-16 15:20:56 [ main:3161 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3161 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByUserId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3161 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2f8e7de] for Hibernate transaction
2017-03-16 15:20:56 [ main:3161 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f8e7de]
2017-03-16 15:20:56 [ main:3162 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3164 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3164 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f8e7de]
2017-03-16 15:20:56 [ main:3165 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f8e7de] after transaction
2017-03-16 15:20:56 [ main:3165 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3170 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:3173 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.addRoleUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3173 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@22fbc1cd] for Hibernate transaction
2017-03-16 15:20:56 [ main:3173 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@22fbc1cd]
2017-03-16 15:20:56 [ main:3173 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3174 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3174 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@22fbc1cd]
2017-03-16 15:20:56 [ main:3176 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@22fbc1cd] after transaction
2017-03-16 15:20:56 [ main:3176 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3190 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:56 [ main:3203 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3203 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@52598d7c] for Hibernate transaction
2017-03-16 15:20:56 [ main:3203 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@52598d7c]
2017-03-16 15:20:56 [ main:3204 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3209 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3209 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@52598d7c]
2017-03-16 15:20:56 [ main:3210 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@52598d7c] after transaction
2017-03-16 15:20:56 [ main:3210 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3210 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3210 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@576621fa] for Hibernate transaction
2017-03-16 15:20:56 [ main:3210 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@576621fa]
2017-03-16 15:20:56 [ main:3211 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3212 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3212 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@576621fa]
2017-03-16 15:20:56 [ main:3212 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@576621fa] after transaction
2017-03-16 15:20:56 [ main:3213 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3226 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:56 [ main:3232 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3232 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7376d6c3] for Hibernate transaction
2017-03-16 15:20:56 [ main:3232 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7376d6c3]
2017-03-16 15:20:56 [ main:3233 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3237 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3237 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7376d6c3]
2017-03-16 15:20:56 [ main:3238 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7376d6c3] after transaction
2017-03-16 15:20:56 [ main:3238 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3238 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3238 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@22e08791] for Hibernate transaction
2017-03-16 15:20:56 [ main:3238 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@22e08791]
2017-03-16 15:20:56 [ main:3239 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3244 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3244 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@22e08791]
2017-03-16 15:20:56 [ main:3244 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@22e08791] after transaction
2017-03-16 15:20:56 [ main:3244 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3244 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3245 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5491669a] for Hibernate transaction
2017-03-16 15:20:56 [ main:3245 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5491669a]
2017-03-16 15:20:56 [ main:3245 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3246 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3246 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5491669a]
2017-03-16 15:20:56 [ main:3247 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5491669a] after transaction
2017-03-16 15:20:56 [ main:3247 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3255 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:56 [ main:3260 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3260 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@611a5a82] for Hibernate transaction
2017-03-16 15:20:56 [ main:3260 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@611a5a82]
2017-03-16 15:20:56 [ main:3260 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3261 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3261 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@611a5a82]
2017-03-16 15:20:56 [ main:3264 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@611a5a82] after transaction
2017-03-16 15:20:56 [ main:3264 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3264 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3264 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@423fdb89] for Hibernate transaction
2017-03-16 15:20:56 [ main:3264 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@423fdb89]
2017-03-16 15:20:56 [ main:3264 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3266 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3266 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@423fdb89]
2017-03-16 15:20:56 [ main:3266 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@423fdb89] after transaction
2017-03-16 15:20:56 [ main:3266 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3267 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3267 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@528db148] for Hibernate transaction
2017-03-16 15:20:56 [ main:3267 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@528db148]
2017-03-16 15:20:56 [ main:3267 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3267 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3267 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@528db148]
2017-03-16 15:20:56 [ main:3269 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@528db148] after transaction
2017-03-16 15:20:56 [ main:3269 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3270 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3270 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6a2dbeb8] for Hibernate transaction
2017-03-16 15:20:56 [ main:3270 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6a2dbeb8]
2017-03-16 15:20:56 [ main:3270 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3271 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3272 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6a2dbeb8]
2017-03-16 15:20:56 [ main:3272 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6a2dbeb8] after transaction
2017-03-16 15:20:56 [ main:3272 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3280 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:56 [ main:3286 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3286 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@184aee62] for Hibernate transaction
2017-03-16 15:20:56 [ main:3286 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@184aee62]
2017-03-16 15:20:56 [ main:3286 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3288 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3288 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@184aee62]
2017-03-16 15:20:56 [ main:3288 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@184aee62] after transaction
2017-03-16 15:20:56 [ main:3288 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3289 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3289 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1d2761be] for Hibernate transaction
2017-03-16 15:20:56 [ main:3289 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1d2761be]
2017-03-16 15:20:56 [ main:3289 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3295 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3295 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1d2761be]
2017-03-16 15:20:56 [ main:3296 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1d2761be] after transaction
2017-03-16 15:20:56 [ main:3296 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3296 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3296 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6d575674] for Hibernate transaction
2017-03-16 15:20:56 [ main:3296 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6d575674]
2017-03-16 15:20:56 [ main:3297 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3298 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3298 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6d575674]
2017-03-16 15:20:56 [ main:3299 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6d575674] after transaction
2017-03-16 15:20:56 [ main:3299 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3299 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3299 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1a834885] for Hibernate transaction
2017-03-16 15:20:56 [ main:3299 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1a834885]
2017-03-16 15:20:56 [ main:3299 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3301 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3301 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1a834885]
2017-03-16 15:20:56 [ main:3301 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1a834885] after transaction
2017-03-16 15:20:56 [ main:3301 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3301 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3301 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3ad74455] for Hibernate transaction
2017-03-16 15:20:56 [ main:3302 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3ad74455]
2017-03-16 15:20:56 [ main:3302 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3303 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3303 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3ad74455]
2017-03-16 15:20:56 [ main:3304 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3ad74455] after transaction
2017-03-16 15:20:56 [ main:3304 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3304 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3304 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3b3e0204] for Hibernate transaction
2017-03-16 15:20:56 [ main:3304 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3b3e0204]
2017-03-16 15:20:56 [ main:3305 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3306 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3306 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3b3e0204]
2017-03-16 15:20:56 [ main:3307 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3b3e0204] after transaction
2017-03-16 15:20:56 [ main:3307 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3307 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3307 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@104468e2] for Hibernate transaction
2017-03-16 15:20:56 [ main:3307 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@104468e2]
2017-03-16 15:20:56 [ main:3308 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3309 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3309 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@104468e2]
2017-03-16 15:20:56 [ main:3309 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@104468e2] after transaction
2017-03-16 15:20:56 [ main:3309 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3317 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:56 [ main:3323 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3323 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@342b76a8] for Hibernate transaction
2017-03-16 15:20:56 [ main:3323 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@342b76a8]
2017-03-16 15:20:56 [ main:3323 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3325 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3325 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@342b76a8]
2017-03-16 15:20:56 [ main:3326 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@342b76a8] after transaction
2017-03-16 15:20:56 [ main:3326 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3326 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3326 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@785c1069] for Hibernate transaction
2017-03-16 15:20:56 [ main:3326 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@785c1069]
2017-03-16 15:20:56 [ main:3327 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3328 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3328 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@785c1069]
2017-03-16 15:20:56 [ main:3330 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@785c1069] after transaction
2017-03-16 15:20:56 [ main:3330 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3337 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:56 [ main:3342 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3342 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6c4f37b3] for Hibernate transaction
2017-03-16 15:20:56 [ main:3342 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6c4f37b3]
2017-03-16 15:20:56 [ main:3343 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3344 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3344 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6c4f37b3]
2017-03-16 15:20:56 [ main:3345 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6c4f37b3] after transaction
2017-03-16 15:20:56 [ main:3345 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3345 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3345 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7e349634] for Hibernate transaction
2017-03-16 15:20:56 [ main:3345 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7e349634]
2017-03-16 15:20:56 [ main:3345 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3348 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:56 [ main:3348 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@7e349634] for Hibernate transaction
2017-03-16 15:20:56 [ main:3348 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:56 [ main:3349 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3349 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7e349634]
2017-03-16 15:20:56 [ main:3349 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7e349634] after transaction
2017-03-16 15:20:56 [ main:3349 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3350 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3350 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@31d7e3a9] for Hibernate transaction
2017-03-16 15:20:56 [ main:3350 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@31d7e3a9]
2017-03-16 15:20:56 [ main:3350 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3351 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3351 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@31d7e3a9]
2017-03-16 15:20:56 [ main:3351 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@31d7e3a9] after transaction
2017-03-16 15:20:56 [ main:3351 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3358 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-03-16 15:20:56 [ main:3393 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3394 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1796c6dd] for Hibernate transaction
2017-03-16 15:20:56 [ main:3394 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1796c6dd]
2017-03-16 15:20:56 [ main:3396 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3396 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3396 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1796c6dd]
2017-03-16 15:20:56 [ main:3398 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1796c6dd] after transaction
2017-03-16 15:20:56 [ main:3398 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3442 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:56 [ main:3457 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3457 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@46956438] for Hibernate transaction
2017-03-16 15:20:56 [ main:3457 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@46956438]
2017-03-16 15:20:56 [ main:3458 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3474 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:56 [ main:3474 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@46956438] for Hibernate transaction
2017-03-16 15:20:56 [ main:3474 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:56 [ main:3493 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3493 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@46956438]
2017-03-16 15:20:56 [ main:3493 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@46956438] after transaction
2017-03-16 15:20:56 [ main:3493 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3493 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3493 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1f03ce40] for Hibernate transaction
2017-03-16 15:20:56 [ main:3494 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1f03ce40]
2017-03-16 15:20:56 [ main:3494 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3495 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3495 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1f03ce40]
2017-03-16 15:20:56 [ main:3495 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1f03ce40] after transaction
2017-03-16 15:20:56 [ main:3495 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3496 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:56 [ main:3496 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3496 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@54e6204e] for Hibernate transaction
2017-03-16 15:20:56 [ main:3496 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@54e6204e]
2017-03-16 15:20:56 [ main:3496 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3499 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3499 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@54e6204e]
2017-03-16 15:20:56 [ main:3500 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@54e6204e] after transaction
2017-03-16 15:20:56 [ main:3500 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3513 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:56 [ main:3520 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3520 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@34f913d5] for Hibernate transaction
2017-03-16 15:20:56 [ main:3520 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@34f913d5]
2017-03-16 15:20:56 [ main:3521 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3522 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3522 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@34f913d5]
2017-03-16 15:20:56 [ main:3523 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@34f913d5] after transaction
2017-03-16 15:20:56 [ main:3523 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:56 [ main:3532 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:56 [ main:3539 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:56 [ main:3539 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@799e525a] for Hibernate transaction
2017-03-16 15:20:56 [ main:3539 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@799e525a]
2017-03-16 15:20:56 [ main:3539 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:56 [ main:3544 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:56 [ main:3544 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@799e525a]
2017-03-16 15:20:57 [ main:3545 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@799e525a] after transaction
2017-03-16 15:20:57 [ main:3545 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3554 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3561 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getParentId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3561 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@591f22c2] for Hibernate transaction
2017-03-16 15:20:57 [ main:3561 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@591f22c2]
2017-03-16 15:20:57 [ main:3562 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3563 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3563 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@591f22c2]
2017-03-16 15:20:57 [ main:3564 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@591f22c2] after transaction
2017-03-16 15:20:57 [ main:3564 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3572 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3578 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3578 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@20b55243] for Hibernate transaction
2017-03-16 15:20:57 [ main:3578 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@20b55243]
2017-03-16 15:20:57 [ main:3579 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3580 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3580 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@20b55243]
2017-03-16 15:20:57 [ main:3583 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@20b55243] after transaction
2017-03-16 15:20:57 [ main:3583 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3583 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3583 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@19d2e66e] for Hibernate transaction
2017-03-16 15:20:57 [ main:3584 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@19d2e66e]
2017-03-16 15:20:57 [ main:3584 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3585 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3585 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@19d2e66e]
2017-03-16 15:20:57 [ main:3586 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@19d2e66e] after transaction
2017-03-16 15:20:57 [ main:3586 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3594 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3601 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3602 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@175bb1df] for Hibernate transaction
2017-03-16 15:20:57 [ main:3602 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@175bb1df]
2017-03-16 15:20:57 [ main:3602 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3607 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3608 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@175bb1df] for Hibernate transaction
2017-03-16 15:20:57 [ main:3608 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3609 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3609 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@175bb1df] for Hibernate transaction
2017-03-16 15:20:57 [ main:3609 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3610 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3610 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@175bb1df]
2017-03-16 15:20:57 [ main:3611 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@175bb1df] after transaction
2017-03-16 15:20:57 [ main:3611 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3619 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3623 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.addNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3623 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@26a9a0b8] for Hibernate transaction
2017-03-16 15:20:57 [ main:3623 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@26a9a0b8]
2017-03-16 15:20:57 [ main:3624 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3624 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3624 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@26a9a0b8]
2017-03-16 15:20:57 [ main:3626 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@26a9a0b8] after transaction
2017-03-16 15:20:57 [ main:3626 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3626 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3626 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@14296cf1] for Hibernate transaction
2017-03-16 15:20:57 [ main:3626 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@14296cf1]
2017-03-16 15:20:57 [ main:3626 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3627 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3627 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@14296cf1]
2017-03-16 15:20:57 [ main:3628 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@14296cf1] after transaction
2017-03-16 15:20:57 [ main:3628 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3638 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3647 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3647 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2fc545e1] for Hibernate transaction
2017-03-16 15:20:57 [ main:3647 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2fc545e1]
2017-03-16 15:20:57 [ main:3648 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3652 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3652 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2fc545e1]
2017-03-16 15:20:57 [ main:3654 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2fc545e1] after transaction
2017-03-16 15:20:57 [ main:3654 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3664 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3670 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3671 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4cde17e5] for Hibernate transaction
2017-03-16 15:20:57 [ main:3671 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4cde17e5]
2017-03-16 15:20:57 [ main:3671 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3671 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3671 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4cde17e5]
2017-03-16 15:20:57 [ main:3672 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4cde17e5] after transaction
2017-03-16 15:20:57 [ main:3672 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3673 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3673 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5a0e5fed] for Hibernate transaction
2017-03-16 15:20:57 [ main:3673 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5a0e5fed]
2017-03-16 15:20:57 [ main:3673 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3674 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3674 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5a0e5fed]
2017-03-16 15:20:57 [ main:3675 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5a0e5fed] after transaction
2017-03-16 15:20:57 [ main:3675 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3675 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3675 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5830babd] for Hibernate transaction
2017-03-16 15:20:57 [ main:3675 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5830babd]
2017-03-16 15:20:57 [ main:3675 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3675 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3675 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5830babd]
2017-03-16 15:20:57 [ main:3677 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5830babd] after transaction
2017-03-16 15:20:57 [ main:3677 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3677 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3677 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3f651345] for Hibernate transaction
2017-03-16 15:20:57 [ main:3677 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3f651345]
2017-03-16 15:20:57 [ main:3677 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3678 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3678 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3f651345]
2017-03-16 15:20:57 [ main:3679 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3f651345] after transaction
2017-03-16 15:20:57 [ main:3679 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3687 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3693 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3693 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3826ea10] for Hibernate transaction
2017-03-16 15:20:57 [ main:3693 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3826ea10]
2017-03-16 15:20:57 [ main:3694 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3698 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3698 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3826ea10]
2017-03-16 15:20:57 [ main:3698 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3826ea10] after transaction
2017-03-16 15:20:57 [ main:3698 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3707 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3713 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3713 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3fbd1406] for Hibernate transaction
2017-03-16 15:20:57 [ main:3713 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3fbd1406]
2017-03-16 15:20:57 [ main:3714 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3715 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3716 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3fbd1406] for Hibernate transaction
2017-03-16 15:20:57 [ main:3716 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3716 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3717 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3fbd1406]
2017-03-16 15:20:57 [ main:3717 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3fbd1406] after transaction
2017-03-16 15:20:57 [ main:3717 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3726 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3732 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3732 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7f15d9b4] for Hibernate transaction
2017-03-16 15:20:57 [ main:3732 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f15d9b4]
2017-03-16 15:20:57 [ main:3733 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3733 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3733 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f15d9b4]
2017-03-16 15:20:57 [ main:3734 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f15d9b4] after transaction
2017-03-16 15:20:57 [ main:3734 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3734 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3735 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4a80f27d] for Hibernate transaction
2017-03-16 15:20:57 [ main:3735 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4a80f27d]
2017-03-16 15:20:57 [ main:3735 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3737 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3737 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4a80f27d]
2017-03-16 15:20:57 [ main:3738 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4a80f27d] after transaction
2017-03-16 15:20:57 [ main:3738 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3746 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3752 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.updateNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3752 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2b714bf9] for Hibernate transaction
2017-03-16 15:20:57 [ main:3752 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2b714bf9]
2017-03-16 15:20:57 [ main:3752 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3752 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3752 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2b714bf9]
2017-03-16 15:20:57 [ main:3754 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2b714bf9] after transaction
2017-03-16 15:20:57 [ main:3754 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3754 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3754 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@788e80b6] for Hibernate transaction
2017-03-16 15:20:57 [ main:3754 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@788e80b6]
2017-03-16 15:20:57 [ main:3754 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3755 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3755 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@788e80b6]
2017-03-16 15:20:57 [ main:3756 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@788e80b6] after transaction
2017-03-16 15:20:57 [ main:3756 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3764 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3771 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3771 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2943ebbf] for Hibernate transaction
2017-03-16 15:20:57 [ main:3771 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2943ebbf]
2017-03-16 15:20:57 [ main:3771 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3777 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3777 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2943ebbf]
2017-03-16 15:20:57 [ main:3778 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2943ebbf] after transaction
2017-03-16 15:20:57 [ main:3778 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3786 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3792 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChildsByType]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3793 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@498028b0] for Hibernate transaction
2017-03-16 15:20:57 [ main:3793 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@498028b0]
2017-03-16 15:20:57 [ main:3793 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3797 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3797 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@498028b0]
2017-03-16 15:20:57 [ main:3798 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@498028b0] after transaction
2017-03-16 15:20:57 [ main:3798 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3806 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3813 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getNodeTypes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3813 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2f6be385] for Hibernate transaction
2017-03-16 15:20:57 [ main:3813 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f6be385]
2017-03-16 15:20:57 [ main:3813 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3813 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3814 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f6be385]
2017-03-16 15:20:57 [ main:3814 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f6be385] after transaction
2017-03-16 15:20:57 [ main:3814 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3822 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3829 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3829 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@760d62e0] for Hibernate transaction
2017-03-16 15:20:57 [ main:3829 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@760d62e0]
2017-03-16 15:20:57 [ main:3829 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3831 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3831 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@760d62e0] for Hibernate transaction
2017-03-16 15:20:57 [ main:3831 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3832 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3832 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@760d62e0] for Hibernate transaction
2017-03-16 15:20:57 [ main:3832 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3833 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3833 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@760d62e0] for Hibernate transaction
2017-03-16 15:20:57 [ main:3833 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3834 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3834 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@760d62e0]
2017-03-16 15:20:57 [ main:3834 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@760d62e0] after transaction
2017-03-16 15:20:57 [ main:3834 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3842 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3848 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3848 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2e1d81eb] for Hibernate transaction
2017-03-16 15:20:57 [ main:3848 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2e1d81eb]
2017-03-16 15:20:57 [ main:3848 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3849 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3849 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2e1d81eb]
2017-03-16 15:20:57 [ main:3850 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2e1d81eb] after transaction
2017-03-16 15:20:57 [ main:3850 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3860 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3867 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.NodeDao.getAllNodes]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3867 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@753eb49e] for Hibernate transaction
2017-03-16 15:20:57 [ main:3867 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@753eb49e]
2017-03-16 15:20:57 [ main:3867 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3869 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3869 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@753eb49e] for Hibernate transaction
2017-03-16 15:20:57 [ main:3869 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3870 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3870 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@753eb49e] for Hibernate transaction
2017-03-16 15:20:57 [ main:3870 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3871 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3871 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@753eb49e] for Hibernate transaction
2017-03-16 15:20:57 [ main:3871 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3872 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3872 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@753eb49e] for Hibernate transaction
2017-03-16 15:20:57 [ main:3872 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3873 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3873 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@753eb49e] for Hibernate transaction
2017-03-16 15:20:57 [ main:3873 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3874 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:3875 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@753eb49e] for Hibernate transaction
2017-03-16 15:20:57 [ main:3875 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:3875 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3875 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@753eb49e]
2017-03-16 15:20:57 [ main:3876 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@753eb49e] after transaction
2017-03-16 15:20:57 [ main:3876 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3889 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:3899 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRoleMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3899 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@33415e7d] for Hibernate transaction
2017-03-16 15:20:57 [ main:3899 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@33415e7d]
2017-03-16 15:20:57 [ main:3900 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3903 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3903 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@33415e7d]
2017-03-16 15:20:57 [ main:3904 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@33415e7d] after transaction
2017-03-16 15:20:57 [ main:3904 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3904 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3904 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@23af4eff] for Hibernate transaction
2017-03-16 15:20:57 [ main:3904 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@23af4eff]
2017-03-16 15:20:57 [ main:3904 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3905 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3905 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@23af4eff]
2017-03-16 15:20:57 [ main:3906 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@23af4eff] after transaction
2017-03-16 15:20:57 [ main:3906 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3923 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:3927 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.addRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3927 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@51ecb8a1] for Hibernate transaction
2017-03-16 15:20:57 [ main:3927 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@51ecb8a1]
2017-03-16 15:20:57 [ main:3928 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3928 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3928 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@51ecb8a1]
2017-03-16 15:20:57 [ main:3929 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@51ecb8a1] after transaction
2017-03-16 15:20:57 [ main:3929 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3929 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3929 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@17df834b] for Hibernate transaction
2017-03-16 15:20:57 [ main:3929 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@17df834b]
2017-03-16 15:20:57 [ main:3930 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3931 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3931 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@17df834b]
2017-03-16 15:20:57 [ main:3931 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@17df834b] after transaction
2017-03-16 15:20:57 [ main:3931 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3942 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:3948 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3948 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4439eccf] for Hibernate transaction
2017-03-16 15:20:57 [ main:3948 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4439eccf]
2017-03-16 15:20:57 [ main:3948 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3951 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3951 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4439eccf]
2017-03-16 15:20:57 [ main:3952 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4439eccf] after transaction
2017-03-16 15:20:57 [ main:3952 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3963 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:3968 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3969 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@15830b45] for Hibernate transaction
2017-03-16 15:20:57 [ main:3969 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@15830b45]
2017-03-16 15:20:57 [ main:3969 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3969 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3969 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@15830b45]
2017-03-16 15:20:57 [ main:3970 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@15830b45] after transaction
2017-03-16 15:20:57 [ main:3970 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3970 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3970 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3a4d6148] for Hibernate transaction
2017-03-16 15:20:57 [ main:3970 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3a4d6148]
2017-03-16 15:20:57 [ main:3971 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3972 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3972 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3a4d6148]
2017-03-16 15:20:57 [ main:3972 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3a4d6148] after transaction
2017-03-16 15:20:57 [ main:3972 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:3983 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:3988 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:3988 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@21425f0f] for Hibernate transaction
2017-03-16 15:20:57 [ main:3989 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@21425f0f]
2017-03-16 15:20:57 [ main:3989 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:3992 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:3992 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@21425f0f]
2017-03-16 15:20:57 [ main:3993 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@21425f0f] after transaction
2017-03-16 15:20:57 [ main:3993 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4002 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4009 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4009 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3f442c7b] for Hibernate transaction
2017-03-16 15:20:57 [ main:4009 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3f442c7b]
2017-03-16 15:20:57 [ main:4009 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4013 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4013 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3f442c7b] for Hibernate transaction
2017-03-16 15:20:57 [ main:4013 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4014 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4015 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@3f442c7b] for Hibernate transaction
2017-03-16 15:20:57 [ main:4015 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4016 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4016 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3f442c7b]
2017-03-16 15:20:57 [ main:4017 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3f442c7b] after transaction
2017-03-16 15:20:57 [ main:4017 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4029 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4034 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateParent]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4035 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@92d0e04] for Hibernate transaction
2017-03-16 15:20:57 [ main:4035 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@92d0e04]
2017-03-16 15:20:57 [ main:4035 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4037 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4037 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@92d0e04]
2017-03-16 15:20:57 [ main:4038 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@92d0e04] after transaction
2017-03-16 15:20:57 [ main:4038 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4038 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4038 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@218d79e1] for Hibernate transaction
2017-03-16 15:20:57 [ main:4038 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@218d79e1]
2017-03-16 15:20:57 [ main:4039 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4040 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4040 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@218d79e1]
2017-03-16 15:20:57 [ main:4040 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@218d79e1] after transaction
2017-03-16 15:20:57 [ main:4040 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4050 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4056 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4056 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@45c46cf8] for Hibernate transaction
2017-03-16 15:20:57 [ main:4056 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@45c46cf8]
2017-03-16 15:20:57 [ main:4056 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4057 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4057 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@45c46cf8] for Hibernate transaction
2017-03-16 15:20:57 [ main:4057 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4059 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4060 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@45c46cf8] for Hibernate transaction
2017-03-16 15:20:57 [ main:4060 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4061 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4061 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@45c46cf8] for Hibernate transaction
2017-03-16 15:20:57 [ main:4061 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4061 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4062 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@45c46cf8]
2017-03-16 15:20:57 [ main:4062 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@45c46cf8] after transaction
2017-03-16 15:20:57 [ main:4062 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4076 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4083 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.updateStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4083 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@ae2e311] for Hibernate transaction
2017-03-16 15:20:57 [ main:4083 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@ae2e311]
2017-03-16 15:20:57 [ main:4084 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4086 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4086 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@ae2e311]
2017-03-16 15:20:57 [ main:4087 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@ae2e311] after transaction
2017-03-16 15:20:57 [ main:4087 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4087 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4087 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@379638b9] for Hibernate transaction
2017-03-16 15:20:57 [ main:4087 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@379638b9]
2017-03-16 15:20:57 [ main:4088 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4088 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4089 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@379638b9]
2017-03-16 15:20:57 [ main:4089 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@379638b9] after transaction
2017-03-16 15:20:57 [ main:4089 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4100 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4105 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.deleteRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4106 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2da6852a] for Hibernate transaction
2017-03-16 15:20:57 [ main:4106 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2da6852a]
2017-03-16 15:20:57 [ main:4106 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4109 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4109 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2da6852a] for Hibernate transaction
2017-03-16 15:20:57 [ main:4109 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4111 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:57 [ main:4111 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2da6852a] for Hibernate transaction
2017-03-16 15:20:57 [ main:4111 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4111 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4111 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2da6852a]
2017-03-16 15:20:57 [ main:4112 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2da6852a] after transaction
2017-03-16 15:20:57 [ main:4112 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4112 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4112 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7f762a9e] for Hibernate transaction
2017-03-16 15:20:57 [ main:4112 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7f762a9e]
2017-03-16 15:20:57 [ main:4113 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4113 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4113 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7f762a9e]
2017-03-16 15:20:57 [ main:4113 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7f762a9e] after transaction
2017-03-16 15:20:57 [ main:4113 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4114 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleUserDao'
2017-03-16 15:20:57 [ main:4114 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleUserDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4114 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@169eded9] for Hibernate transaction
2017-03-16 15:20:57 [ main:4114 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@169eded9]
2017-03-16 15:20:57 [ main:4114 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4115 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4115 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@169eded9]
2017-03-16 15:20:57 [ main:4115 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@169eded9] after transaction
2017-03-16 15:20:57 [ main:4115 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4115 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4115 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4115 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@659078d4] for Hibernate transaction
2017-03-16 15:20:57 [ main:4115 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@659078d4]
2017-03-16 15:20:57 [ main:4116 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4118 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4118 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@659078d4]
2017-03-16 15:20:57 [ main:4118 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@659078d4] after transaction
2017-03-16 15:20:57 [ main:4118 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4128 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4134 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4134 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7d117aef] for Hibernate transaction
2017-03-16 15:20:57 [ main:4134 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7d117aef]
2017-03-16 15:20:57 [ main:4134 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4135 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4135 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7d117aef]
2017-03-16 15:20:57 [ main:4136 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7d117aef] after transaction
2017-03-16 15:20:57 [ main:4136 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4136 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4136 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@39541633] for Hibernate transaction
2017-03-16 15:20:57 [ main:4136 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@39541633]
2017-03-16 15:20:57 [ main:4136 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4137 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4137 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@39541633]
2017-03-16 15:20:57 [ main:4138 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@39541633] after transaction
2017-03-16 15:20:57 [ main:4138 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4148 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4153 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4153 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@178a2456] for Hibernate transaction
2017-03-16 15:20:57 [ main:4153 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@178a2456]
2017-03-16 15:20:57 [ main:4154 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4155 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4155 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@178a2456] for Hibernate transaction
2017-03-16 15:20:57 [ main:4155 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4156 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4156 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@178a2456] for Hibernate transaction
2017-03-16 15:20:57 [ main:4156 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4157 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4157 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@178a2456] for Hibernate transaction
2017-03-16 15:20:57 [ main:4157 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4157 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4157 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@178a2456] for Hibernate transaction
2017-03-16 15:20:57 [ main:4157 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4158 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4158 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@178a2456]
2017-03-16 15:20:57 [ main:4159 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@178a2456] after transaction
2017-03-16 15:20:57 [ main:4159 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4169 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4175 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getAllRoles]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4175 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@34914f80] for Hibernate transaction
2017-03-16 15:20:57 [ main:4175 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@34914f80]
2017-03-16 15:20:57 [ main:4175 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4176 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4176 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@34914f80] for Hibernate transaction
2017-03-16 15:20:57 [ main:4177 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4177 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4177 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@34914f80] for Hibernate transaction
2017-03-16 15:20:57 [ main:4178 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4179 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4179 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@34914f80] for Hibernate transaction
2017-03-16 15:20:57 [ main:4179 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4179 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4179 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@34914f80] for Hibernate transaction
2017-03-16 15:20:57 [ main:4179 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4180 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4180 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@34914f80] for Hibernate transaction
2017-03-16 15:20:57 [ main:4180 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4181 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4181 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@34914f80]
2017-03-16 15:20:57 [ main:4182 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@34914f80] after transaction
2017-03-16 15:20:57 [ main:4182 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4193 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4199 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getChilds]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4199 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@63aaf4b] for Hibernate transaction
2017-03-16 15:20:57 [ main:4199 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@63aaf4b]
2017-03-16 15:20:57 [ main:4199 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4200 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4200 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@63aaf4b]
2017-03-16 15:20:57 [ main:4201 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@63aaf4b] after transaction
2017-03-16 15:20:57 [ main:4201 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4217 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4225 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.delete]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4225 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2c149d4d] for Hibernate transaction
2017-03-16 15:20:57 [ main:4225 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2c149d4d]
2017-03-16 15:20:57 [ main:4226 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4228 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4228 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2c149d4d]
2017-03-16 15:20:57 [ main:4228 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2c149d4d] after transaction
2017-03-16 15:20:57 [ main:4228 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4229 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4229 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4622fec1] for Hibernate transaction
2017-03-16 15:20:57 [ main:4229 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4622fec1]
2017-03-16 15:20:57 [ main:4229 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4230 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4230 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4622fec1]
2017-03-16 15:20:57 [ main:4230 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4622fec1] after transaction
2017-03-16 15:20:57 [ main:4230 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4235 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4237 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.addRoleNode]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4237 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@59dec740] for Hibernate transaction
2017-03-16 15:20:57 [ main:4237 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@59dec740]
2017-03-16 15:20:57 [ main:4238 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4238 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4238 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@59dec740]
2017-03-16 15:20:57 [ main:4239 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@59dec740] after transaction
2017-03-16 15:20:57 [ main:4239 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4244 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4249 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4249 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@44dd5b6] for Hibernate transaction
2017-03-16 15:20:57 [ main:4249 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@44dd5b6]
2017-03-16 15:20:57 [ main:4249 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4250 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4250 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@44dd5b6]
2017-03-16 15:20:57 [ main:4250 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@44dd5b6] after transaction
2017-03-16 15:20:57 [ main:4251 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4255 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4259 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4259 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6bb60e9a] for Hibernate transaction
2017-03-16 15:20:57 [ main:4259 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6bb60e9a]
2017-03-16 15:20:57 [ main:4260 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4260 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4260 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6bb60e9a]
2017-03-16 15:20:57 [ main:4261 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6bb60e9a] after transaction
2017-03-16 15:20:57 [ main:4261 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4261 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4261 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1cd6758f] for Hibernate transaction
2017-03-16 15:20:57 [ main:4261 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1cd6758f]
2017-03-16 15:20:57 [ main:4261 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4262 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4262 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1cd6758f]
2017-03-16 15:20:57 [ main:4262 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1cd6758f] after transaction
2017-03-16 15:20:57 [ main:4262 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4267 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4271 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4272 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@17c40621] for Hibernate transaction
2017-03-16 15:20:57 [ main:4272 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@17c40621]
2017-03-16 15:20:57 [ main:4272 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4273 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4273 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@17c40621]
2017-03-16 15:20:57 [ main:4273 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@17c40621] after transaction
2017-03-16 15:20:57 [ main:4274 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4278 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4282 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByRoleId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4282 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@61a6edfc] for Hibernate transaction
2017-03-16 15:20:57 [ main:4282 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@61a6edfc]
2017-03-16 15:20:57 [ main:4283 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4283 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4283 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@61a6edfc]
2017-03-16 15:20:57 [ main:4284 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@61a6edfc] after transaction
2017-03-16 15:20:57 [ main:4284 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4289 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4294 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.deleteByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4294 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@46bb0c51] for Hibernate transaction
2017-03-16 15:20:57 [ main:4294 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@46bb0c51]
2017-03-16 15:20:57 [ main:4295 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4295 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4295 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@46bb0c51]
2017-03-16 15:20:57 [ main:4296 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@46bb0c51] after transaction
2017-03-16 15:20:57 [ main:4296 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4296 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.queryByNodeId]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4296 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@ef99e17] for Hibernate transaction
2017-03-16 15:20:57 [ main:4296 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@ef99e17]
2017-03-16 15:20:57 [ main:4297 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4297 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4297 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@ef99e17]
2017-03-16 15:20:57 [ main:4298 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@ef99e17] after transaction
2017-03-16 15:20:57 [ main:4298 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4302 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4308 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4308 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2dfc7585] for Hibernate transaction
2017-03-16 15:20:57 [ main:4308 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2dfc7585]
2017-03-16 15:20:57 [ main:4309 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4309 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:4310 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2dfc7585] for Hibernate transaction
2017-03-16 15:20:57 [ main:4310 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4311 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2dfc7585] for Hibernate transaction
2017-03-16 15:20:57 [ main:4311 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4311 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2dfc7585] for Hibernate transaction
2017-03-16 15:20:57 [ main:4311 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4312 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:4313 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2dfc7585] for Hibernate transaction
2017-03-16 15:20:57 [ main:4313 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4314 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2dfc7585] for Hibernate transaction
2017-03-16 15:20:57 [ main:4314 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4315 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2dfc7585] for Hibernate transaction
2017-03-16 15:20:57 [ main:4315 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4315 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@2dfc7585] for Hibernate transaction
2017-03-16 15:20:57 [ main:4315 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4315 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4315 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2dfc7585]
2017-03-16 15:20:57 [ main:4317 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2dfc7585] after transaction
2017-03-16 15:20:57 [ main:4317 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4321 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleNodeDao'
2017-03-16 15:20:57 [ main:4325 ] - [ DEBUG ] Returning cached instance of singleton bean 'roleDao'
2017-03-16 15:20:57 [ main:4326 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleDao.getRoleById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4326 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5fb2943c] for Hibernate transaction
2017-03-16 15:20:57 [ main:4326 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5fb2943c]
2017-03-16 15:20:57 [ main:4326 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4327 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4327 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5fb2943c]
2017-03-16 15:20:57 [ main:4327 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5fb2943c] after transaction
2017-03-16 15:20:57 [ main:4328 ] - [ DEBUG ] Closing Hibernate Session
2017-03-16 15:20:57 [ main:4328 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-03-16 15:20:57 [ main:4328 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@741b173d] for Hibernate transaction
2017-03-16 15:20:57 [ main:4328 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@741b173d]
2017-03-16 15:20:57 [ main:4328 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/dtaoa?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-03-16 15:20:57 [ main:4336 ] - [ DEBUG ] Returning cached instance of singleton bean 'nodeDao'
2017-03-16 15:20:57 [ main:4339 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@741b173d] for Hibernate transaction
2017-03-16 15:20:57 [ main:4340 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4340 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@741b173d] for Hibernate transaction
2017-03-16 15:20:57 [ main:4340 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4341 ] - [ DEBUG ] Found thread-bound Session [org.hibernate.impl.SessionImpl@741b173d] for Hibernate transaction
2017-03-16 15:20:57 [ main:4341 ] - [ DEBUG ] Participating in existing transaction
2017-03-16 15:20:57 [ main:4342 ] - [ DEBUG ] Initiating transaction commit
2017-03-16 15:20:57 [ main:4342 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@741b173d]
2017-03-16 15:20:57 [ main:4343 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@741b173d] after transaction
2017-03-16 15:20:57 [ main:4343 ] - [ DEBUG ] Closing Hibernate Session
