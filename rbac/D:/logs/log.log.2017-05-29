2017-05-29 20:43:49 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5db1c85e: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5db1c85e]; startup date [Mon May 29 20:43:49 CST 2017]; root of context hierarchy
2017-05-29 20:43:49 [ main:58 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 20:43:49 [ main:87 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 20:43:49 [ main:133 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 20:43:49 [ main:134 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 20:43:53 [ main:4335 ] - [ DEBUG ] Loading bean definitions
2017-05-29 20:43:53 [ main:4361 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 20:43:53 [ main:4389 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 20:43:53 [ main:4389 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@5db1c85e]: org.springframework.beans.factory.support.DefaultListableBeanFactory@469dc8a0
2017-05-29 20:43:53 [ main:4389 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@5db1c85e: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5db1c85e]; startup date [Mon May 29 20:43:49 CST 2017]; root of context hierarchy
2017-05-29 20:43:53 [ main:4409 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 20:43:53 [ main:4409 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 20:43:53 [ main:4426 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 20:43:53 [ main:4438 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 20:43:53 [ main:4439 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@5abac7f3]
2017-05-29 20:43:53 [ main:4441 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@58a613c5]
2017-05-29 20:43:53 [ main:4442 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@469dc8a0: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 20:43:53 [ main:4443 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 20:43:53 [ main:4443 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 20:43:53 [ main:4447 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 20:43:53 [ main:4461 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 20:43:53 [ main:4461 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 20:43:53 [ main:4462 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 20:43:53 [ main:4465 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 20:43:53 [ main:4465 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 20:43:53 [ main:4466 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 20:43:53 [ main:4470 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 20:43:53 [ main:4470 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 20:43:53 [ main:4473 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 20:43:53 [ main:4473 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 20:43:53 [ main:4473 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 20:43:54 [ main:4490 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 20:43:54 [ main:4500 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 20:43:54 [ main:4502 ] - [ INFO ] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@469dc8a0: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 20:48:10 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@38246607: display name [org.springframework.context.support.ClassPathXmlApplicationContext@38246607]; startup date [Mon May 29 20:48:10 CST 2017]; root of context hierarchy
2017-05-29 20:48:10 [ main:48 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 20:48:10 [ main:62 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 20:48:10 [ main:85 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 20:48:10 [ main:87 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 20:48:20 [ main:9574 ] - [ DEBUG ] Loading bean definitions
2017-05-29 20:48:20 [ main:9593 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 20:48:20 [ main:9616 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 20:48:20 [ main:9616 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@38246607]: org.springframework.beans.factory.support.DefaultListableBeanFactory@5c508d73
2017-05-29 20:48:20 [ main:9616 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@38246607: display name [org.springframework.context.support.ClassPathXmlApplicationContext@38246607]; startup date [Mon May 29 20:48:10 CST 2017]; root of context hierarchy
2017-05-29 20:48:20 [ main:9631 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 20:48:20 [ main:9631 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 20:48:20 [ main:9645 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 20:48:20 [ main:9658 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 20:48:20 [ main:9660 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6d685f00]
2017-05-29 20:48:20 [ main:9661 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@5f556d56]
2017-05-29 20:48:20 [ main:9663 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5c508d73: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 20:48:20 [ main:9663 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 20:48:20 [ main:9663 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 20:48:20 [ main:9672 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 20:48:20 [ main:9688 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 20:48:20 [ main:9688 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 20:48:20 [ main:9689 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 20:48:20 [ main:9693 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 20:48:20 [ main:9693 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 20:48:20 [ main:9695 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 20:48:20 [ main:9699 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 20:48:20 [ main:9699 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 20:48:20 [ main:9702 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 20:48:20 [ main:9702 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 20:48:20 [ main:9702 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 20:48:20 [ main:9721 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 20:48:20 [ main:9728 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 20:48:20 [ main:9731 ] - [ INFO ] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5c508d73: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 20:53:11 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@38246607: display name [org.springframework.context.support.ClassPathXmlApplicationContext@38246607]; startup date [Mon May 29 20:53:11 CST 2017]; root of context hierarchy
2017-05-29 20:53:11 [ main:50 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 20:53:11 [ main:66 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 20:53:11 [ main:92 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 20:53:11 [ main:93 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 20:53:12 [ main:325 ] - [ WARN ] Ignored XML validation warning
org.xml.sax.SAXParseException; lineNumber: 26; columnNumber: 4; schema_reference.4: 无法读取方案文档 'http://www.springframework.org/schema/beans/spring-beans-4.0.xsd', 原因为 1) 无法找到文档; 2) 无法读取文档; 3) 文档的根元素不是 <xsd:schema>。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:99)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:433)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:347)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaErr(XSDHandler.java:4166)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaWarning(XSDHandler.java:4157)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument1(XSDHandler.java:2490)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:2187)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:573)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:617)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2453)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1772)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:746)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:379)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:396)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:342)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:310)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:212)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:113)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:80)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:123)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:422)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:352)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at dtx.oa.util.ApplicationContextUtil.<clinit>(ApplicationContextUtil.java:16)
	at dtx.oa.rbac.idao.factory.IDaoFactory.iUserDao(IDaoFactory.java:22)
	at dtx.oa.util.TestApp.test(TestApp.java:23)
	at dtx.oa.util.TestApp.main(TestApp.java:18)
Caused by: java.io.IOException: Server returned HTTP response code: 403 for URL: http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1627)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:643)
	at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:189)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:582)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:685)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser.parse(SchemaDOMParser.java:530)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:2175)
	... 36 more
2017-05-29 20:55:03 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@38246607: display name [org.springframework.context.support.ClassPathXmlApplicationContext@38246607]; startup date [Mon May 29 20:55:03 CST 2017]; root of context hierarchy
2017-05-29 20:55:03 [ main:47 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 20:55:03 [ main:68 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 20:55:03 [ main:97 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 20:55:03 [ main:98 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 20:55:09 [ main:5720 ] - [ WARN ] Ignored XML validation warning
org.xml.sax.SAXParseException; lineNumber: 26; columnNumber: 4; schema_reference.4: 无法读取方案文档 'http://www.springframework.org/schema/beans/spring-beans-4.0.xsd', 原因为 1) 无法找到文档; 2) 无法读取文档; 3) 文档的根元素不是 <xsd:schema>。
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.createSAXParseException(ErrorHandlerWrapper.java:198)
	at com.sun.org.apache.xerces.internal.util.ErrorHandlerWrapper.warning(ErrorHandlerWrapper.java:99)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:433)
	at com.sun.org.apache.xerces.internal.impl.XMLErrorReporter.reportError(XMLErrorReporter.java:347)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaErr(XSDHandler.java:4166)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.reportSchemaWarning(XSDHandler.java:4157)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument1(XSDHandler.java:2490)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:2187)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.parseSchema(XSDHandler.java:573)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaLoader.loadSchema(XMLSchemaLoader.java:617)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.findSchemaGrammar(XMLSchemaValidator.java:2453)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.handleStartElement(XMLSchemaValidator.java:1772)
	at com.sun.org.apache.xerces.internal.impl.xs.XMLSchemaValidator.startElement(XMLSchemaValidator.java:746)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.scanStartElement(XMLNSDocumentScannerImpl.java:379)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl$NSContentDriver.scanRootElementHook(XMLNSDocumentScannerImpl.java:605)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl$FragmentContentDriver.next(XMLDocumentFragmentScannerImpl.java:3138)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl$PrologDriver.next(XMLDocumentScannerImpl.java:880)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentScannerImpl.next(XMLDocumentScannerImpl.java:606)
	at com.sun.org.apache.xerces.internal.impl.XMLNSDocumentScannerImpl.next(XMLNSDocumentScannerImpl.java:117)
	at com.sun.org.apache.xerces.internal.impl.XMLDocumentFragmentScannerImpl.scanDocument(XMLDocumentFragmentScannerImpl.java:510)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:848)
	at com.sun.org.apache.xerces.internal.parsers.XML11Configuration.parse(XML11Configuration.java:777)
	at com.sun.org.apache.xerces.internal.parsers.XMLParser.parse(XMLParser.java:141)
	at com.sun.org.apache.xerces.internal.parsers.DOMParser.parse(DOMParser.java:243)
	at com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderImpl.parse(DocumentBuilderImpl.java:347)
	at org.springframework.beans.factory.xml.DefaultDocumentLoader.loadDocument(DefaultDocumentLoader.java:75)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.doLoadBeanDefinitions(XmlBeanDefinitionReader.java:396)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:342)
	at org.springframework.beans.factory.xml.XmlBeanDefinitionReader.loadBeanDefinitions(XmlBeanDefinitionReader.java:310)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:143)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:178)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:149)
	at org.springframework.beans.factory.support.AbstractBeanDefinitionReader.loadBeanDefinitions(AbstractBeanDefinitionReader.java:212)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:113)
	at org.springframework.context.support.AbstractXmlApplicationContext.loadBeanDefinitions(AbstractXmlApplicationContext.java:80)
	at org.springframework.context.support.AbstractRefreshableApplicationContext.refreshBeanFactory(AbstractRefreshableApplicationContext.java:123)
	at org.springframework.context.support.AbstractApplicationContext.obtainFreshBeanFactory(AbstractApplicationContext.java:422)
	at org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:352)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:139)
	at org.springframework.context.support.ClassPathXmlApplicationContext.<init>(ClassPathXmlApplicationContext.java:83)
	at dtx.oa.util.ApplicationContextUtil.<clinit>(ApplicationContextUtil.java:16)
	at dtx.oa.rbac.idao.factory.IDaoFactory.iUserDao(IDaoFactory.java:22)
	at dtx.oa.util.TestApp.test(TestApp.java:23)
	at dtx.oa.util.TestApp.main(TestApp.java:18)
Caused by: java.io.IOException: Server returned HTTP response code: 403 for URL: http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
	at sun.net.www.protocol.http.HttpURLConnection.getInputStream(HttpURLConnection.java:1627)
	at com.sun.org.apache.xerces.internal.impl.XMLEntityManager.setupCurrentEntity(XMLEntityManager.java:643)
	at com.sun.org.apache.xerces.internal.impl.XMLVersionDetector.determineDocVersion(XMLVersionDetector.java:189)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:582)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaParsingConfig.parse(SchemaParsingConfig.java:685)
	at com.sun.org.apache.xerces.internal.impl.xs.opti.SchemaDOMParser.parse(SchemaDOMParser.java:530)
	at com.sun.org.apache.xerces.internal.impl.xs.traversers.XSDHandler.getSchemaDocument(XSDHandler.java:2175)
	... 36 more
2017-05-29 20:56:31 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c]; startup date [Mon May 29 20:56:31 CST 2017]; root of context hierarchy
2017-05-29 20:56:31 [ main:45 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 20:56:31 [ main:61 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 20:56:31 [ main:86 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 20:56:31 [ main:87 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:01:14 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c]; startup date [Mon May 29 21:01:14 CST 2017]; root of context hierarchy
2017-05-29 21:01:14 [ main:43 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:01:14 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:01:14 [ main:83 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:01:14 [ main:84 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:01:20 [ main:5777 ] - [ DEBUG ] Loading bean definitions
2017-05-29 21:01:20 [ main:5798 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 21:01:20 [ main:5820 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 21:01:20 [ main:5820 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c]: org.springframework.beans.factory.support.DefaultListableBeanFactory@2227ca20
2017-05-29 21:01:20 [ main:5820 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c]; startup date [Mon May 29 21:01:14 CST 2017]; root of context hierarchy
2017-05-29 21:01:20 [ main:5835 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:01:20 [ main:5836 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:01:20 [ main:5850 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 21:01:20 [ main:5862 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:01:20 [ main:5863 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@14332f47]
2017-05-29 21:01:20 [ main:5864 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@72ca6922]
2017-05-29 21:01:20 [ main:5866 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2227ca20: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:01:20 [ main:5866 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 21:01:20 [ main:5866 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 21:01:20 [ main:5877 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 21:01:20 [ main:5894 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:01:20 [ main:5894 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:01:20 [ main:5895 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 21:01:20 [ main:5899 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:01:20 [ main:5899 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:01:20 [ main:5900 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 21:01:20 [ main:5904 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:01:20 [ main:5905 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:01:20 [ main:5908 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 21:01:20 [ main:5908 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 21:01:20 [ main:5908 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 21:01:20 [ main:5926 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 21:01:20 [ main:5933 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 21:01:20 [ main:5936 ] - [ INFO ] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2227ca20: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:02:51 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c]; startup date [Mon May 29 21:02:51 CST 2017]; root of context hierarchy
2017-05-29 21:02:52 [ main:44 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:02:52 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:02:52 [ main:85 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:02:52 [ main:86 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:03:22 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@38246607: display name [org.springframework.context.support.ClassPathXmlApplicationContext@38246607]; startup date [Mon May 29 21:03:22 CST 2017]; root of context hierarchy
2017-05-29 21:03:22 [ main:46 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:03:23 [ main:61 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:03:23 [ main:85 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:03:23 [ main:86 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:03:25 [ main:2857 ] - [ DEBUG ] Loading bean definitions
2017-05-29 21:03:25 [ main:2875 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 21:03:25 [ main:2898 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 21:03:25 [ main:2898 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@38246607]: org.springframework.beans.factory.support.DefaultListableBeanFactory@7ded25db
2017-05-29 21:03:25 [ main:2898 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@38246607: display name [org.springframework.context.support.ClassPathXmlApplicationContext@38246607]; startup date [Mon May 29 21:03:22 CST 2017]; root of context hierarchy
2017-05-29 21:03:25 [ main:2912 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:03:25 [ main:2913 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:03:25 [ main:2927 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 21:03:25 [ main:2943 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:03:25 [ main:2944 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@18f7cd36]
2017-05-29 21:03:25 [ main:2946 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@656254c5]
2017-05-29 21:03:25 [ main:2947 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7ded25db: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:03:25 [ main:2947 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 21:03:25 [ main:2948 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 21:03:25 [ main:2957 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 21:03:25 [ main:2973 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:03:25 [ main:2973 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:03:25 [ main:2975 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 21:03:25 [ main:2979 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:03:25 [ main:2979 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:03:25 [ main:2980 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 21:03:25 [ main:2984 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:03:25 [ main:2985 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:03:25 [ main:2989 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 21:03:25 [ main:2989 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 21:03:25 [ main:2989 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 21:03:25 [ main:3007 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 21:03:25 [ main:3014 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 21:03:25 [ main:3017 ] - [ INFO ] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@7ded25db: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:06:49 [ main:1 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c]; startup date [Mon May 29 21:06:49 CST 2017]; root of context hierarchy
2017-05-29 21:06:49 [ main:43 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:06:49 [ main:58 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:06:49 [ main:82 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:06:49 [ main:85 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:07:07 [ main:17836 ] - [ DEBUG ] Loading bean definitions
2017-05-29 21:07:07 [ main:17862 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 21:07:07 [ main:17884 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 21:07:07 [ main:17884 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c]: org.springframework.beans.factory.support.DefaultListableBeanFactory@56b9dbd2
2017-05-29 21:07:07 [ main:17884 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c]; startup date [Mon May 29 21:06:49 CST 2017]; root of context hierarchy
2017-05-29 21:07:07 [ main:17898 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:07:07 [ main:17899 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:07:07 [ main:17915 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 21:07:07 [ main:17927 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:07:07 [ main:17929 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6072f9c0]
2017-05-29 21:07:07 [ main:17930 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@27cd61b]
2017-05-29 21:07:07 [ main:17932 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@56b9dbd2: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:07:07 [ main:17932 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 21:07:07 [ main:17932 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 21:07:07 [ main:17940 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 21:07:07 [ main:17956 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:07:07 [ main:17956 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:07:07 [ main:17957 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 21:07:07 [ main:17962 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:07:07 [ main:17962 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:07:07 [ main:17963 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 21:07:07 [ main:17967 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:07:07 [ main:17968 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:07:07 [ main:17971 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 21:07:07 [ main:17971 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 21:07:07 [ main:17971 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 21:07:07 [ main:17989 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 21:07:07 [ main:17996 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 21:07:07 [ main:18000 ] - [ INFO ] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@56b9dbd2: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:08:29 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c]; startup date [Mon May 29 21:08:29 CST 2017]; root of context hierarchy
2017-05-29 21:08:29 [ main:44 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:08:29 [ main:61 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:08:29 [ main:84 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:08:29 [ main:86 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:09:14 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c]; startup date [Mon May 29 21:09:14 CST 2017]; root of context hierarchy
2017-05-29 21:09:14 [ main:45 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:09:14 [ main:62 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:09:14 [ main:86 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:09:14 [ main:87 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:09:20 [ main:6285 ] - [ DEBUG ] Loading bean definitions
2017-05-29 21:09:20 [ main:6303 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 21:09:20 [ main:6328 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 21:09:20 [ main:6328 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c]: org.springframework.beans.factory.support.DefaultListableBeanFactory@2c76a85e
2017-05-29 21:09:20 [ main:6328 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c]; startup date [Mon May 29 21:09:14 CST 2017]; root of context hierarchy
2017-05-29 21:09:20 [ main:6342 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:09:20 [ main:6343 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:09:20 [ main:6357 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 21:09:20 [ main:6369 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:09:20 [ main:6371 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@34c1a108]
2017-05-29 21:09:20 [ main:6372 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1aab8583]
2017-05-29 21:09:20 [ main:6374 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2c76a85e: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:09:20 [ main:6374 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 21:09:20 [ main:6374 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 21:09:21 [ main:6383 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 21:09:21 [ main:6399 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:09:21 [ main:6399 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:09:21 [ main:6400 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 21:09:21 [ main:6404 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:09:21 [ main:6404 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:09:21 [ main:6406 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 21:09:21 [ main:6413 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:09:21 [ main:6413 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:09:21 [ main:6416 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 21:09:21 [ main:6417 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 21:09:21 [ main:6417 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 21:09:21 [ main:6435 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 21:09:21 [ main:6442 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 21:09:21 [ main:6445 ] - [ INFO ] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2c76a85e: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:15:10 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5da6725c]; startup date [Mon May 29 21:15:10 CST 2017]; root of context hierarchy
2017-05-29 21:15:11 [ main:43 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:15:11 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:15:11 [ main:86 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:15:11 [ main:87 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:16:27 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c]; startup date [Mon May 29 21:16:27 CST 2017]; root of context hierarchy
2017-05-29 21:16:27 [ main:41 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:16:27 [ main:55 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:16:27 [ main:80 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:16:27 [ main:82 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:16:31 [ main:3963 ] - [ DEBUG ] Loading bean definitions
2017-05-29 21:16:31 [ main:3992 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 21:16:31 [ main:4014 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 21:16:31 [ main:4014 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c]: org.springframework.beans.factory.support.DefaultListableBeanFactory@2227ca20
2017-05-29 21:16:31 [ main:4015 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c]; startup date [Mon May 29 21:16:27 CST 2017]; root of context hierarchy
2017-05-29 21:16:31 [ main:4029 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:16:31 [ main:4029 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:16:31 [ main:4043 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 21:16:31 [ main:4055 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:16:31 [ main:4056 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@25c17335]
2017-05-29 21:16:31 [ main:4058 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@4bc6c86]
2017-05-29 21:16:31 [ main:4059 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2227ca20: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:16:31 [ main:4060 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 21:16:31 [ main:4060 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 21:16:31 [ main:4068 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 21:16:31 [ main:4083 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:16:31 [ main:4084 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:16:31 [ main:4085 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 21:16:31 [ main:4089 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:16:31 [ main:4089 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:16:31 [ main:4090 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 21:16:31 [ main:4094 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:16:31 [ main:4094 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:16:31 [ main:4098 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 21:16:31 [ main:4098 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 21:16:31 [ main:4098 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 21:16:31 [ main:4130 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 21:16:31 [ main:4138 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 21:16:31 [ main:4139 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-05-29 21:16:32 [ main:4301 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac]
2017-05-29 21:16:32 [ main:4301 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 21:16:32 [ main:4301 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 21:16:32 [ main:4302 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model2] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 21:16:32 [ main:4303 ] - [ DEBUG ] Resolved location pattern [classpath*:dtx/oa/rbac/model**/*.class] to resources [file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTree.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleNode.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/User.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Role.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleUser.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Node.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTree.class]]
2017-05-29 21:16:32 [ main:4461 ] - [ INFO ] Destroying singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2227ca20: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:19:21 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c]; startup date [Mon May 29 21:19:21 CST 2017]; root of context hierarchy
2017-05-29 21:19:21 [ main:42 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:19:21 [ main:58 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:19:21 [ main:82 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:19:21 [ main:84 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:19:23 [ main:1974 ] - [ DEBUG ] Loading bean definitions
2017-05-29 21:19:23 [ main:1993 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 21:19:23 [ main:2016 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 21:19:23 [ main:2016 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c]: org.springframework.beans.factory.support.DefaultListableBeanFactory@2c76a85e
2017-05-29 21:19:23 [ main:2016 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5a9e260c]; startup date [Mon May 29 21:19:21 CST 2017]; root of context hierarchy
2017-05-29 21:19:23 [ main:2030 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:19:23 [ main:2031 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:19:23 [ main:2044 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 21:19:23 [ main:2057 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:19:23 [ main:2058 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@64f0d946]
2017-05-29 21:19:23 [ main:2059 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@7b77ca0]
2017-05-29 21:19:23 [ main:2061 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@2c76a85e: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:19:23 [ main:2061 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 21:19:23 [ main:2061 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 21:19:23 [ main:2069 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 21:19:23 [ main:2085 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:23 [ main:2085 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:23 [ main:2086 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 21:19:23 [ main:2091 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:19:23 [ main:2091 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:19:23 [ main:2092 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 21:19:23 [ main:2096 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:19:23 [ main:2097 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:23 [ main:2100 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 21:19:23 [ main:2100 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 21:19:23 [ main:2100 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 21:19:23 [ main:2128 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 21:19:23 [ main:2137 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 21:19:23 [ main:2139 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-05-29 21:19:23 [ main:2268 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac]
2017-05-29 21:19:23 [ main:2268 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 21:19:23 [ main:2268 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 21:19:23 [ main:2270 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model2] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 21:19:23 [ main:2271 ] - [ DEBUG ] Resolved location pattern [classpath*:dtx/oa/rbac/model**/*.class] to resources [file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTree.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleNode.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/User.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Role.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleUser.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Node.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTree.class]]
2017-05-29 21:19:23 [ main:2470 ] - [ INFO ] Building new Hibernate SessionFactory
2017-05-29 21:19:24 [ main:3449 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:24 [ main:3452 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-05-29 21:19:24 [ main:3452 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-05-29 21:19:24 [ main:3452 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-05-29 21:19:24 [ main:3452 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-05-29 21:19:24 [ main:3455 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:19:24 [ main:3456 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:24 [ main:3462 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:24 [ main:3468 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3477 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 21:19:24 [ main:3482 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@353784ae]
2017-05-29 21:19:24 [ main:3538 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 21:19:24 [ main:3539 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 21:19:24 [ main:3539 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-05-29 21:19:24 [ main:3541 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-05-29 21:19:24 [ main:3541 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-05-29 21:19:24 [ main:3546 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-05-29 21:19:24 [ main:3549 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:19:24 [ main:3549 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-05-29 21:19:24 [ main:3554 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@977f14d] of Hibernate SessionFactory for HibernateTransactionManager
2017-05-29 21:19:24 [ main:3555 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:24 [ main:3556 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-05-29 21:19:24 [ main:3556 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:19:24 [ main:3556 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 21:19:24 [ main:3556 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 21:19:24 [ main:3558 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3559 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User,boolean)
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3560 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 21:19:24 [ main:3561 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 21:19:24 [ main:3562 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3563 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 21:19:24 [ main:3563 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 21:19:24 [ main:3563 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3563 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3563 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 21:19:24 [ main:3563 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 21:19:24 [ main:3563 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 21:19:24 [ main:3563 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 21:19:24 [ main:3584 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-05-29 21:19:24 [ main:3584 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-05-29 21:19:24 [ main:3584 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-05-29 21:19:24 [ main:3584 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-05-29 21:19:24 [ main:3590 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:19:24 [ main:3590 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:24 [ main:3590 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3590 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 21:19:24 [ main:3590 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@7384ef21]
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3592 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role,boolean)
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 21:19:24 [ main:3593 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-05-29 21:19:24 [ main:3594 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3595 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 21:19:24 [ main:3596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 21:19:24 [ main:3597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 21:19:24 [ main:3613 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-05-29 21:19:24 [ main:3614 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-05-29 21:19:24 [ main:3614 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-05-29 21:19:24 [ main:3614 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-05-29 21:19:24 [ main:3618 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:19:24 [ main:3618 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:24 [ main:3618 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3618 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 21:19:24 [ main:3618 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@63e5d6c2]
2017-05-29 21:19:24 [ main:3620 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3620 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-05-29 21:19:24 [ main:3620 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3620 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-05-29 21:19:24 [ main:3620 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3620 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-05-29 21:19:24 [ main:3620 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3620 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-05-29 21:19:24 [ main:3620 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node)
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node,boolean)
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-05-29 21:19:24 [ main:3621 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int)
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int,boolean)
2017-05-29 21:19:24 [ main:3622 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node)
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-05-29 21:19:24 [ main:3623 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node)
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 21:19:24 [ main:3624 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 21:19:24 [ main:3625 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 21:19:24 [ main:3626 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 21:19:24 [ main:3627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 21:19:24 [ main:3627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 21:19:24 [ main:3644 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-05-29 21:19:24 [ main:3644 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-05-29 21:19:24 [ main:3644 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-05-29 21:19:24 [ main:3645 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-05-29 21:19:24 [ main:3647 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:19:24 [ main:3647 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:24 [ main:3647 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3647 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 21:19:24 [ main:3647 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@5b565730]
2017-05-29 21:19:24 [ main:3648 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUser(dtx.oa.rbac.model.User)
2017-05-29 21:19:24 [ main:3648 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3648 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.User)
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.RoleUser)
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Adding transactional method [deleteRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3649 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.User,dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(dtx.oa.rbac.model.User,java.util.List)
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3650 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3652 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 21:19:24 [ main:3653 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 21:19:24 [ main:3665 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-05-29 21:19:24 [ main:3665 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-05-29 21:19:24 [ main:3665 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-05-29 21:19:24 [ main:3666 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-05-29 21:19:24 [ main:3668 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:19:24 [ main:3668 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:24 [ main:3668 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3668 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 21:19:24 [ main:3668 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@69aebe35]
2017-05-29 21:19:24 [ main:3669 ] - [ DEBUG ] Adding transactional method [queryByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNode(dtx.oa.rbac.model.Node)
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.Node)
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Adding transactional method [deleteRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3670 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.Node,dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.RoleNode)
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3671 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3672 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 21:19:24 [ main:3673 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 21:19:24 [ main:3674 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 21:19:24 [ main:3685 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-05-29 21:19:24 [ main:3685 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-05-29 21:19:24 [ main:3685 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:19:24 [ main:3685 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:19:24 [ main:3685 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 21:19:24 [ main:3685 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:19:24 [ main:3686 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 21:19:24 [ main:3691 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 21:19:24 [ main:3715 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@69b7cd2e] for Hibernate transaction
2017-05-29 21:19:24 [ main:3716 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@69b7cd2e]
2017-05-29 21:19:24 [ main:3729 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 21:19:25 [ main:3874 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 21:19:25 [ main:3874 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@69b7cd2e]
2017-05-29 21:19:25 [ main:3875 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@69b7cd2e] after transaction
2017-05-29 21:19:25 [ main:3875 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 21:35:14 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@14fa3ef: display name [org.springframework.context.support.ClassPathXmlApplicationContext@14fa3ef]; startup date [Mon May 29 21:35:14 CST 2017]; root of context hierarchy
2017-05-29 21:35:14 [ main:49 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:35:14 [ main:62 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:35:14 [ main:92 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:35:14 [ main:93 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:37:42 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@fd94e60: display name [org.springframework.context.support.ClassPathXmlApplicationContext@fd94e60]; startup date [Mon May 29 21:37:42 CST 2017]; root of context hierarchy
2017-05-29 21:37:42 [ main:53 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:37:42 [ main:66 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:37:42 [ main:92 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:37:42 [ main:93 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 21:38:34 [ main:52716 ] - [ DEBUG ] Loading bean definitions
2017-05-29 21:38:34 [ main:52737 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 21:38:34 [ main:52759 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 21:38:34 [ main:52759 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@fd94e60]: org.springframework.beans.factory.support.DefaultListableBeanFactory@20fd55cc
2017-05-29 21:38:34 [ main:52760 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@fd94e60: display name [org.springframework.context.support.ClassPathXmlApplicationContext@fd94e60]; startup date [Mon May 29 21:37:42 CST 2017]; root of context hierarchy
2017-05-29 21:38:34 [ main:52777 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:38:34 [ main:52778 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:38:34 [ main:52794 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 21:38:34 [ main:52806 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:38:34 [ main:52807 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@262b6728]
2017-05-29 21:38:34 [ main:52809 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1aa7a03b]
2017-05-29 21:38:34 [ main:52810 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@20fd55cc: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 21:38:34 [ main:52810 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 21:38:34 [ main:52810 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 21:38:34 [ main:52814 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 21:38:34 [ main:52828 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:34 [ main:52828 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:34 [ main:52829 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 21:38:34 [ main:52833 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:38:34 [ main:52833 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:38:34 [ main:52834 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 21:38:34 [ main:52838 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:38:34 [ main:52838 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:34 [ main:52841 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 21:38:34 [ main:52841 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 21:38:34 [ main:52841 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 21:38:34 [ main:52861 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 21:38:34 [ main:52871 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 21:38:34 [ main:52873 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-05-29 21:38:35 [ main:53014 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac]
2017-05-29 21:38:35 [ main:53014 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac/model**/*.class]
2017-05-29 21:38:35 [ main:53014 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac]
2017-05-29 21:38:35 [ main:53014 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 21:38:35 [ main:53014 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 21:38:35 [ main:53016 ] - [ DEBUG ] Resolved location pattern [classpath*:dtx/oa/rbac/model**/*.class] to resources [file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTree.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleNode.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/User.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Role.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleUser.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Node.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTree.class]]
2017-05-29 21:38:35 [ main:53253 ] - [ INFO ] Building new Hibernate SessionFactory
2017-05-29 21:38:35 [ main:53646 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:35 [ main:53649 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-05-29 21:38:35 [ main:53649 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-05-29 21:38:35 [ main:53649 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-05-29 21:38:35 [ main:53649 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-05-29 21:38:35 [ main:53652 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:38:35 [ main:53653 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:35 [ main:53658 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:35 [ main:53664 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53676 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 21:38:35 [ main:53681 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@2587cde8]
2017-05-29 21:38:35 [ main:53736 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 21:38:35 [ main:53736 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 21:38:35 [ main:53736 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-05-29 21:38:35 [ main:53739 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-05-29 21:38:35 [ main:53739 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-05-29 21:38:35 [ main:53743 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-05-29 21:38:35 [ main:53747 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:38:35 [ main:53747 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-05-29 21:38:35 [ main:53754 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@5782899e] of Hibernate SessionFactory for HibernateTransactionManager
2017-05-29 21:38:35 [ main:53756 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:35 [ main:53757 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-05-29 21:38:35 [ main:53758 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:38:35 [ main:53758 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 21:38:35 [ main:53758 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 21:38:35 [ main:53760 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User,boolean)
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53761 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53762 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53763 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53764 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 21:38:35 [ main:53765 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 21:38:35 [ main:53765 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 21:38:35 [ main:53765 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 21:38:35 [ main:53765 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 21:38:35 [ main:53765 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 21:38:35 [ main:53765 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53765 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 21:38:35 [ main:53765 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 21:38:35 [ main:53798 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-05-29 21:38:35 [ main:53798 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-05-29 21:38:35 [ main:53798 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-05-29 21:38:35 [ main:53799 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-05-29 21:38:35 [ main:53803 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:38:35 [ main:53804 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:35 [ main:53806 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53807 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 21:38:35 [ main:53807 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@2e08a85e]
2017-05-29 21:38:35 [ main:53808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53808 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-05-29 21:38:35 [ main:53808 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53808 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 21:38:35 [ main:53808 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-05-29 21:38:35 [ main:53809 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role,boolean)
2017-05-29 21:38:35 [ main:53810 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 21:38:35 [ main:53811 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53812 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53813 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53814 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 21:38:35 [ main:53814 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 21:38:35 [ main:53814 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 21:38:35 [ main:53814 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 21:38:35 [ main:53814 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 21:38:35 [ main:53814 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 21:38:35 [ main:53814 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53814 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 21:38:35 [ main:53814 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 21:38:35 [ main:53832 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-05-29 21:38:35 [ main:53833 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-05-29 21:38:35 [ main:53833 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-05-29 21:38:35 [ main:53833 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-05-29 21:38:35 [ main:53837 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:38:35 [ main:53837 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:35 [ main:53838 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53838 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 21:38:35 [ main:53838 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@4a9e6b8a]
2017-05-29 21:38:35 [ main:53839 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-05-29 21:38:35 [ main:53839 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node)
2017-05-29 21:38:35 [ main:53839 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-05-29 21:38:35 [ main:53839 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53839 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node)
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53840 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node,boolean)
2017-05-29 21:38:35 [ main:53841 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node)
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int)
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53842 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int,boolean)
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53843 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 21:38:35 [ main:53844 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 21:38:35 [ main:53845 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 21:38:35 [ main:53862 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-05-29 21:38:35 [ main:53862 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-05-29 21:38:35 [ main:53862 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-05-29 21:38:35 [ main:53862 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-05-29 21:38:35 [ main:53865 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:38:35 [ main:53865 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:35 [ main:53865 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53865 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 21:38:35 [ main:53865 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@5a27079]
2017-05-29 21:38:35 [ main:53866 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53866 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.User)
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.RoleUser)
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Adding transactional method [deleteRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53867 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.User,dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(dtx.oa.rbac.model.User,java.util.List)
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUser(dtx.oa.rbac.model.User)
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53868 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 21:38:35 [ main:53869 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53869 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 21:38:35 [ main:53869 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53869 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53869 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53869 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 21:38:35 [ main:53869 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53869 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 21:38:35 [ main:53869 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53869 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 21:38:35 [ main:53870 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53871 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 21:38:35 [ main:53872 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 21:38:35 [ main:53884 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-05-29 21:38:35 [ main:53884 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-05-29 21:38:35 [ main:53884 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-05-29 21:38:35 [ main:53884 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-05-29 21:38:35 [ main:53887 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 21:38:35 [ main:53887 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:35 [ main:53887 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53887 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 21:38:35 [ main:53887 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@42f35c54]
2017-05-29 21:38:35 [ main:53888 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53888 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-05-29 21:38:35 [ main:53888 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53888 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53888 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53888 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.RoleNode)
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Adding transactional method [queryByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNode(dtx.oa.rbac.model.Node)
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.Node)
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Adding transactional method [deleteRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.Node,dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53890 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 21:38:35 [ main:53891 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 21:38:35 [ main:53892 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 21:38:35 [ main:53905 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-05-29 21:38:35 [ main:53905 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-05-29 21:38:35 [ main:53905 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 21:38:35 [ main:53905 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 21:38:35 [ main:53905 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 21:38:35 [ main:53905 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 21:38:35 [ main:53905 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 21:38:36 [ main:53949 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 21:38:36 [ main:53953 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 21:38:36 [ main:53957 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 21:38:36 [ main:53962 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 21:38:36 [ main:53970 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 21:38:36 [ main:53975 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 21:41:50 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1c997c85: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1c997c85]; startup date [Mon May 29 21:41:50 CST 2017]; root of context hierarchy
2017-05-29 21:41:50 [ main:48 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 21:41:50 [ main:61 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 21:41:50 [ main:86 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 21:41:50 [ main:87 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 22:04:07 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@46e5dce1: display name [org.springframework.context.support.ClassPathXmlApplicationContext@46e5dce1]; startup date [Mon May 29 22:04:07 CST 2017]; root of context hierarchy
2017-05-29 22:04:07 [ main:52 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 22:04:07 [ main:68 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 22:04:07 [ main:98 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 22:04:07 [ main:100 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 22:04:32 [ main:25483 ] - [ DEBUG ] Loading bean definitions
2017-05-29 22:04:32 [ main:25501 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 22:04:32 [ main:25523 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 22:04:32 [ main:25523 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@46e5dce1]: org.springframework.beans.factory.support.DefaultListableBeanFactory@27e54167
2017-05-29 22:04:32 [ main:25524 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@46e5dce1: display name [org.springframework.context.support.ClassPathXmlApplicationContext@46e5dce1]; startup date [Mon May 29 22:04:07 CST 2017]; root of context hierarchy
2017-05-29 22:04:32 [ main:25542 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:04:32 [ main:25542 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:04:32 [ main:25556 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 22:04:32 [ main:25568 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:04:32 [ main:25572 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@eea44aa]
2017-05-29 22:04:32 [ main:25574 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@70110075]
2017-05-29 22:04:32 [ main:25575 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@27e54167: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 22:04:32 [ main:25576 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 22:04:32 [ main:25576 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 22:04:32 [ main:25580 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 22:04:32 [ main:25594 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:32 [ main:25594 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:32 [ main:25595 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 22:04:32 [ main:25598 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:04:32 [ main:25598 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:04:32 [ main:25600 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 22:04:32 [ main:25603 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:04:32 [ main:25603 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:32 [ main:25606 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 22:04:32 [ main:25606 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 22:04:32 [ main:25606 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 22:04:32 [ main:25624 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 22:04:32 [ main:25632 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 22:04:32 [ main:25633 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-05-29 22:04:33 [ main:25761 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac]
2017-05-29 22:04:33 [ main:25762 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:04:33 [ main:25762 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac]
2017-05-29 22:04:33 [ main:25762 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:04:33 [ main:25762 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:04:33 [ main:25764 ] - [ DEBUG ] Resolved location pattern [classpath*:dtx/oa/rbac/model**/*.class] to resources [file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTree.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleNode.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/User.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Role.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleUser.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Node.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTree.class]]
2017-05-29 22:04:33 [ main:25992 ] - [ INFO ] Building new Hibernate SessionFactory
2017-05-29 22:04:33 [ main:26416 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:33 [ main:26421 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-05-29 22:04:33 [ main:26422 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-05-29 22:04:33 [ main:26422 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-05-29 22:04:33 [ main:26423 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-05-29 22:04:33 [ main:26425 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:04:33 [ main:26426 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:33 [ main:26432 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:33 [ main:26441 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26448 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:04:33 [ main:26453 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@19661df0]
2017-05-29 22:04:33 [ main:26510 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:04:33 [ main:26510 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:04:33 [ main:26511 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-05-29 22:04:33 [ main:26514 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-05-29 22:04:33 [ main:26514 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-05-29 22:04:33 [ main:26522 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-05-29 22:04:33 [ main:26526 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:04:33 [ main:26526 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-05-29 22:04:33 [ main:26532 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@37dc3e47] of Hibernate SessionFactory for HibernateTransactionManager
2017-05-29 22:04:33 [ main:26533 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:33 [ main:26534 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-05-29 22:04:33 [ main:26534 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:04:33 [ main:26534 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:04:33 [ main:26534 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:04:33 [ main:26537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-05-29 22:04:33 [ main:26537 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-05-29 22:04:33 [ main:26537 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-05-29 22:04:33 [ main:26537 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-05-29 22:04:33 [ main:26537 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26537 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User,boolean)
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26538 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:04:33 [ main:26539 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:04:33 [ main:26540 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26541 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:04:33 [ main:26587 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-05-29 22:04:33 [ main:26587 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-05-29 22:04:33 [ main:26587 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-05-29 22:04:33 [ main:26587 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-05-29 22:04:33 [ main:26591 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:04:33 [ main:26591 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:33 [ main:26591 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26591 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:04:33 [ main:26591 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@37eec280]
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26593 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26594 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26595 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26596 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:04:33 [ main:26597 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26598 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:04:33 [ main:26615 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-05-29 22:04:33 [ main:26615 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-05-29 22:04:33 [ main:26615 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-05-29 22:04:33 [ main:26615 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-05-29 22:04:33 [ main:26620 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:04:33 [ main:26620 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:33 [ main:26620 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26620 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:04:33 [ main:26620 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@6342effb]
2017-05-29 22:04:33 [ main:26621 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int)
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int,boolean)
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-05-29 22:04:33 [ main:26623 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node)
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26625 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:04:33 [ main:26626 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:04:33 [ main:26627 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:04:33 [ main:26628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:04:33 [ main:26628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:04:33 [ main:26628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:04:33 [ main:26628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:04:33 [ main:26628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26628 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:04:33 [ main:26647 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-05-29 22:04:33 [ main:26647 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-05-29 22:04:33 [ main:26648 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-05-29 22:04:33 [ main:26648 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-05-29 22:04:33 [ main:26650 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:04:33 [ main:26650 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:33 [ main:26650 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26650 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:04:33 [ main:26651 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@3a5085a1]
2017-05-29 22:04:33 [ main:26651 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26651 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUser(dtx.oa.rbac.model.User)
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.User)
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26652 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Adding transactional method [deleteRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.User,dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(dtx.oa.rbac.model.User,java.util.List)
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26653 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26654 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:04:33 [ main:26655 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26656 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:04:33 [ main:26656 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:04:33 [ main:26656 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:04:33 [ main:26656 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26656 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26656 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:04:33 [ main:26669 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-05-29 22:04:33 [ main:26670 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-05-29 22:04:33 [ main:26670 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-05-29 22:04:33 [ main:26672 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-05-29 22:04:33 [ main:26675 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:04:33 [ main:26675 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:33 [ main:26675 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26676 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:04:33 [ main:26676 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@6fc75315]
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Adding transactional method [deleteRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26677 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.Node,dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Adding transactional method [queryByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26678 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26679 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26680 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:04:33 [ main:26681 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:04:33 [ main:26692 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-05-29 22:04:33 [ main:26692 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-05-29 22:04:33 [ main:26692 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:04:33 [ main:26692 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:04:33 [ main:26692 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:04:33 [ main:26692 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:04:33 [ main:26692 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:04:34 [ main:26758 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:04:34 [ main:26763 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:04:34 [ main:26773 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:04:34 [ main:26778 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:04:34 [ main:26784 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:04:34 [ main:26793 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:09:12 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d085c24: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1d085c24]; startup date [Mon May 29 22:09:12 CST 2017]; root of context hierarchy
2017-05-29 22:09:12 [ main:51 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 22:09:12 [ main:63 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 22:09:13 [ main:88 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 22:09:13 [ main:89 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 22:09:17 [ main:4676 ] - [ DEBUG ] Loading bean definitions
2017-05-29 22:09:17 [ main:4703 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 22:09:17 [ main:4749 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 22:09:17 [ main:4750 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@1d085c24]: org.springframework.beans.factory.support.DefaultListableBeanFactory@494212f9
2017-05-29 22:09:17 [ main:4761 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@1d085c24: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1d085c24]; startup date [Mon May 29 22:09:12 CST 2017]; root of context hierarchy
2017-05-29 22:09:17 [ main:4791 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:09:17 [ main:4792 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:09:17 [ main:4807 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 22:09:17 [ main:4820 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:09:17 [ main:4822 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@3ca6a478]
2017-05-29 22:09:17 [ main:4824 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@6eb58296]
2017-05-29 22:09:17 [ main:4825 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@494212f9: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 22:09:17 [ main:4826 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 22:09:17 [ main:4826 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 22:09:17 [ main:4829 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 22:09:17 [ main:4844 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:17 [ main:4844 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:17 [ main:4845 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 22:09:17 [ main:4849 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:09:17 [ main:4849 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:09:17 [ main:4851 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 22:09:17 [ main:4854 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:09:17 [ main:4855 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:17 [ main:4858 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 22:09:17 [ main:4858 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 22:09:17 [ main:4858 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 22:09:17 [ main:4877 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 22:09:17 [ main:4886 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 22:09:17 [ main:4887 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-05-29 22:09:18 [ main:5085 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac]
2017-05-29 22:09:18 [ main:5085 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:09:18 [ main:5086 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac]
2017-05-29 22:09:18 [ main:5086 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:09:18 [ main:5086 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:09:18 [ main:5088 ] - [ DEBUG ] Resolved location pattern [classpath*:dtx/oa/rbac/model**/*.class] to resources [file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTree.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleNode.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/User.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Role.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleUser.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Node.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTree.class]]
2017-05-29 22:09:18 [ main:5293 ] - [ INFO ] Building new Hibernate SessionFactory
2017-05-29 22:09:18 [ main:5665 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:18 [ main:5673 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-05-29 22:09:18 [ main:5675 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-05-29 22:09:18 [ main:5675 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-05-29 22:09:18 [ main:5675 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-05-29 22:09:18 [ main:5678 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:09:18 [ main:5679 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:18 [ main:5687 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:18 [ main:5694 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5700 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:09:18 [ main:5705 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@54911265]
2017-05-29 22:09:18 [ main:5765 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:09:18 [ main:5765 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:09:18 [ main:5765 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-05-29 22:09:18 [ main:5772 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-05-29 22:09:18 [ main:5772 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-05-29 22:09:18 [ main:5776 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-05-29 22:09:18 [ main:5781 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:09:18 [ main:5781 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-05-29 22:09:18 [ main:5794 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@639afee3] of Hibernate SessionFactory for HibernateTransactionManager
2017-05-29 22:09:18 [ main:5794 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:18 [ main:5795 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-05-29 22:09:18 [ main:5796 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:09:18 [ main:5796 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:09:18 [ main:5796 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:09:18 [ main:5799 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5799 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-05-29 22:09:18 [ main:5799 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5799 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-05-29 22:09:18 [ main:5799 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5799 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-05-29 22:09:18 [ main:5799 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5799 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-05-29 22:09:18 [ main:5799 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User,boolean)
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5800 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:09:18 [ main:5801 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5801 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5801 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5801 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:09:18 [ main:5801 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5801 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5801 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5801 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:09:18 [ main:5802 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:09:18 [ main:5803 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:09:18 [ main:5804 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:09:18 [ main:5842 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-05-29 22:09:18 [ main:5842 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-05-29 22:09:18 [ main:5842 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-05-29 22:09:18 [ main:5842 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-05-29 22:09:18 [ main:5846 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:09:18 [ main:5846 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:18 [ main:5846 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5846 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:09:18 [ main:5846 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@25bf38a2]
2017-05-29 22:09:18 [ main:5848 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5848 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-05-29 22:09:18 [ main:5848 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5848 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-05-29 22:09:18 [ main:5848 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5848 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5848 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5848 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:09:18 [ main:5848 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:09:18 [ main:5849 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5850 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5851 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5852 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5853 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:09:18 [ main:5854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:09:18 [ main:5854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:09:18 [ main:5854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:09:18 [ main:5854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:09:18 [ main:5854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:09:18 [ main:5873 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-05-29 22:09:18 [ main:5873 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-05-29 22:09:18 [ main:5873 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-05-29 22:09:18 [ main:5873 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-05-29 22:09:18 [ main:5878 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:09:18 [ main:5878 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:18 [ main:5878 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5878 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:09:18 [ main:5878 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@7812777]
2017-05-29 22:09:18 [ main:5879 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5880 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int)
2017-05-29 22:09:18 [ main:5880 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5880 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-05-29 22:09:18 [ main:5880 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5880 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int,boolean)
2017-05-29 22:09:18 [ main:5880 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5880 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-05-29 22:09:18 [ main:5880 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5880 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-05-29 22:09:18 [ main:5880 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5881 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-05-29 22:09:18 [ main:5881 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5881 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-05-29 22:09:18 [ main:5881 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5881 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-05-29 22:09:18 [ main:5881 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5881 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-05-29 22:09:18 [ main:5882 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:09:18 [ main:5882 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node)
2017-05-29 22:09:18 [ main:5882 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-05-29 22:09:18 [ main:5882 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-05-29 22:09:18 [ main:5882 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-05-29 22:09:18 [ main:5883 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:09:18 [ main:5883 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:09:18 [ main:5883 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-05-29 22:09:18 [ main:5883 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-05-29 22:09:18 [ main:5884 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5884 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:09:18 [ main:5884 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5884 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:09:18 [ main:5884 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5885 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:09:18 [ main:5885 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5885 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-05-29 22:09:18 [ main:5886 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5886 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-05-29 22:09:18 [ main:5886 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5886 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-05-29 22:09:18 [ main:5887 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5887 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-05-29 22:09:18 [ main:5887 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5887 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:09:18 [ main:5888 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5888 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5888 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5888 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:09:18 [ main:5888 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5888 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:09:18 [ main:5889 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:09:18 [ main:5890 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:09:18 [ main:5891 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:09:18 [ main:5891 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:09:18 [ main:5909 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-05-29 22:09:18 [ main:5909 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-05-29 22:09:18 [ main:5909 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-05-29 22:09:18 [ main:5909 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-05-29 22:09:18 [ main:5912 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:09:18 [ main:5912 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:18 [ main:5913 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5913 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:09:18 [ main:5913 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@12979ef0]
2017-05-29 22:09:18 [ main:5914 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5914 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.User)
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Adding transactional method [deleteRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5915 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.User,dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5916 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:09:18 [ main:5916 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(dtx.oa.rbac.model.User,java.util.List)
2017-05-29 22:09:18 [ main:5916 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUser(dtx.oa.rbac.model.User)
2017-05-29 22:09:18 [ main:5916 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5916 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5916 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-05-29 22:09:18 [ main:5917 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5917 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:09:18 [ main:5917 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5917 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5917 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5917 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:09:18 [ main:5917 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5918 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5918 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5918 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:09:18 [ main:5918 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5918 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:09:18 [ main:5918 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5918 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:09:18 [ main:5919 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5920 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5921 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5921 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:09:18 [ main:5921 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:09:18 [ main:5921 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:09:18 [ main:5921 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:09:18 [ main:5921 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:09:18 [ main:5921 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:09:18 [ main:5937 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-05-29 22:09:18 [ main:5938 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-05-29 22:09:18 [ main:5938 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-05-29 22:09:18 [ main:5939 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-05-29 22:09:18 [ main:5941 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:09:18 [ main:5942 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:18 [ main:5942 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5942 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:09:18 [ main:5942 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@49a01676]
2017-05-29 22:09:18 [ main:5943 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-05-29 22:09:18 [ main:5943 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5943 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5943 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5943 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:09:18 [ main:5943 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5943 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Adding transactional method [deleteRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.Node,dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5944 ] - [ DEBUG ] Adding transactional method [queryByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5945 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:09:18 [ main:5946 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:09:18 [ main:5947 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:09:18 [ main:5959 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-05-29 22:09:18 [ main:5959 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-05-29 22:09:18 [ main:5959 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:09:18 [ main:5959 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:09:18 [ main:5959 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:09:18 [ main:5959 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:09:18 [ main:5959 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:09:18 [ main:6056 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6079 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7e7b9a7e] for Hibernate transaction
2017-05-29 22:09:19 [ main:6080 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7e7b9a7e]
2017-05-29 22:09:19 [ main:6092 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6246 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6246 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7e7b9a7e]
2017-05-29 22:09:19 [ main:6253 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7e7b9a7e] after transaction
2017-05-29 22:09:19 [ main:6253 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6254 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6254 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1b70d783] for Hibernate transaction
2017-05-29 22:09:19 [ main:6254 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1b70d783]
2017-05-29 22:09:19 [ main:6254 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6256 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6256 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1b70d783]
2017-05-29 22:09:19 [ main:6257 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1b70d783] after transaction
2017-05-29 22:09:19 [ main:6257 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6266 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:09:19 [ main:6276 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6276 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@17fa56ce] for Hibernate transaction
2017-05-29 22:09:19 [ main:6276 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@17fa56ce]
2017-05-29 22:09:19 [ main:6277 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6282 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6282 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@17fa56ce]
2017-05-29 22:09:19 [ main:6284 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@17fa56ce] after transaction
2017-05-29 22:09:19 [ main:6285 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6286 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6286 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@56b374f9] for Hibernate transaction
2017-05-29 22:09:19 [ main:6286 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@56b374f9]
2017-05-29 22:09:19 [ main:6287 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6299 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6299 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@56b374f9]
2017-05-29 22:09:19 [ main:6302 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@56b374f9] after transaction
2017-05-29 22:09:19 [ main:6302 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6302 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6302 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@9eec036] for Hibernate transaction
2017-05-29 22:09:19 [ main:6303 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@9eec036]
2017-05-29 22:09:19 [ main:6303 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6306 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6306 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@9eec036]
2017-05-29 22:09:19 [ main:6307 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@9eec036] after transaction
2017-05-29 22:09:19 [ main:6307 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6312 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:09:19 [ main:6316 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6317 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@69b51fab] for Hibernate transaction
2017-05-29 22:09:19 [ main:6317 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@69b51fab]
2017-05-29 22:09:19 [ main:6319 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6325 ] - [ DEBUG ] Initiating transaction rollback
2017-05-29 22:09:19 [ main:6325 ] - [ DEBUG ] Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@69b51fab]
2017-05-29 22:09:19 [ main:6325 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@69b51fab] after transaction
2017-05-29 22:09:19 [ main:6325 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6330 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:09:19 [ main:6348 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6348 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@10ebd44f] for Hibernate transaction
2017-05-29 22:09:19 [ main:6348 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10ebd44f]
2017-05-29 22:09:19 [ main:6349 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6351 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6351 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10ebd44f]
2017-05-29 22:09:19 [ main:6352 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@10ebd44f] after transaction
2017-05-29 22:09:19 [ main:6352 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6353 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6353 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@149b2743] for Hibernate transaction
2017-05-29 22:09:19 [ main:6353 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@149b2743]
2017-05-29 22:09:19 [ main:6353 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6361 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6361 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@149b2743]
2017-05-29 22:09:19 [ main:6367 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@149b2743] after transaction
2017-05-29 22:09:19 [ main:6367 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6368 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6368 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@9dfbd82] for Hibernate transaction
2017-05-29 22:09:19 [ main:6368 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@9dfbd82]
2017-05-29 22:09:19 [ main:6370 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6371 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6371 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@9dfbd82]
2017-05-29 22:09:19 [ main:6373 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@9dfbd82] after transaction
2017-05-29 22:09:19 [ main:6373 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6374 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6374 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7ba19d2] for Hibernate transaction
2017-05-29 22:09:19 [ main:6374 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7ba19d2]
2017-05-29 22:09:19 [ main:6375 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6377 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6377 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7ba19d2]
2017-05-29 22:09:19 [ main:6383 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7ba19d2] after transaction
2017-05-29 22:09:19 [ main:6383 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6383 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6384 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2ccf544a] for Hibernate transaction
2017-05-29 22:09:19 [ main:6384 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2ccf544a]
2017-05-29 22:09:19 [ main:6385 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6389 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6389 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2ccf544a]
2017-05-29 22:09:19 [ main:6392 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2ccf544a] after transaction
2017-05-29 22:09:19 [ main:6392 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6393 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6393 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@46f7adc4] for Hibernate transaction
2017-05-29 22:09:19 [ main:6393 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@46f7adc4]
2017-05-29 22:09:19 [ main:6394 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6397 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6397 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@46f7adc4]
2017-05-29 22:09:19 [ main:6403 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@46f7adc4] after transaction
2017-05-29 22:09:19 [ main:6403 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6404 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6404 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@24e84ddf] for Hibernate transaction
2017-05-29 22:09:19 [ main:6404 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@24e84ddf]
2017-05-29 22:09:19 [ main:6406 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6410 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6410 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@24e84ddf]
2017-05-29 22:09:19 [ main:6412 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@24e84ddf] after transaction
2017-05-29 22:09:19 [ main:6412 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6427 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:09:19 [ main:6447 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6447 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@509ce6c4] for Hibernate transaction
2017-05-29 22:09:19 [ main:6448 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@509ce6c4]
2017-05-29 22:09:19 [ main:6449 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6454 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6455 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@509ce6c4]
2017-05-29 22:09:19 [ main:6456 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@509ce6c4] after transaction
2017-05-29 22:09:19 [ main:6456 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6457 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6457 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7bd78483] for Hibernate transaction
2017-05-29 22:09:19 [ main:6457 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7bd78483]
2017-05-29 22:09:19 [ main:6458 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6461 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6461 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7bd78483]
2017-05-29 22:09:19 [ main:6462 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7bd78483] after transaction
2017-05-29 22:09:19 [ main:6462 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6469 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:09:19 [ main:6486 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6487 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4a1b16bd] for Hibernate transaction
2017-05-29 22:09:19 [ main:6487 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4a1b16bd]
2017-05-29 22:09:19 [ main:6489 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6491 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6492 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4a1b16bd]
2017-05-29 22:09:19 [ main:6494 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4a1b16bd] after transaction
2017-05-29 22:09:19 [ main:6494 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6494 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6494 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@26a9a0b8] for Hibernate transaction
2017-05-29 22:09:19 [ main:6494 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@26a9a0b8]
2017-05-29 22:09:19 [ main:6496 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6501 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6502 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@26a9a0b8]
2017-05-29 22:09:19 [ main:6519 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@26a9a0b8] after transaction
2017-05-29 22:09:19 [ main:6519 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6520 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6520 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3d733a78] for Hibernate transaction
2017-05-29 22:09:19 [ main:6520 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3d733a78]
2017-05-29 22:09:19 [ main:6521 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6522 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6522 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3d733a78]
2017-05-29 22:09:19 [ main:6523 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3d733a78] after transaction
2017-05-29 22:09:19 [ main:6524 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:09:19 [ main:6533 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:09:19 [ main:6554 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:09:19 [ main:6554 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@286bb8a3] for Hibernate transaction
2017-05-29 22:09:19 [ main:6555 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@286bb8a3]
2017-05-29 22:09:19 [ main:6556 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:09:19 [ main:6557 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:09:19 [ main:6557 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@286bb8a3]
2017-05-29 22:09:19 [ main:6558 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@286bb8a3] after transaction
2017-05-29 22:09:19 [ main:6558 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:02 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@7a783e0d: display name [org.springframework.context.support.ClassPathXmlApplicationContext@7a783e0d]; startup date [Mon May 29 22:16:01 CST 2017]; root of context hierarchy
2017-05-29 22:16:02 [ main:45 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 22:16:02 [ main:57 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 22:16:02 [ main:78 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 22:16:02 [ main:79 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 22:16:05 [ main:3816 ] - [ DEBUG ] Loading bean definitions
2017-05-29 22:16:05 [ main:3835 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 22:16:05 [ main:3856 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 22:16:05 [ main:3856 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@7a783e0d]: org.springframework.beans.factory.support.DefaultListableBeanFactory@5bce2fd8
2017-05-29 22:16:05 [ main:3857 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@7a783e0d: display name [org.springframework.context.support.ClassPathXmlApplicationContext@7a783e0d]; startup date [Mon May 29 22:16:01 CST 2017]; root of context hierarchy
2017-05-29 22:16:05 [ main:3871 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:16:05 [ main:3872 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:16:05 [ main:3885 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 22:16:05 [ main:3897 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:16:05 [ main:3898 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6779630e]
2017-05-29 22:16:05 [ main:3899 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@a36f7c0]
2017-05-29 22:16:05 [ main:3900 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5bce2fd8: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 22:16:05 [ main:3901 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 22:16:05 [ main:3901 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 22:16:05 [ main:3904 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 22:16:05 [ main:3917 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:05 [ main:3917 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:05 [ main:3918 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 22:16:05 [ main:3921 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:16:05 [ main:3921 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:16:05 [ main:3922 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 22:16:05 [ main:3926 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:16:05 [ main:3926 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:05 [ main:3929 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 22:16:05 [ main:3929 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 22:16:05 [ main:3929 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 22:16:05 [ main:3946 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 22:16:05 [ main:3954 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 22:16:05 [ main:3955 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-05-29 22:16:06 [ main:4061 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac]
2017-05-29 22:16:06 [ main:4061 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:16:06 [ main:4062 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac]
2017-05-29 22:16:06 [ main:4062 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:16:06 [ main:4062 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:16:06 [ main:4065 ] - [ DEBUG ] Resolved location pattern [classpath*:dtx/oa/rbac/model**/*.class] to resources [file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTree.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleNode.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/User.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Role.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleUser.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Node.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTree.class]]
2017-05-29 22:16:06 [ main:4266 ] - [ INFO ] Building new Hibernate SessionFactory
2017-05-29 22:16:06 [ main:4587 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:06 [ main:4590 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-05-29 22:16:06 [ main:4590 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-05-29 22:16:06 [ main:4590 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-05-29 22:16:06 [ main:4591 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-05-29 22:16:06 [ main:4593 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:16:06 [ main:4595 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:06 [ main:4600 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:06 [ main:4606 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4612 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:16:06 [ main:4617 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@6dad0d6e]
2017-05-29 22:16:06 [ main:4668 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:16:06 [ main:4668 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:16:06 [ main:4668 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-05-29 22:16:06 [ main:4671 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-05-29 22:16:06 [ main:4671 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-05-29 22:16:06 [ main:4677 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-05-29 22:16:06 [ main:4683 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:16:06 [ main:4683 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-05-29 22:16:06 [ main:4689 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@4e8e3a30] of Hibernate SessionFactory for HibernateTransactionManager
2017-05-29 22:16:06 [ main:4689 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:06 [ main:4690 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-05-29 22:16:06 [ main:4690 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:16:06 [ main:4690 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:16:06 [ main:4690 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:16:06 [ main:4693 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4694 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-05-29 22:16:06 [ main:4694 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4694 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User,boolean)
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4696 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:16:06 [ main:4697 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:16:06 [ main:4698 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:16:06 [ main:4729 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-05-29 22:16:06 [ main:4730 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-05-29 22:16:06 [ main:4730 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-05-29 22:16:06 [ main:4730 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-05-29 22:16:06 [ main:4733 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:16:06 [ main:4733 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:06 [ main:4733 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4734 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:16:06 [ main:4734 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@4d49e1ca]
2017-05-29 22:16:06 [ main:4735 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4735 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-05-29 22:16:06 [ main:4735 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4735 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-05-29 22:16:06 [ main:4735 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4735 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4735 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4736 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4737 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4738 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:16:06 [ main:4739 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4739 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4739 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4739 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:16:06 [ main:4739 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4739 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:16:06 [ main:4739 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4739 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:16:06 [ main:4739 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4739 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4740 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:16:06 [ main:4741 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:16:06 [ main:4741 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:16:06 [ main:4741 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:16:06 [ main:4741 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:16:06 [ main:4741 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:16:06 [ main:4741 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:16:06 [ main:4741 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:16:06 [ main:4757 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-05-29 22:16:06 [ main:4758 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-05-29 22:16:06 [ main:4758 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-05-29 22:16:06 [ main:4758 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-05-29 22:16:06 [ main:4762 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:16:06 [ main:4762 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:06 [ main:4763 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4763 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:16:06 [ main:4763 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@5c171dba]
2017-05-29 22:16:06 [ main:4764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-05-29 22:16:06 [ main:4764 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-05-29 22:16:06 [ main:4764 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-05-29 22:16:06 [ main:4764 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4764 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int)
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int,boolean)
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-05-29 22:16:06 [ main:4765 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node)
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4766 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4767 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4768 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:16:06 [ main:4769 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:16:06 [ main:4770 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:16:06 [ main:4787 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-05-29 22:16:06 [ main:4787 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-05-29 22:16:06 [ main:4788 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-05-29 22:16:06 [ main:4788 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-05-29 22:16:06 [ main:4790 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:16:06 [ main:4790 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:06 [ main:4791 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4791 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:16:06 [ main:4791 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@41a4f616]
2017-05-29 22:16:06 [ main:4792 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4792 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUser(dtx.oa.rbac.model.User)
2017-05-29 22:16:06 [ main:4792 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4792 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4792 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4792 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-05-29 22:16:06 [ main:4792 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4792 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-05-29 22:16:06 [ main:4792 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.User)
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Adding transactional method [deleteRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.User,dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4793 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(dtx.oa.rbac.model.User,java.util.List)
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4794 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4795 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:16:06 [ main:4796 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:16:06 [ main:4808 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-05-29 22:16:06 [ main:4808 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-05-29 22:16:06 [ main:4808 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-05-29 22:16:06 [ main:4809 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-05-29 22:16:06 [ main:4811 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:16:06 [ main:4811 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:06 [ main:4812 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4812 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:16:06 [ main:4812 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@5ebf6b15]
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Adding transactional method [deleteRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.Node,dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:16:06 [ main:4813 ] - [ DEBUG ] Adding transactional method [queryByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4814 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4815 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4816 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:16:06 [ main:4817 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:16:06 [ main:4828 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-05-29 22:16:06 [ main:4828 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-05-29 22:16:06 [ main:4828 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:16:06 [ main:4828 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:16:06 [ main:4828 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:16:06 [ main:4828 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:16:06 [ main:4828 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:16:06 [ main:4901 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:06 [ main:4923 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@60735106] for Hibernate transaction
2017-05-29 22:16:06 [ main:4924 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@60735106]
2017-05-29 22:16:06 [ main:4935 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5061 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5061 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@60735106]
2017-05-29 22:16:07 [ main:5067 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@60735106] after transaction
2017-05-29 22:16:07 [ main:5068 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5069 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5069 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5c403eb4] for Hibernate transaction
2017-05-29 22:16:07 [ main:5069 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5c403eb4]
2017-05-29 22:16:07 [ main:5069 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5071 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5071 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5c403eb4]
2017-05-29 22:16:07 [ main:5072 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5c403eb4] after transaction
2017-05-29 22:16:07 [ main:5072 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5080 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:16:07 [ main:5094 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5094 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@49969416] for Hibernate transaction
2017-05-29 22:16:07 [ main:5094 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@49969416]
2017-05-29 22:16:07 [ main:5095 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5100 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5100 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@49969416]
2017-05-29 22:16:07 [ main:5101 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@49969416] after transaction
2017-05-29 22:16:07 [ main:5101 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5101 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5101 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@46956438] for Hibernate transaction
2017-05-29 22:16:07 [ main:5101 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@46956438]
2017-05-29 22:16:07 [ main:5101 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5111 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5111 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@46956438]
2017-05-29 22:16:07 [ main:5115 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@46956438] after transaction
2017-05-29 22:16:07 [ main:5115 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5115 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5115 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4fdbe1cb] for Hibernate transaction
2017-05-29 22:16:07 [ main:5115 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4fdbe1cb]
2017-05-29 22:16:07 [ main:5116 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5118 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5118 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4fdbe1cb]
2017-05-29 22:16:07 [ main:5119 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4fdbe1cb] after transaction
2017-05-29 22:16:07 [ main:5119 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5124 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:16:07 [ main:5127 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5127 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@37832e47] for Hibernate transaction
2017-05-29 22:16:07 [ main:5127 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@37832e47]
2017-05-29 22:16:07 [ main:5128 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5132 ] - [ DEBUG ] Initiating transaction rollback
2017-05-29 22:16:07 [ main:5132 ] - [ DEBUG ] Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@37832e47]
2017-05-29 22:16:07 [ main:5133 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@37832e47] after transaction
2017-05-29 22:16:07 [ main:5133 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5138 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:16:07 [ main:5148 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5148 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5b3fb1ab] for Hibernate transaction
2017-05-29 22:16:07 [ main:5148 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5b3fb1ab]
2017-05-29 22:16:07 [ main:5149 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5150 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5150 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5b3fb1ab]
2017-05-29 22:16:07 [ main:5151 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5b3fb1ab] after transaction
2017-05-29 22:16:07 [ main:5151 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5151 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5152 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@645a5d1c] for Hibernate transaction
2017-05-29 22:16:07 [ main:5152 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@645a5d1c]
2017-05-29 22:16:07 [ main:5152 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5159 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5159 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@645a5d1c]
2017-05-29 22:16:07 [ main:5162 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@645a5d1c] after transaction
2017-05-29 22:16:07 [ main:5162 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5162 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5162 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5837926] for Hibernate transaction
2017-05-29 22:16:07 [ main:5162 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5837926]
2017-05-29 22:16:07 [ main:5163 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5164 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5164 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5837926]
2017-05-29 22:16:07 [ main:5165 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5837926] after transaction
2017-05-29 22:16:07 [ main:5165 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5166 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5166 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@10ebd44f] for Hibernate transaction
2017-05-29 22:16:07 [ main:5166 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10ebd44f]
2017-05-29 22:16:07 [ main:5167 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5168 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5168 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10ebd44f]
2017-05-29 22:16:07 [ main:5173 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@10ebd44f] after transaction
2017-05-29 22:16:07 [ main:5174 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5174 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5174 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1715beb4] for Hibernate transaction
2017-05-29 22:16:07 [ main:5174 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1715beb4]
2017-05-29 22:16:07 [ main:5175 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5176 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5176 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1715beb4]
2017-05-29 22:16:07 [ main:5177 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1715beb4] after transaction
2017-05-29 22:16:07 [ main:5177 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5177 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5177 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3568f812] for Hibernate transaction
2017-05-29 22:16:07 [ main:5178 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3568f812]
2017-05-29 22:16:07 [ main:5178 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5179 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5179 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3568f812]
2017-05-29 22:16:07 [ main:5184 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3568f812] after transaction
2017-05-29 22:16:07 [ main:5184 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5184 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5184 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4012a6de] for Hibernate transaction
2017-05-29 22:16:07 [ main:5184 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4012a6de]
2017-05-29 22:16:07 [ main:5185 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5186 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5186 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4012a6de]
2017-05-29 22:16:07 [ main:5187 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4012a6de] after transaction
2017-05-29 22:16:07 [ main:5187 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5194 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:16:07 [ main:5207 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5207 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2f48674a] for Hibernate transaction
2017-05-29 22:16:07 [ main:5207 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2f48674a]
2017-05-29 22:16:07 [ main:5208 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5209 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5210 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2f48674a]
2017-05-29 22:16:07 [ main:5210 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2f48674a] after transaction
2017-05-29 22:16:07 [ main:5210 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5210 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5211 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@56c3560b] for Hibernate transaction
2017-05-29 22:16:07 [ main:5211 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@56c3560b]
2017-05-29 22:16:07 [ main:5211 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5213 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5213 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@56c3560b]
2017-05-29 22:16:07 [ main:5213 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@56c3560b] after transaction
2017-05-29 22:16:07 [ main:5213 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5218 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:16:07 [ main:5228 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5228 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6d9aa40b] for Hibernate transaction
2017-05-29 22:16:07 [ main:5228 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6d9aa40b]
2017-05-29 22:16:07 [ main:5229 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5231 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5231 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6d9aa40b]
2017-05-29 22:16:07 [ main:5232 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6d9aa40b] after transaction
2017-05-29 22:16:07 [ main:5232 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5232 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5232 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@71484698] for Hibernate transaction
2017-05-29 22:16:07 [ main:5232 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@71484698]
2017-05-29 22:16:07 [ main:5232 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5236 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5236 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@71484698]
2017-05-29 22:16:07 [ main:5243 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@71484698] after transaction
2017-05-29 22:16:07 [ main:5243 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5243 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5243 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1548411c] for Hibernate transaction
2017-05-29 22:16:07 [ main:5243 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1548411c]
2017-05-29 22:16:07 [ main:5245 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5246 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5246 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1548411c]
2017-05-29 22:16:07 [ main:5246 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1548411c] after transaction
2017-05-29 22:16:07 [ main:5246 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:16:07 [ main:5254 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:16:07 [ main:5268 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:16:07 [ main:5268 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@153a859b] for Hibernate transaction
2017-05-29 22:16:07 [ main:5268 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@153a859b]
2017-05-29 22:16:07 [ main:5268 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:16:07 [ main:5269 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:16:07 [ main:5269 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@153a859b]
2017-05-29 22:16:07 [ main:5269 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@153a859b] after transaction
2017-05-29 22:16:07 [ main:5269 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:17:04 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@46e5dce1: display name [org.springframework.context.support.ClassPathXmlApplicationContext@46e5dce1]; startup date [Mon May 29 22:17:04 CST 2017]; root of context hierarchy
2017-05-29 22:17:04 [ main:48 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 22:17:04 [ main:61 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 22:17:04 [ main:83 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 22:17:04 [ main:84 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 22:19:01 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@275a83d: display name [org.springframework.context.support.ClassPathXmlApplicationContext@275a83d]; startup date [Mon May 29 22:19:01 CST 2017]; root of context hierarchy
2017-05-29 22:19:02 [ main:45 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 22:19:02 [ main:58 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 22:19:02 [ main:82 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 22:19:02 [ main:83 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 22:19:10 [ main:8945 ] - [ DEBUG ] Loading bean definitions
2017-05-29 22:19:10 [ main:8969 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 22:19:10 [ main:8990 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 22:19:10 [ main:8990 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@275a83d]: org.springframework.beans.factory.support.DefaultListableBeanFactory@5bce2fd8
2017-05-29 22:19:10 [ main:8991 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@275a83d: display name [org.springframework.context.support.ClassPathXmlApplicationContext@275a83d]; startup date [Mon May 29 22:19:01 CST 2017]; root of context hierarchy
2017-05-29 22:19:10 [ main:9005 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:19:10 [ main:9006 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:19:10 [ main:9021 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 22:19:10 [ main:9032 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:19:10 [ main:9034 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@6779630e]
2017-05-29 22:19:10 [ main:9035 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@a36f7c0]
2017-05-29 22:19:10 [ main:9036 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@5bce2fd8: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 22:19:10 [ main:9037 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 22:19:10 [ main:9037 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 22:19:11 [ main:9040 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9054 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9054 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9055 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9058 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:19:11 [ main:9058 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:19:11 [ main:9060 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9063 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:19:11 [ main:9063 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9066 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 22:19:11 [ main:9066 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 22:19:11 [ main:9066 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 22:19:11 [ main:9084 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9093 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 22:19:11 [ main:9094 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-05-29 22:19:11 [ main:9220 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac]
2017-05-29 22:19:11 [ main:9221 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:19:11 [ main:9221 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac]
2017-05-29 22:19:11 [ main:9221 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:19:11 [ main:9221 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:19:11 [ main:9224 ] - [ DEBUG ] Resolved location pattern [classpath*:dtx/oa/rbac/model**/*.class] to resources [file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTree.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleNode.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/User.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Role.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleUser.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Node.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTree.class]]
2017-05-29 22:19:11 [ main:9416 ] - [ INFO ] Building new Hibernate SessionFactory
2017-05-29 22:19:11 [ main:9737 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9740 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-05-29 22:19:11 [ main:9740 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-05-29 22:19:11 [ main:9740 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-05-29 22:19:11 [ main:9741 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9744 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:19:11 [ main:9747 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9753 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9760 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9767 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:19:11 [ main:9772 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@66f9491f]
2017-05-29 22:19:11 [ main:9824 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:19:11 [ main:9825 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:19:11 [ main:9825 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9828 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-05-29 22:19:11 [ main:9828 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-05-29 22:19:11 [ main:9832 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9837 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:19:11 [ main:9838 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-05-29 22:19:11 [ main:9846 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@61616da4] of Hibernate SessionFactory for HibernateTransactionManager
2017-05-29 22:19:11 [ main:9847 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9848 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-05-29 22:19:11 [ main:9848 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:19:11 [ main:9848 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:19:11 [ main:9848 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:19:11 [ main:9851 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-05-29 22:19:11 [ main:9851 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9851 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-05-29 22:19:11 [ main:9851 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9851 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-05-29 22:19:11 [ main:9851 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User,boolean)
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9852 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9853 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:19:11 [ main:9854 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:19:11 [ main:9855 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:19:11 [ main:9890 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-05-29 22:19:11 [ main:9890 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-05-29 22:19:11 [ main:9890 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-05-29 22:19:11 [ main:9890 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9893 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:19:11 [ main:9893 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9894 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9894 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:19:11 [ main:9894 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@60ec1f20]
2017-05-29 22:19:11 [ main:9895 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9895 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-05-29 22:19:11 [ main:9895 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9895 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-05-29 22:19:11 [ main:9895 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9896 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9897 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9898 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9899 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9900 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:19:11 [ main:9901 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:19:11 [ main:9918 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-05-29 22:19:11 [ main:9918 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-05-29 22:19:11 [ main:9918 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-05-29 22:19:11 [ main:9918 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9922 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:19:11 [ main:9923 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9923 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9923 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:19:11 [ main:9923 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@179125c0]
2017-05-29 22:19:11 [ main:9924 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-05-29 22:19:11 [ main:9924 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9924 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int)
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int,boolean)
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9925 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-05-29 22:19:11 [ main:9926 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9926 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-05-29 22:19:11 [ main:9926 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9926 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-05-29 22:19:11 [ main:9926 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9926 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node)
2017-05-29 22:19:11 [ main:9926 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9926 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:19:11 [ main:9926 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-05-29 22:19:11 [ main:9927 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-05-29 22:19:11 [ main:9927 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:19:11 [ main:9927 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-05-29 22:19:11 [ main:9927 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:19:11 [ main:9927 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-05-29 22:19:11 [ main:9928 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9929 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:19:11 [ main:9930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:19:11 [ main:9931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:19:11 [ main:9948 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-05-29 22:19:11 [ main:9949 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-05-29 22:19:11 [ main:9949 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-05-29 22:19:11 [ main:9949 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9951 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:19:11 [ main:9952 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9952 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9952 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:19:11 [ main:9952 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@5b3bd09d]
2017-05-29 22:19:11 [ main:9953 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-05-29 22:19:11 [ main:9953 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9953 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.User)
2017-05-29 22:19:11 [ main:9953 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9953 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Adding transactional method [deleteRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.User,dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9954 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(dtx.oa.rbac.model.User,java.util.List)
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUser(dtx.oa.rbac.model.User)
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:19:11 [ main:9956 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:19:11 [ main:9957 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:19:11 [ main:9958 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:19:11 [ main:9958 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:19:11 [ main:9971 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-05-29 22:19:11 [ main:9971 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-05-29 22:19:11 [ main:9971 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-05-29 22:19:11 [ main:9971 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-05-29 22:19:11 [ main:9973 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:19:11 [ main:9974 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9974 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9974 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:19:11 [ main:9974 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@55b76aab]
2017-05-29 22:19:11 [ main:9975 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:19:11 [ main:9975 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9975 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:19:11 [ main:9975 ] - [ DEBUG ] Adding transactional method [deleteRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9975 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:19:11 [ main:9975 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9975 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.Node,dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Adding transactional method [queryByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9976 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9977 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:19:11 [ main:9978 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:19:11 [ main:9979 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:19:11 [ main:9990 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-05-29 22:19:11 [ main:9990 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-05-29 22:19:11 [ main:9990 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:19:11 [ main:9990 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:19:11 [ main:9990 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:19:11 [ main:9991 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:19:11 [ main:9991 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:19:12 [ main:10070 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10091 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@165e6665] for Hibernate transaction
2017-05-29 22:19:12 [ main:10093 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@165e6665]
2017-05-29 22:19:12 [ main:10104 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10233 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10233 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@165e6665]
2017-05-29 22:19:12 [ main:10239 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@165e6665] after transaction
2017-05-29 22:19:12 [ main:10239 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10240 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10240 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@34dbbbd6] for Hibernate transaction
2017-05-29 22:19:12 [ main:10240 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@34dbbbd6]
2017-05-29 22:19:12 [ main:10241 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10243 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10243 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@34dbbbd6]
2017-05-29 22:19:12 [ main:10244 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@34dbbbd6] after transaction
2017-05-29 22:19:12 [ main:10244 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10252 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:19:12 [ main:10263 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10263 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@50377471] for Hibernate transaction
2017-05-29 22:19:12 [ main:10263 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@50377471]
2017-05-29 22:19:12 [ main:10264 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10269 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10269 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@50377471]
2017-05-29 22:19:12 [ main:10269 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@50377471] after transaction
2017-05-29 22:19:12 [ main:10270 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10270 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10270 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@541a9917] for Hibernate transaction
2017-05-29 22:19:12 [ main:10270 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@541a9917]
2017-05-29 22:19:12 [ main:10270 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10280 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10280 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@541a9917]
2017-05-29 22:19:12 [ main:10282 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@541a9917] after transaction
2017-05-29 22:19:12 [ main:10283 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10283 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10283 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5aff0e4c] for Hibernate transaction
2017-05-29 22:19:12 [ main:10283 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5aff0e4c]
2017-05-29 22:19:12 [ main:10284 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10286 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10286 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5aff0e4c]
2017-05-29 22:19:12 [ main:10287 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5aff0e4c] after transaction
2017-05-29 22:19:12 [ main:10287 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10292 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:19:12 [ main:10296 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10296 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@8227bf0] for Hibernate transaction
2017-05-29 22:19:12 [ main:10296 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@8227bf0]
2017-05-29 22:19:12 [ main:10296 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10302 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10302 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@8227bf0]
2017-05-29 22:19:12 [ main:10310 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@8227bf0] after transaction
2017-05-29 22:19:12 [ main:10310 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10311 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10311 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2a024848] for Hibernate transaction
2017-05-29 22:19:12 [ main:10311 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2a024848]
2017-05-29 22:19:12 [ main:10311 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10313 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10313 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2a024848]
2017-05-29 22:19:12 [ main:10314 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2a024848] after transaction
2017-05-29 22:19:12 [ main:10314 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10329 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:19:12 [ main:10356 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10356 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@588fffea] for Hibernate transaction
2017-05-29 22:19:12 [ main:10356 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@588fffea]
2017-05-29 22:19:12 [ main:10357 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10361 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10361 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@588fffea]
2017-05-29 22:19:12 [ main:10362 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@588fffea] after transaction
2017-05-29 22:19:12 [ main:10362 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10363 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10363 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6dfefcc7] for Hibernate transaction
2017-05-29 22:19:12 [ main:10363 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6dfefcc7]
2017-05-29 22:19:12 [ main:10364 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10371 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10371 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6dfefcc7]
2017-05-29 22:19:12 [ main:10376 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6dfefcc7] after transaction
2017-05-29 22:19:12 [ main:10376 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10376 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10376 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@406ecf47] for Hibernate transaction
2017-05-29 22:19:12 [ main:10376 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@406ecf47]
2017-05-29 22:19:12 [ main:10377 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10378 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10378 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@406ecf47]
2017-05-29 22:19:12 [ main:10379 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@406ecf47] after transaction
2017-05-29 22:19:12 [ main:10379 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10379 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10379 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@437be5fc] for Hibernate transaction
2017-05-29 22:19:12 [ main:10379 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@437be5fc]
2017-05-29 22:19:12 [ main:10380 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10382 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10382 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@437be5fc]
2017-05-29 22:19:12 [ main:10387 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@437be5fc] after transaction
2017-05-29 22:19:12 [ main:10387 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10387 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10387 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1334918e] for Hibernate transaction
2017-05-29 22:19:12 [ main:10387 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1334918e]
2017-05-29 22:19:12 [ main:10388 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10389 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10389 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1334918e]
2017-05-29 22:19:12 [ main:10390 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1334918e] after transaction
2017-05-29 22:19:12 [ main:10390 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10390 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10390 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5c56183b] for Hibernate transaction
2017-05-29 22:19:12 [ main:10390 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5c56183b]
2017-05-29 22:19:12 [ main:10391 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10392 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10392 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5c56183b]
2017-05-29 22:19:12 [ main:10396 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5c56183b] after transaction
2017-05-29 22:19:12 [ main:10396 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10396 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10396 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@d7ef341] for Hibernate transaction
2017-05-29 22:19:12 [ main:10397 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@d7ef341]
2017-05-29 22:19:12 [ main:10397 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10399 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10399 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@d7ef341]
2017-05-29 22:19:12 [ main:10400 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@d7ef341] after transaction
2017-05-29 22:19:12 [ main:10400 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10405 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:19:12 [ main:10414 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10414 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3aaaa02e] for Hibernate transaction
2017-05-29 22:19:12 [ main:10415 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3aaaa02e]
2017-05-29 22:19:12 [ main:10415 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10417 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10417 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3aaaa02e]
2017-05-29 22:19:12 [ main:10417 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3aaaa02e] after transaction
2017-05-29 22:19:12 [ main:10417 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10418 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10418 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@19e6291a] for Hibernate transaction
2017-05-29 22:19:12 [ main:10418 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@19e6291a]
2017-05-29 22:19:12 [ main:10419 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10421 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10421 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@19e6291a]
2017-05-29 22:19:12 [ main:10425 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@19e6291a] after transaction
2017-05-29 22:19:12 [ main:10425 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10432 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:19:12 [ main:10446 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10446 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@18156ddb] for Hibernate transaction
2017-05-29 22:19:12 [ main:10447 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@18156ddb]
2017-05-29 22:19:12 [ main:10448 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10453 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10453 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@18156ddb]
2017-05-29 22:19:12 [ main:10455 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@18156ddb] after transaction
2017-05-29 22:19:12 [ main:10455 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10456 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10456 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@d603051] for Hibernate transaction
2017-05-29 22:19:12 [ main:10456 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@d603051]
2017-05-29 22:19:12 [ main:10458 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10469 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10469 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@d603051]
2017-05-29 22:19:12 [ main:10479 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@d603051] after transaction
2017-05-29 22:19:12 [ main:10479 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10479 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10479 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@33c1da84] for Hibernate transaction
2017-05-29 22:19:12 [ main:10479 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@33c1da84]
2017-05-29 22:19:12 [ main:10480 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10481 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10482 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@33c1da84]
2017-05-29 22:19:12 [ main:10482 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@33c1da84] after transaction
2017-05-29 22:19:12 [ main:10482 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:19:12 [ main:10491 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:19:12 [ main:10512 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:19:12 [ main:10513 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@42b106b9] for Hibernate transaction
2017-05-29 22:19:12 [ main:10513 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@42b106b9]
2017-05-29 22:19:12 [ main:10514 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:19:12 [ main:10515 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:19:12 [ main:10515 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@42b106b9]
2017-05-29 22:19:12 [ main:10517 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@42b106b9] after transaction
2017-05-29 22:19:12 [ main:10517 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:02 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@1d085c24: display name [org.springframework.context.support.ClassPathXmlApplicationContext@1d085c24]; startup date [Mon May 29 22:21:02 CST 2017]; root of context hierarchy
2017-05-29 22:21:02 [ main:47 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 22:21:02 [ main:59 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 22:21:02 [ main:80 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 22:21:02 [ main:82 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 22:21:44 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@275a83d: display name [org.springframework.context.support.ClassPathXmlApplicationContext@275a83d]; startup date [Mon May 29 22:21:44 CST 2017]; root of context hierarchy
2017-05-29 22:21:44 [ main:49 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 22:21:44 [ main:61 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 22:21:44 [ main:84 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 22:21:44 [ main:85 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 22:21:45 [ main:1731 ] - [ DEBUG ] Loading bean definitions
2017-05-29 22:21:45 [ main:1749 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 22:21:45 [ main:1770 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 22:21:45 [ main:1771 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@275a83d]: org.springframework.beans.factory.support.DefaultListableBeanFactory@251b0eb0
2017-05-29 22:21:45 [ main:1771 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@275a83d: display name [org.springframework.context.support.ClassPathXmlApplicationContext@275a83d]; startup date [Mon May 29 22:21:44 CST 2017]; root of context hierarchy
2017-05-29 22:21:45 [ main:1786 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:21:45 [ main:1786 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:21:45 [ main:1800 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 22:21:45 [ main:1811 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:21:45 [ main:1812 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@1f5e0d38]
2017-05-29 22:21:45 [ main:1813 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@38797817]
2017-05-29 22:21:45 [ main:1815 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@251b0eb0: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 22:21:45 [ main:1815 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 22:21:45 [ main:1815 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 22:21:45 [ main:1818 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 22:21:45 [ main:1831 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:45 [ main:1831 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:45 [ main:1832 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 22:21:45 [ main:1835 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:21:45 [ main:1836 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:21:45 [ main:1837 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 22:21:45 [ main:1840 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:21:45 [ main:1840 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:45 [ main:1843 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 22:21:45 [ main:1843 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 22:21:45 [ main:1843 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 22:21:45 [ main:1862 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 22:21:45 [ main:1870 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 22:21:45 [ main:1871 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-05-29 22:21:46 [ main:1988 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac]
2017-05-29 22:21:46 [ main:1988 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:21:46 [ main:1988 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac]
2017-05-29 22:21:46 [ main:1988 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:21:46 [ main:1989 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:21:46 [ main:1990 ] - [ DEBUG ] Resolved location pattern [classpath*:dtx/oa/rbac/model**/*.class] to resources [file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTree.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleNode.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/User.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Role.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleUser.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Node.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTree.class]]
2017-05-29 22:21:46 [ main:2180 ] - [ INFO ] Building new Hibernate SessionFactory
2017-05-29 22:21:46 [ main:2508 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:46 [ main:2510 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-05-29 22:21:46 [ main:2511 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-05-29 22:21:46 [ main:2511 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-05-29 22:21:46 [ main:2511 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-05-29 22:21:46 [ main:2514 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:21:46 [ main:2516 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:46 [ main:2522 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:46 [ main:2529 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2537 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:21:46 [ main:2542 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@7144928c]
2017-05-29 22:21:46 [ main:2595 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:21:46 [ main:2595 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:21:46 [ main:2596 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-05-29 22:21:46 [ main:2599 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-05-29 22:21:46 [ main:2599 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-05-29 22:21:46 [ main:2604 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-05-29 22:21:46 [ main:2608 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:21:46 [ main:2608 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-05-29 22:21:46 [ main:2616 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@48326ebf] of Hibernate SessionFactory for HibernateTransactionManager
2017-05-29 22:21:46 [ main:2616 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:46 [ main:2617 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-05-29 22:21:46 [ main:2617 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:21:46 [ main:2617 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:21:46 [ main:2617 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:21:46 [ main:2620 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-05-29 22:21:46 [ main:2620 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2620 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-05-29 22:21:46 [ main:2620 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User,boolean)
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2621 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2622 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:21:46 [ main:2623 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2624 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2625 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:21:46 [ main:2625 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:21:46 [ main:2625 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:21:46 [ main:2655 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-05-29 22:21:46 [ main:2655 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-05-29 22:21:46 [ main:2656 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-05-29 22:21:46 [ main:2656 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-05-29 22:21:46 [ main:2659 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:21:46 [ main:2659 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:46 [ main:2659 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2659 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:21:46 [ main:2659 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@61187ada]
2017-05-29 22:21:46 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2661 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2661 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2661 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2661 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2661 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2662 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2663 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2664 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:21:46 [ main:2665 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2666 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:21:46 [ main:2667 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2667 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2667 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:21:46 [ main:2667 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:21:46 [ main:2667 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:21:46 [ main:2684 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-05-29 22:21:46 [ main:2684 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-05-29 22:21:46 [ main:2684 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-05-29 22:21:46 [ main:2684 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-05-29 22:21:46 [ main:2688 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:21:46 [ main:2689 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:46 [ main:2689 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2689 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:21:46 [ main:2689 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@28056c48]
2017-05-29 22:21:46 [ main:2690 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-05-29 22:21:46 [ main:2690 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2690 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int)
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2691 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int,boolean)
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node)
2017-05-29 22:21:46 [ main:2692 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:21:46 [ main:2693 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:21:46 [ main:2694 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:21:46 [ main:2695 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:21:46 [ main:2696 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:21:46 [ main:2697 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:21:46 [ main:2714 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-05-29 22:21:46 [ main:2714 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-05-29 22:21:46 [ main:2714 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-05-29 22:21:46 [ main:2714 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-05-29 22:21:46 [ main:2717 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:21:46 [ main:2717 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:46 [ main:2717 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2717 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:21:46 [ main:2717 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@254272a8]
2017-05-29 22:21:46 [ main:2718 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2718 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUser(dtx.oa.rbac.model.User)
2017-05-29 22:21:46 [ main:2718 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2718 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.User)
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2719 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Adding transactional method [deleteRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.User,dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(dtx.oa.rbac.model.User,java.util.List)
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2720 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2721 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:21:46 [ main:2722 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2723 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:21:46 [ main:2723 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2723 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:21:46 [ main:2723 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2723 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2723 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:21:46 [ main:2723 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:21:46 [ main:2723 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:21:46 [ main:2736 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-05-29 22:21:46 [ main:2736 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-05-29 22:21:46 [ main:2736 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-05-29 22:21:46 [ main:2736 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-05-29 22:21:46 [ main:2739 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:21:46 [ main:2739 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:46 [ main:2739 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2739 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:21:46 [ main:2739 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@1cf52a3b]
2017-05-29 22:21:46 [ main:2740 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2740 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2740 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:21:46 [ main:2740 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Adding transactional method [deleteRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.Node,dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Adding transactional method [queryByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-05-29 22:21:46 [ main:2741 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2742 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2742 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2742 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-05-29 22:21:46 [ main:2742 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2742 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:21:46 [ main:2742 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2742 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:21:46 [ main:2743 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2743 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:21:46 [ main:2743 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2743 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:21:46 [ main:2743 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2743 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2743 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2743 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:21:46 [ main:2743 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:21:46 [ main:2744 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:21:46 [ main:2745 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:21:46 [ main:2757 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-05-29 22:21:46 [ main:2757 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-05-29 22:21:46 [ main:2757 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:21:46 [ main:2757 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:21:46 [ main:2757 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:21:46 [ main:2757 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:21:46 [ main:2757 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:21:46 [ main:2835 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:46 [ main:2856 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2efbfe50] for Hibernate transaction
2017-05-29 22:21:46 [ main:2857 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2efbfe50]
2017-05-29 22:21:46 [ main:2869 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:2989 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:2989 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2efbfe50]
2017-05-29 22:21:47 [ main:2995 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2efbfe50] after transaction
2017-05-29 22:21:47 [ main:2995 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:2996 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:2996 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1fa91d58] for Hibernate transaction
2017-05-29 22:21:47 [ main:2997 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1fa91d58]
2017-05-29 22:21:47 [ main:2997 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:2999 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:2999 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1fa91d58]
2017-05-29 22:21:47 [ main:3000 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1fa91d58] after transaction
2017-05-29 22:21:47 [ main:3000 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3007 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:21:47 [ main:3017 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3017 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4b5e5005] for Hibernate transaction
2017-05-29 22:21:47 [ main:3017 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4b5e5005]
2017-05-29 22:21:47 [ main:3018 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3023 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3023 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4b5e5005]
2017-05-29 22:21:47 [ main:3024 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4b5e5005] after transaction
2017-05-29 22:21:47 [ main:3024 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3024 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3024 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@54a385cf] for Hibernate transaction
2017-05-29 22:21:47 [ main:3024 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@54a385cf]
2017-05-29 22:21:47 [ main:3025 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3034 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3034 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@54a385cf]
2017-05-29 22:21:47 [ main:3039 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@54a385cf] after transaction
2017-05-29 22:21:47 [ main:3039 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3039 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3039 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5fa74cd3] for Hibernate transaction
2017-05-29 22:21:47 [ main:3039 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5fa74cd3]
2017-05-29 22:21:47 [ main:3040 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3043 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3043 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5fa74cd3]
2017-05-29 22:21:47 [ main:3044 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5fa74cd3] after transaction
2017-05-29 22:21:47 [ main:3044 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3052 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:21:47 [ main:3055 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3056 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@292e2c90] for Hibernate transaction
2017-05-29 22:21:47 [ main:3056 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@292e2c90]
2017-05-29 22:21:47 [ main:3056 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3061 ] - [ DEBUG ] Initiating transaction rollback
2017-05-29 22:21:47 [ main:3061 ] - [ DEBUG ] Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@292e2c90]
2017-05-29 22:21:47 [ main:3061 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@292e2c90] after transaction
2017-05-29 22:21:47 [ main:3061 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3067 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:21:47 [ main:3079 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3080 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@563803f0] for Hibernate transaction
2017-05-29 22:21:47 [ main:3080 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@563803f0]
2017-05-29 22:21:47 [ main:3081 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3084 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3085 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@563803f0]
2017-05-29 22:21:47 [ main:3086 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@563803f0] after transaction
2017-05-29 22:21:47 [ main:3086 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3086 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3087 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@63ef41b7] for Hibernate transaction
2017-05-29 22:21:47 [ main:3087 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@63ef41b7]
2017-05-29 22:21:47 [ main:3087 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3096 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3096 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@63ef41b7]
2017-05-29 22:21:47 [ main:3099 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@63ef41b7] after transaction
2017-05-29 22:21:47 [ main:3099 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3099 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3099 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@78641287] for Hibernate transaction
2017-05-29 22:21:47 [ main:3099 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@78641287]
2017-05-29 22:21:47 [ main:3099 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3101 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3101 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@78641287]
2017-05-29 22:21:47 [ main:3102 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@78641287] after transaction
2017-05-29 22:21:47 [ main:3102 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3103 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3103 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@6bb580dc] for Hibernate transaction
2017-05-29 22:21:47 [ main:3103 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@6bb580dc]
2017-05-29 22:21:47 [ main:3104 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3105 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3105 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@6bb580dc]
2017-05-29 22:21:47 [ main:3108 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@6bb580dc] after transaction
2017-05-29 22:21:47 [ main:3108 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3108 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3108 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3ffbf0f4] for Hibernate transaction
2017-05-29 22:21:47 [ main:3108 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3ffbf0f4]
2017-05-29 22:21:47 [ main:3109 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3110 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3110 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3ffbf0f4]
2017-05-29 22:21:47 [ main:3111 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3ffbf0f4] after transaction
2017-05-29 22:21:47 [ main:3111 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3112 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3112 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@32a9805a] for Hibernate transaction
2017-05-29 22:21:47 [ main:3112 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@32a9805a]
2017-05-29 22:21:47 [ main:3112 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3113 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3113 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@32a9805a]
2017-05-29 22:21:47 [ main:3116 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@32a9805a] after transaction
2017-05-29 22:21:47 [ main:3116 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3116 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3116 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7cb1bd6c] for Hibernate transaction
2017-05-29 22:21:47 [ main:3116 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7cb1bd6c]
2017-05-29 22:21:47 [ main:3117 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3118 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3118 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7cb1bd6c]
2017-05-29 22:21:47 [ main:3119 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7cb1bd6c] after transaction
2017-05-29 22:21:47 [ main:3119 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3124 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:21:47 [ main:3137 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3137 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@43fa0fc6] for Hibernate transaction
2017-05-29 22:21:47 [ main:3137 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@43fa0fc6]
2017-05-29 22:21:47 [ main:3138 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3139 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3139 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@43fa0fc6]
2017-05-29 22:21:47 [ main:3140 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@43fa0fc6] after transaction
2017-05-29 22:21:47 [ main:3140 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3140 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3140 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@aed41bc] for Hibernate transaction
2017-05-29 22:21:47 [ main:3140 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@aed41bc]
2017-05-29 22:21:47 [ main:3141 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3142 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3142 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@aed41bc]
2017-05-29 22:21:47 [ main:3143 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@aed41bc] after transaction
2017-05-29 22:21:47 [ main:3143 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3149 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:21:47 [ main:3163 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3163 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1715beb4] for Hibernate transaction
2017-05-29 22:21:47 [ main:3163 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1715beb4]
2017-05-29 22:21:47 [ main:3164 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3167 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3167 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1715beb4]
2017-05-29 22:21:47 [ main:3168 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1715beb4] after transaction
2017-05-29 22:21:47 [ main:3168 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3168 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3168 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@4012a6de] for Hibernate transaction
2017-05-29 22:21:47 [ main:3168 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@4012a6de]
2017-05-29 22:21:47 [ main:3169 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3171 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3172 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@4012a6de]
2017-05-29 22:21:47 [ main:3181 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@4012a6de] after transaction
2017-05-29 22:21:47 [ main:3181 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3182 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3183 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@193051e4] for Hibernate transaction
2017-05-29 22:21:47 [ main:3183 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@193051e4]
2017-05-29 22:21:47 [ main:3184 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3185 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3185 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@193051e4]
2017-05-29 22:21:47 [ main:3186 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@193051e4] after transaction
2017-05-29 22:21:47 [ main:3186 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:21:47 [ main:3192 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:21:47 [ main:3202 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:21:47 [ main:3202 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@da1f813] for Hibernate transaction
2017-05-29 22:21:47 [ main:3202 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@da1f813]
2017-05-29 22:21:47 [ main:3202 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:21:47 [ main:3203 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:21:47 [ main:3203 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@da1f813]
2017-05-29 22:21:47 [ main:3203 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@da1f813] after transaction
2017-05-29 22:21:47 [ main:3203 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:06 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@4efafe96: display name [org.springframework.context.support.ClassPathXmlApplicationContext@4efafe96]; startup date [Mon May 29 22:22:06 CST 2017]; root of context hierarchy
2017-05-29 22:22:06 [ main:53 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 22:22:06 [ main:68 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 22:22:06 [ main:94 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 22:22:06 [ main:95 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 22:22:27 [ main:20946 ] - [ DEBUG ] Loading bean definitions
2017-05-29 22:22:27 [ main:20965 ] - [ DEBUG ] Loaded mappings [{http://www.springframework.org/schema/p=org.springframework.beans.factory.xml.SimplePropertyNamespaceHandler, http://www.springframework.org/schema/lang=org.springframework.scripting.config.LangNamespaceHandler, http://www.springframework.org/schema/jee=org.springframework.ejb.config.JeeNamespaceHandler, http://www.springframework.org/schema/aop=org.springframework.aop.config.AopNamespaceHandler, http://www.springframework.org/schema/util=org.springframework.beans.factory.xml.UtilNamespaceHandler, http://www.springframework.org/schema/jms=org.springframework.jms.config.JmsNamespaceHandler, http://www.springframework.org/schema/tx=org.springframework.transaction.config.TxNamespaceHandler, http://www.springframework.org/schema/context=org.springframework.context.config.ContextNamespaceHandler}]
2017-05-29 22:22:27 [ main:20989 ] - [ DEBUG ] Loaded 12 bean definitions from location pattern [beans.xml]
2017-05-29 22:22:27 [ main:20990 ] - [ INFO ] Bean factory for application context [org.springframework.context.support.ClassPathXmlApplicationContext@4efafe96]: org.springframework.beans.factory.support.DefaultListableBeanFactory@191e1e8c
2017-05-29 22:22:27 [ main:20990 ] - [ DEBUG ] 12 beans defined in org.springframework.context.support.ClassPathXmlApplicationContext@4efafe96: display name [org.springframework.context.support.ClassPathXmlApplicationContext@4efafe96]; startup date [Mon May 29 22:22:06 CST 2017]; root of context hierarchy
2017-05-29 22:22:27 [ main:21006 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:22:27 [ main:21006 ] - [ DEBUG ] Creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:22:27 [ main:21022 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.aop.config.internalAutoProxyCreator' to allow for resolving potential circular references
2017-05-29 22:22:27 [ main:21034 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:22:27 [ main:21036 ] - [ DEBUG ] Unable to locate MessageSource with name 'messageSource': using default [org.springframework.context.support.DelegatingMessageSource@46aea068]
2017-05-29 22:22:27 [ main:21037 ] - [ DEBUG ] Unable to locate ApplicationEventMulticaster with name 'applicationEventMulticaster': using default [org.springframework.context.event.SimpleApplicationEventMulticaster@1ab37bd]
2017-05-29 22:22:27 [ main:21038 ] - [ INFO ] Pre-instantiating singletons in org.springframework.beans.factory.support.DefaultListableBeanFactory@191e1e8c: defining beans [dataSource,sessionFactory,userDao,roleDao,nodeDao,roleUserDao,roleNodeDao,txManager,org.springframework.aop.config.internalAutoProxyCreator,org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0,org.springframework.transaction.interceptor.TransactionInterceptor#0,org.springframework.transaction.config.internalTransactionAdvisor]; root of factory hierarchy
2017-05-29 22:22:27 [ main:21039 ] - [ DEBUG ] Creating shared instance of singleton bean 'dataSource'
2017-05-29 22:22:27 [ main:21039 ] - [ DEBUG ] Creating instance of bean 'dataSource'
2017-05-29 22:22:27 [ main:21042 ] - [ DEBUG ] Eagerly caching bean 'dataSource' to allow for resolving potential circular references
2017-05-29 22:22:27 [ main:21057 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:27 [ main:21057 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:27 [ main:21058 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.config.internalTransactionAdvisor' to allow for resolving potential circular references
2017-05-29 22:22:27 [ main:21062 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:22:27 [ main:21062 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:22:27 [ main:21063 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0' to allow for resolving potential circular references
2017-05-29 22:22:27 [ main:21066 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:22:27 [ main:21067 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:27 [ main:21070 ] - [ DEBUG ] Finished creating instance of bean 'dataSource'
2017-05-29 22:22:27 [ main:21070 ] - [ DEBUG ] Creating shared instance of singleton bean 'sessionFactory'
2017-05-29 22:22:27 [ main:21070 ] - [ DEBUG ] Creating instance of bean 'sessionFactory'
2017-05-29 22:22:27 [ main:21089 ] - [ DEBUG ] Eagerly caching bean 'sessionFactory' to allow for resolving potential circular references
2017-05-29 22:22:27 [ main:21097 ] - [ DEBUG ] Returning cached instance of singleton bean 'dataSource'
2017-05-29 22:22:27 [ main:21098 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'sessionFactory'
2017-05-29 22:22:28 [ main:21231 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac]
2017-05-29 22:22:28 [ main:21231 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/test-classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:22:28 [ main:21231 ] - [ DEBUG ] Looking for matching resources in directory tree [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac]
2017-05-29 22:22:28 [ main:21231 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:22:28 [ main:21231 ] - [ DEBUG ] Searching directory [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model] for files matching pattern [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model**/*.class]
2017-05-29 22:22:28 [ main:21233 ] - [ DEBUG ] Resolved location pattern [classpath*:dtx/oa/rbac/model**/*.class] to resources [file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTree.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleNode.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/User.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Role.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/RoleUser.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTreeLeaf.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/Node.class], file [/home/datouxi/NetBeansProjects/dtx.oa/rbac/target/classes/dtx/oa/rbac/model/NodeTree.class]]
2017-05-29 22:22:28 [ main:21430 ] - [ INFO ] Building new Hibernate SessionFactory
2017-05-29 22:22:28 [ main:21767 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:28 [ main:21770 ] - [ DEBUG ] Finished creating instance of bean 'sessionFactory'
2017-05-29 22:22:28 [ main:21770 ] - [ DEBUG ] Creating shared instance of singleton bean 'userDao'
2017-05-29 22:22:28 [ main:21770 ] - [ DEBUG ] Creating instance of bean 'userDao'
2017-05-29 22:22:28 [ main:21771 ] - [ DEBUG ] Eagerly caching bean 'userDao' to allow for resolving potential circular references
2017-05-29 22:22:28 [ main:21774 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:22:28 [ main:21775 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:28 [ main:21780 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:28 [ main:21787 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21795 ] - [ DEBUG ] Creating implicit proxy for bean 'userDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:22:28 [ main:21800 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.UserDao@459fd42d]
2017-05-29 22:22:28 [ main:21856 ] - [ DEBUG ] Creating shared instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:22:28 [ main:21856 ] - [ DEBUG ] Creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:22:28 [ main:21856 ] - [ DEBUG ] Eagerly caching bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0' to allow for resolving potential circular references
2017-05-29 22:22:28 [ main:21859 ] - [ DEBUG ] Creating shared instance of singleton bean 'txManager'
2017-05-29 22:22:28 [ main:21859 ] - [ DEBUG ] Creating instance of bean 'txManager'
2017-05-29 22:22:28 [ main:21865 ] - [ DEBUG ] Eagerly caching bean 'txManager' to allow for resolving potential circular references
2017-05-29 22:22:28 [ main:21870 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:22:28 [ main:21870 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'txManager'
2017-05-29 22:22:28 [ main:21877 ] - [ INFO ] Using DataSource [org.apache.commons.dbcp.BasicDataSource@66c83aa6] of Hibernate SessionFactory for HibernateTransactionManager
2017-05-29 22:22:28 [ main:21877 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:28 [ main:21878 ] - [ DEBUG ] Finished creating instance of bean 'txManager'
2017-05-29 22:22:28 [ main:21878 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:22:28 [ main:21878 ] - [ DEBUG ] Invoking afterPropertiesSet() on bean with name 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:22:28 [ main:21878 ] - [ DEBUG ] Finished creating instance of bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:22:28 [ main:21881 ] - [ DEBUG ] Adding transactional method [addUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.UserDao.addUser(dtx.oa.rbac.model.User)
2017-05-29 22:22:28 [ main:21882 ] - [ DEBUG ] Adding transactional method [getUserById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserById(java.lang.String)
2017-05-29 22:22:28 [ main:21882 ] - [ DEBUG ] Adding transactional method [getUserByAccount] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.User dtx.oa.rbac.dao.UserDao.getUserByAccount(java.lang.String)
2017-05-29 22:22:28 [ main:21882 ] - [ DEBUG ] Adding transactional method [getUsersByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.UserDao.getUsersByStatus(boolean)
2017-05-29 22:22:28 [ main:21882 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21882 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User,boolean)
2017-05-29 22:22:28 [ main:21882 ] - [ DEBUG ] Adding transactional method [deleteUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.deleteUser(dtx.oa.rbac.model.User)
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Adding transactional method [updateUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateUser(dtx.oa.rbac.model.User)
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Adding transactional method [updateLoginMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.updateLoginMessage(dtx.oa.rbac.model.User)
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Adding transactional method [isAdmin] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.UserDao.isAdmin(dtx.oa.rbac.model.User)
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21883 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:22:28 [ main:21884 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:22:28 [ main:21885 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21886 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:22:28 [ main:21920 ] - [ DEBUG ] Finished creating instance of bean 'userDao'
2017-05-29 22:22:28 [ main:21920 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleDao'
2017-05-29 22:22:28 [ main:21920 ] - [ DEBUG ] Creating instance of bean 'roleDao'
2017-05-29 22:22:28 [ main:21920 ] - [ DEBUG ] Eagerly caching bean 'roleDao' to allow for resolving potential circular references
2017-05-29 22:22:28 [ main:21924 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:22:28 [ main:21924 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:28 [ main:21924 ] - [ DEBUG ] Adding transactional method [getRoleById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21924 ] - [ DEBUG ] Creating implicit proxy for bean 'roleDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:22:28 [ main:21924 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleDao@472250c4]
2017-05-29 22:22:28 [ main:21925 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Role dtx.oa.rbac.dao.RoleDao.getRoleById(java.lang.String)
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getByStatus(boolean)
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String,boolean)
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleDao.getChilds(java.lang.String)
2017-05-29 22:22:28 [ main:21926 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllChilds(java.lang.String)
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles(boolean)
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Adding transactional method [getAllRoles] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleTree dtx.oa.rbac.dao.RoleDao.getAllRoles()
2017-05-29 22:22:28 [ main:21927 ] - [ DEBUG ] Adding transactional method [updateRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRole(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Adding transactional method [updateRoleMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateRoleMessage(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateParent(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.updateStatus(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role,boolean)
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Adding transactional method [deleteRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleDao.deleteRole(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21928 ] - [ DEBUG ] Adding transactional method [addRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.RoleDao.addRole(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:22:28 [ main:21929 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:22:28 [ main:21930 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21931 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:22:28 [ main:21948 ] - [ DEBUG ] Finished creating instance of bean 'roleDao'
2017-05-29 22:22:28 [ main:21948 ] - [ DEBUG ] Creating shared instance of singleton bean 'nodeDao'
2017-05-29 22:22:28 [ main:21948 ] - [ DEBUG ] Creating instance of bean 'nodeDao'
2017-05-29 22:22:28 [ main:21949 ] - [ DEBUG ] Eagerly caching bean 'nodeDao' to allow for resolving potential circular references
2017-05-29 22:22:28 [ main:21953 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:22:28 [ main:21953 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:28 [ main:21953 ] - [ DEBUG ] Adding transactional method [getByStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21953 ] - [ DEBUG ] Creating implicit proxy for bean 'nodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:22:28 [ main:21953 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.NodeDao@2e18ecde]
2017-05-29 22:22:28 [ main:21955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByStatus(boolean)
2017-05-29 22:22:28 [ main:21955 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:22:28 [ main:21955 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String,boolean)
2017-05-29 22:22:28 [ main:21955 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:22:28 [ main:21955 ] - [ DEBUG ] Adding transactional method [getChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21955 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChilds(java.lang.String)
2017-05-29 22:22:28 [ main:21955 ] - [ DEBUG ] Adding transactional method [getNodeById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.Node dtx.oa.rbac.dao.NodeDao.getNodeById(java.lang.String)
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Adding transactional method [getByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getByType(int)
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int,boolean)
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int,boolean)
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(dtx.oa.rbac.model.Node,int)
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Adding transactional method [getChildsByType] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.NodeDao.getChildsByType(java.lang.String,int)
2017-05-29 22:22:28 [ main:21956 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes()
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Adding transactional method [getAllNodes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllNodes(boolean)
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Adding transactional method [getNodeTypes] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.LinkedHashMap dtx.oa.rbac.dao.NodeDao.getNodeTypes()
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Adding transactional method [updateNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNode(dtx.oa.rbac.model.Node)
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Adding transactional method [updateNodeMessage] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateNodeMessage(dtx.oa.rbac.model.Node)
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node)
2017-05-29 22:22:28 [ main:21957 ] - [ DEBUG ] Adding transactional method [deleteNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.deleteNode(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Adding transactional method [addNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String dtx.oa.rbac.dao.NodeDao.addNode(dtx.oa.rbac.model.Node)
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String)
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node)
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(dtx.oa.rbac.model.Node,boolean)
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Adding transactional method [getAllChilds] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.NodeTree dtx.oa.rbac.dao.NodeDao.getAllChilds(java.lang.String,boolean)
2017-05-29 22:22:28 [ main:21958 ] - [ DEBUG ] Adding transactional method [updateParent] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateParent(dtx.oa.rbac.model.Node)
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Adding transactional method [updateStatus] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.NodeDao.updateStatus(dtx.oa.rbac.model.Node)
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21959 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:22:28 [ main:21960 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:22:28 [ main:21961 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21962 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21962 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:22:28 [ main:21979 ] - [ DEBUG ] Finished creating instance of bean 'nodeDao'
2017-05-29 22:22:28 [ main:21979 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleUserDao'
2017-05-29 22:22:28 [ main:21979 ] - [ DEBUG ] Creating instance of bean 'roleUserDao'
2017-05-29 22:22:28 [ main:21979 ] - [ DEBUG ] Eagerly caching bean 'roleUserDao' to allow for resolving potential circular references
2017-05-29 22:22:28 [ main:21982 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:22:28 [ main:21982 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:28 [ main:21982 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21982 ] - [ DEBUG ] Creating implicit proxy for bean 'roleUserDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:22:28 [ main:21982 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleUserDao@5661aa2f]
2017-05-29 22:22:28 [ main:21983 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Adding transactional method [deleteRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Adding transactional method [addRoleUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.addRoleUser(dtx.oa.rbac.model.User,dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Adding transactional method [addRoleUsers] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21984 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.dao.RoleUserDao.addRoleUsers(dtx.oa.rbac.model.User,java.util.List)
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Adding transactional method [queryByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByUser(dtx.oa.rbac.model.User)
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Adding transactional method [getRoleByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleUserDao.getRoleByUser(dtx.oa.rbac.model.User)
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleUser dtx.oa.rbac.dao.RoleUserDao.queryById(java.lang.String)
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.RoleUser)
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Adding transactional method [deleteByUser] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleUserDao.deleteByUser(dtx.oa.rbac.model.User)
2017-05-29 22:22:28 [ main:21985 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21986 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21987 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:21988 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:22:28 [ main:22001 ] - [ DEBUG ] Finished creating instance of bean 'roleUserDao'
2017-05-29 22:22:28 [ main:22001 ] - [ DEBUG ] Creating shared instance of singleton bean 'roleNodeDao'
2017-05-29 22:22:28 [ main:22001 ] - [ DEBUG ] Creating instance of bean 'roleNodeDao'
2017-05-29 22:22:28 [ main:22002 ] - [ DEBUG ] Eagerly caching bean 'roleNodeDao' to allow for resolving potential circular references
2017-05-29 22:22:28 [ main:22004 ] - [ DEBUG ] Returning cached instance of singleton bean 'sessionFactory'
2017-05-29 22:22:28 [ main:22004 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:28 [ main:22005 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22005 ] - [ DEBUG ] Creating implicit proxy for bean 'roleNodeDao' with 0 common interceptors and 1 specific interceptors
2017-05-29 22:22:28 [ main:22005 ] - [ DEBUG ] Creating CGLIB2 proxy: target source is SingletonTargetSource for target object [dtx.oa.rbac.dao.RoleNodeDao@2e781d9e]
2017-05-29 22:22:28 [ main:22006 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:22006 ] - [ DEBUG ] Adding transactional method [deleteByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22006 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByRole(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:22:28 [ main:22006 ] - [ DEBUG ] Adding transactional method [queryByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22006 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:22:28 [ main:22006 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22006 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:22006 ] - [ DEBUG ] Adding transactional method [getNodesByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22006 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.getNodesByRole(java.util.List)
2017-05-29 22:22:28 [ main:22006 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Adding transactional method [deleteByNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteByNode(dtx.oa.rbac.model.Node)
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Adding transactional method [deleteRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.dao.RoleNodeDao.deleteRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.RoleNode)
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Adding transactional method [addRoleNode] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.addRoleNode(dtx.oa.rbac.model.Node,dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Adding transactional method [queryByRole] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.dao.RoleNodeDao.queryByRole(dtx.oa.rbac.model.Role)
2017-05-29 22:22:28 [ main:22007 ] - [ DEBUG ] Adding transactional method [queryById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public dtx.oa.rbac.model.RoleNode dtx.oa.rbac.dao.RoleNodeDao.queryById(java.lang.String)
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Adding transactional method [add] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.io.Serializable dtx.oa.rbac.basic.BasicDao.add(java.lang.Object)
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Adding transactional method [delete] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.delete(java.lang.Object)
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public int dtx.oa.rbac.basic.BasicDao.update(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Adding transactional method [update] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public boolean dtx.oa.rbac.basic.BasicDao.update(java.lang.Object)
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Adding transactional method [setSessionFactory] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public void dtx.oa.rbac.basic.BasicDao.setSessionFactory(org.hibernate.SessionFactory)
2017-05-29 22:22:28 [ main:22008 ] - [ DEBUG ] Adding transactional method [findById] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.findById(java.lang.Class,java.io.Serializable)
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[],int,int)
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Adding transactional method [executeQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.util.List dtx.oa.rbac.basic.BasicDao.executeQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Adding transactional method [uniqueQuery] with attribute [PROPAGATION_REQUIRED,ISOLATION_DEFAULT]
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.Object dtx.oa.rbac.basic.BasicDao.uniqueQuery(java.lang.String,java.lang.Object[])
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Found finalize() method - using NO_OVERRIDE
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Found 'equals' method: public boolean java.lang.Object.equals(java.lang.Object)
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: public java.lang.String java.lang.Object.toString()
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Found 'hashCode' method: public native int java.lang.Object.hashCode()
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Unable to apply any optimisations to advised method: protected native java.lang.Object java.lang.Object.clone() throws java.lang.CloneNotSupportedException
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.springframework.aop.Advisor)
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Method is declared on Advised interface: public abstract int org.springframework.aop.framework.Advised.indexOf(org.aopalliance.aop.Advice)
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isFrozen()
2017-05-29 22:22:28 [ main:22009 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.TargetSource org.springframework.aop.framework.Advised.getTargetSource()
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvisor(int,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setTargetSource(org.springframework.aop.TargetSource)
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setPreFiltered(boolean)
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isProxyTargetClass()
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.setExposeProxy(boolean)
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isExposeProxy()
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isPreFiltered()
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class[] org.springframework.aop.framework.Advised.getProxiedInterfaces()
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.isInterfaceProxied(java.lang.Class)
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract org.springframework.aop.Advisor[] org.springframework.aop.framework.Advised.getAdvisors()
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvisor(org.springframework.aop.Advisor)
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.removeAdvisor(int) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.replaceAdvisor(org.springframework.aop.Advisor,org.springframework.aop.Advisor) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract boolean org.springframework.aop.framework.Advised.removeAdvice(org.aopalliance.aop.Advice)
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.String org.springframework.aop.framework.Advised.toProxyConfigString()
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract void org.springframework.aop.framework.Advised.addAdvice(int,org.aopalliance.aop.Advice) throws org.springframework.aop.framework.AopConfigException
2017-05-29 22:22:28 [ main:22010 ] - [ DEBUG ] Method is declared on Advised interface: public abstract java.lang.Class org.springframework.aop.TargetClassAware.getTargetClass()
2017-05-29 22:22:28 [ main:22023 ] - [ DEBUG ] Finished creating instance of bean 'roleNodeDao'
2017-05-29 22:22:28 [ main:22023 ] - [ DEBUG ] Returning cached instance of singleton bean 'txManager'
2017-05-29 22:22:28 [ main:22023 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.aop.config.internalAutoProxyCreator'
2017-05-29 22:22:28 [ main:22023 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.annotation.AnnotationTransactionAttributeSource#0'
2017-05-29 22:22:28 [ main:22023 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.interceptor.TransactionInterceptor#0'
2017-05-29 22:22:28 [ main:22023 ] - [ DEBUG ] Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
2017-05-29 22:22:28 [ main:22023 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:22:28 [ main:22108 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:28 [ main:22131 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1668a961] for Hibernate transaction
2017-05-29 22:22:28 [ main:22133 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1668a961]
2017-05-29 22:22:28 [ main:22146 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22294 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22294 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1668a961]
2017-05-29 22:22:29 [ main:22301 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1668a961] after transaction
2017-05-29 22:22:29 [ main:22301 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22302 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUsersByStatus]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22302 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@41f4a67e] for Hibernate transaction
2017-05-29 22:22:29 [ main:22302 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@41f4a67e]
2017-05-29 22:22:29 [ main:22303 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22304 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22304 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@41f4a67e]
2017-05-29 22:22:29 [ main:22305 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@41f4a67e] after transaction
2017-05-29 22:22:29 [ main:22305 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22312 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:22:29 [ main:22326 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22326 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@5ee6750f] for Hibernate transaction
2017-05-29 22:22:29 [ main:22327 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@5ee6750f]
2017-05-29 22:22:29 [ main:22327 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22332 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22332 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@5ee6750f]
2017-05-29 22:22:29 [ main:22333 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@5ee6750f] after transaction
2017-05-29 22:22:29 [ main:22333 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22334 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateLoginMessage]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22334 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2591ec56] for Hibernate transaction
2017-05-29 22:22:29 [ main:22334 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2591ec56]
2017-05-29 22:22:29 [ main:22334 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22344 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22344 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2591ec56]
2017-05-29 22:22:29 [ main:22348 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2591ec56] after transaction
2017-05-29 22:22:29 [ main:22348 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22349 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserById]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22349 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@2225883b] for Hibernate transaction
2017-05-29 22:22:29 [ main:22349 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@2225883b]
2017-05-29 22:22:29 [ main:22349 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22352 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22352 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@2225883b]
2017-05-29 22:22:29 [ main:22353 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@2225883b] after transaction
2017-05-29 22:22:29 [ main:22353 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22360 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:22:29 [ main:22363 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.addUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22363 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@13c93f78] for Hibernate transaction
2017-05-29 22:22:29 [ main:22363 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@13c93f78]
2017-05-29 22:22:29 [ main:22364 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22369 ] - [ DEBUG ] Initiating transaction rollback
2017-05-29 22:22:29 [ main:22369 ] - [ DEBUG ] Rolling back Hibernate transaction on Session [org.hibernate.impl.SessionImpl@13c93f78]
2017-05-29 22:22:29 [ main:22369 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@13c93f78] after transaction
2017-05-29 22:22:29 [ main:22369 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22374 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:22:29 [ main:22385 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22385 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@42f00500] for Hibernate transaction
2017-05-29 22:22:29 [ main:22385 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@42f00500]
2017-05-29 22:22:29 [ main:22386 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22387 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22387 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@42f00500]
2017-05-29 22:22:29 [ main:22388 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@42f00500] after transaction
2017-05-29 22:22:29 [ main:22388 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22389 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22389 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@c2ffff] for Hibernate transaction
2017-05-29 22:22:29 [ main:22389 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@c2ffff]
2017-05-29 22:22:29 [ main:22389 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22396 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22396 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@c2ffff]
2017-05-29 22:22:29 [ main:22399 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@c2ffff] after transaction
2017-05-29 22:22:29 [ main:22399 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22399 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22400 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@78bfe1f4] for Hibernate transaction
2017-05-29 22:22:29 [ main:22400 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@78bfe1f4]
2017-05-29 22:22:29 [ main:22400 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22402 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22402 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@78bfe1f4]
2017-05-29 22:22:29 [ main:22402 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@78bfe1f4] after transaction
2017-05-29 22:22:29 [ main:22402 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22404 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22404 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@10ee33cf] for Hibernate transaction
2017-05-29 22:22:29 [ main:22404 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@10ee33cf]
2017-05-29 22:22:29 [ main:22404 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22406 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22406 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@10ee33cf]
2017-05-29 22:22:29 [ main:22408 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@10ee33cf] after transaction
2017-05-29 22:22:29 [ main:22408 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22409 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22409 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@19d304ac] for Hibernate transaction
2017-05-29 22:22:29 [ main:22409 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@19d304ac]
2017-05-29 22:22:29 [ main:22409 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22411 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22411 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@19d304ac]
2017-05-29 22:22:29 [ main:22412 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@19d304ac] after transaction
2017-05-29 22:22:29 [ main:22412 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22412 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.updateUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22412 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@7cc03cf7] for Hibernate transaction
2017-05-29 22:22:29 [ main:22412 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@7cc03cf7]
2017-05-29 22:22:29 [ main:22413 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22414 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22414 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@7cc03cf7]
2017-05-29 22:22:29 [ main:22416 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@7cc03cf7] after transaction
2017-05-29 22:22:29 [ main:22416 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22417 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22417 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@444023d7] for Hibernate transaction
2017-05-29 22:22:29 [ main:22417 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@444023d7]
2017-05-29 22:22:29 [ main:22417 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22419 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22419 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@444023d7]
2017-05-29 22:22:29 [ main:22420 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@444023d7] after transaction
2017-05-29 22:22:29 [ main:22420 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22427 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:22:29 [ main:22440 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22440 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@8fee1db] for Hibernate transaction
2017-05-29 22:22:29 [ main:22440 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@8fee1db]
2017-05-29 22:22:29 [ main:22441 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22443 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22443 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@8fee1db]
2017-05-29 22:22:29 [ main:22444 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@8fee1db] after transaction
2017-05-29 22:22:29 [ main:22444 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22444 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22444 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@3d722bd] for Hibernate transaction
2017-05-29 22:22:29 [ main:22444 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@3d722bd]
2017-05-29 22:22:29 [ main:22444 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22446 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22446 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@3d722bd]
2017-05-29 22:22:29 [ main:22447 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@3d722bd] after transaction
2017-05-29 22:22:29 [ main:22447 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22454 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:22:29 [ main:22465 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22465 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@69b28a51] for Hibernate transaction
2017-05-29 22:22:29 [ main:22465 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@69b28a51]
2017-05-29 22:22:29 [ main:22466 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22467 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22467 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@69b28a51]
2017-05-29 22:22:29 [ main:22469 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@69b28a51] after transaction
2017-05-29 22:22:29 [ main:22469 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22469 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.deleteUser]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22469 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@452ec8e0] for Hibernate transaction
2017-05-29 22:22:29 [ main:22469 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@452ec8e0]
2017-05-29 22:22:29 [ main:22470 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22473 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22473 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@452ec8e0]
2017-05-29 22:22:29 [ main:22481 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@452ec8e0] after transaction
2017-05-29 22:22:29 [ main:22481 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22481 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.getUserByAccount]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22481 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@99e5c3] for Hibernate transaction
2017-05-29 22:22:29 [ main:22481 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@99e5c3]
2017-05-29 22:22:29 [ main:22482 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22482 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22482 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@99e5c3]
2017-05-29 22:22:29 [ main:22483 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@99e5c3] after transaction
2017-05-29 22:22:29 [ main:22483 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:29 [ main:22488 ] - [ DEBUG ] Returning cached instance of singleton bean 'userDao'
2017-05-29 22:22:29 [ main:22498 ] - [ DEBUG ] Creating new transaction with name [dtx.oa.rbac.dao.UserDao.isAdmin]: PROPAGATION_REQUIRED,ISOLATION_DEFAULT
2017-05-29 22:22:29 [ main:22498 ] - [ DEBUG ] Opened new Session [org.hibernate.impl.SessionImpl@1f38486b] for Hibernate transaction
2017-05-29 22:22:29 [ main:22498 ] - [ DEBUG ] Preparing JDBC Connection of Hibernate Session [org.hibernate.impl.SessionImpl@1f38486b]
2017-05-29 22:22:29 [ main:22499 ] - [ DEBUG ] Exposing Hibernate transaction as JDBC transaction [jdbc:mysql://localhost:3306/testsshdb?useUnicode=true&characterEncoding=utf-8, UserName=root@localhost, MySQL Connector Java]
2017-05-29 22:22:29 [ main:22499 ] - [ DEBUG ] Initiating transaction commit
2017-05-29 22:22:29 [ main:22499 ] - [ DEBUG ] Committing Hibernate transaction on Session [org.hibernate.impl.SessionImpl@1f38486b]
2017-05-29 22:22:29 [ main:22500 ] - [ DEBUG ] Closing Hibernate Session [org.hibernate.impl.SessionImpl@1f38486b] after transaction
2017-05-29 22:22:29 [ main:22500 ] - [ DEBUG ] Closing Hibernate Session
2017-05-29 22:22:46 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@e31468: display name [org.springframework.context.support.ClassPathXmlApplicationContext@e31468]; startup date [Mon May 29 22:22:46 CST 2017]; root of context hierarchy
2017-05-29 22:22:46 [ main:52 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 22:22:46 [ main:66 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 22:22:46 [ main:91 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 22:22:46 [ main:92 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
2017-05-29 22:23:37 [ main:0 ] - [ INFO ] Refreshing org.springframework.context.support.ClassPathXmlApplicationContext@5773a483: display name [org.springframework.context.support.ClassPathXmlApplicationContext@5773a483]; startup date [Mon May 29 22:23:37 CST 2017]; root of context hierarchy
2017-05-29 22:23:37 [ main:49 ] - [ INFO ] Loading XML bean definitions from class path resource [beans.xml]
2017-05-29 22:23:37 [ main:64 ] - [ DEBUG ] Using JAXP provider [com.sun.org.apache.xerces.internal.jaxp.DocumentBuilderFactoryImpl]
2017-05-29 22:23:37 [ main:90 ] - [ DEBUG ] Loading schema mappings from [META-INF/spring.schemas]
2017-05-29 22:23:37 [ main:91 ] - [ DEBUG ] Loaded schema mappings: {http://www.springframework.org/schema/lang/spring-lang-2.5.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang.xsd=org/springframework/scripting/config/spring-lang-2.5.xsd, http://www.springframework.org/schema/context/spring-context-2.5.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/jms/spring-jms-2.5.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/context/spring-context.xsd=org/springframework/context/config/spring-context-2.5.xsd, http://www.springframework.org/schema/aop/spring-aop.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/util/spring-util-2.0.xsd=org/springframework/beans/factory/xml/spring-util-2.0.xsd, http://www.springframework.org/schema/util/spring-util-2.5.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool-2.0.xsd=org/springframework/beans/factory/xml/spring-tool-2.0.xsd, http://www.springframework.org/schema/tx/spring-tx-2.0.xsd=org/springframework/transaction/config/spring-tx-2.0.xsd, http://www.springframework.org/schema/tool/spring-tool-2.5.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx-2.5.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.0.xsd=org/springframework/beans/factory/xml/spring-beans-2.0.xsd, http://www.springframework.org/schema/jms/spring-jms.xsd=org/springframework/jms/config/spring-jms-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans-2.5.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/beans/spring-beans.xsd=org/springframework/beans/factory/xml/spring-beans-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/tool/spring-tool.xsd=org/springframework/beans/factory/xml/spring-tool-2.5.xsd, http://www.springframework.org/schema/tx/spring-tx.xsd=org/springframework/transaction/config/spring-tx-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.0.xsd=org/springframework/ejb/config/spring-jee-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.0.xsd=org/springframework/aop/config/spring-aop-2.0.xsd, http://www.springframework.org/schema/aop/spring-aop-2.5.xsd=org/springframework/aop/config/spring-aop-2.5.xsd, http://www.springframework.org/schema/jee/spring-jee-2.5.xsd=org/springframework/ejb/config/spring-jee-2.5.xsd, http://www.springframework.org/schema/lang/spring-lang-2.0.xsd=org/springframework/scripting/config/spring-lang-2.0.xsd, http://www.springframework.org/schema/util/spring-util.xsd=org/springframework/beans/factory/xml/spring-util-2.5.xsd}
